{"version":3,"file":"process-backend.js","mappings":"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","sources":["webpack://@easylibs/process-backend/webpack/universalModuleDefinition","webpack://@easylibs/process-backend/./src/process-backend.ts","webpack://@easylibs/process-backend/@easylibs/fetch-request/webpack/universalModuleDefinition","webpack://@easylibs/process-backend/@easylibs/fetch-request/src/fetch-request.ts","webpack://@easylibs/process-backend/@easylibs/fetch-request/webpack/before-startup","webpack://@easylibs/process-backend/@easylibs/fetch-request/webpack/startup","webpack://@easylibs/process-backend/@easylibs/fetch-request/webpack/after-startup","webpack://@easylibs/process-backend/@easylibs/transformer/webpack/universalModuleDefinition","webpack://@easylibs/process-backend/@easylibs/transformer/src/transformer.ts","webpack://@easylibs/process-backend/@easylibs/transformer/webpack/before-startup","webpack://@easylibs/process-backend/@easylibs/transformer/webpack/startup","webpack://@easylibs/process-backend/@easylibs/transformer/webpack/after-startup","webpack://@easylibs/process-backend/@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/process-backend/@easylibs/utils/src/utils.ts","webpack://@easylibs/process-backend/webpack/bootstrap","webpack://@easylibs/process-backend/webpack/before-startup","webpack://@easylibs/process-backend/webpack/startup","webpack://@easylibs/process-backend/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"process-backend\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"process-backend\"] = factory();\n\telse\n\t\troot[\"process-backend\"] = factory();\n})(self, () => {\nreturn ","import FetchRequest from \"@easylibs/fetch-request\";\r\nimport TempData from \"@easylibs/tempdata\";\r\nimport {Transformer} from \"@easylibs/transformer\";\r\nimport Utils from \"@easylibs/utils\";\r\n\r\nexport default class ProcessBackend {\r\n  private _uri: string;\r\n  private _database: TempData;\r\n  private _response: any = null;\r\n  /**\r\n   *\r\n   * @param database - base de données\r\n   * @param uri - L'URL de destination où les données du formulaire seront envoyées.\r\n   */\r\n  constructor(database: TempData, uri: string) {\r\n    this._database = database;\r\n    this._uri = uri;\r\n  }\r\n  /**\r\n   * Persists data to the server.\r\n   *\r\n   * @param redirectURL - The URL to redirect to after the data is persisted.\r\n   * @param callback - The callback function to be called after the data is persisted.\r\n   * @returns A promise that resolves when the data is persisted.\r\n   */\r\n  public async persist(\r\n    redirectURL?: string,\r\n    callback: Function = (result: any) => {}\r\n  ): Promise<void> {\r\n    const elements = await this._database.getIndexedData();\r\n    const promises: any[] | PromiseLike<any[]> = [];\r\n    if (elements instanceof Array && elements.length > 0) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        ((currentIndex) => {\r\n          promises.push(\r\n            new Promise(async (resolve, reject) => {\r\n              try {\r\n                const data = await this._database._getData(\r\n                  currentIndex,\r\n                  \"classic-object\"\r\n                );\r\n                delete data[\"@base64String\"];\r\n                delete data[\"@id\"];\r\n                resolve(data);\r\n              } catch (error) {\r\n                reject(\"Désolé une probleme est survenu: \" + error);\r\n              }\r\n            })\r\n          );\r\n        })(i);\r\n      }\r\n    }\r\n    const formData = this.normalizeArrayField(await Promise.all(promises));\r\n    const setResponse = (result: any) => {\r\n      this._response = result;\r\n      callback(this._response);\r\n      if (redirectURL && this._response && this._response.success) {\r\n        return (window.location.href = redirectURL || \"/\");\r\n      }\r\n      return this._response;\r\n    };\r\n    new FetchRequest({\r\n      uri: this._uri,\r\n      data: formData,\r\n      onPostFetch: setResponse,\r\n      options: {\r\n        method: \"POST\",\r\n        acceptDataFormat: \"form-data\",\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * Saves form data to the server.\r\n   *\r\n   * @param data - The data object containing the submiter, callback, redirectUrl, and loader properties.\r\n   * @param data.submiter - The submit button element.\r\n   * @param data.callback - The callback function to be called after the data is saved.\r\n   * @param data.redirectUrl - The URL to redirect to after the data is saved.\r\n   * @param data.loader - The loader HTML content to display while saving the data.\r\n   */\r\n  public save(data: {\r\n    submiter: HTMLElement;\r\n    callback: Function;\r\n    redirectUrl?: string;\r\n    loader?: string;\r\n    preFetchAction?: Function;\r\n  }) {\r\n    const form =\r\n      (data.submiter.closest(\"form\") as HTMLFormElement) ??\r\n      (document.querySelector(\"form\") as HTMLFormElement);\r\n    data.submiter.addEventListener(\"click\", async (e) => {\r\n      e.preventDefault();\r\n      const isEmpty = await this._database._isEmpty();\r\n      if (true === isEmpty && !form.checkValidity()) {\r\n        return form.reportValidity();\r\n      }\r\n      const innerSubmiter = Utils.escape(data.submiter.innerHTML);\r\n      if (data.loader) {\r\n        data.submiter.innerHTML = data.loader;\r\n      }\r\n      if (true === isEmpty && form.checkValidity()) {\r\n        const formData = new FormData(form);\r\n        if(data.preFetchAction){data.preFetchAction(formData);}\r\n        const onPostFetch = function () {\r\n          const { response } = request;\r\n          data.submiter.innerHTML = innerSubmiter;\r\n          if (data.redirectUrl && response[\"success\"] === true) {\r\n            data.callback(response);\r\n            return (window.location.href = data.redirectUrl);\r\n          }\r\n          return data.callback(response);\r\n        };\r\n        const request = new FetchRequest({\r\n          uri: this._uri,\r\n          data: formData,\r\n          onPostFetch,\r\n          options: {\r\n            method: \"POST\",\r\n            acceptDataFormat: \"form-data\",\r\n          },\r\n        });\r\n        return;\r\n      }\r\n\r\n      form.setAttribute(\"novalidate\", \"\");\r\n      await this.persist(data.redirectUrl, (response: any) => {\r\n        data.submiter.innerHTML = innerSubmiter;\r\n        data.callback(response);\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Normalizes an array field into a FormData object.\r\n   * This method takes an array of data objects and normalizes it into a FormData object. It handles files within the data objects by transforming them into Blobs using a BlobTransformer. The resulting FormData object is returned.\r\n   * @param datas - The array of data objects to be normalized.\r\n   * @returns The normalized FormData object.\r\n   */\r\n  private normalizeArrayField(datas: Array<any>): FormData {\r\n    const transformer = new Transformer.BlobTransformer();\r\n    let index = 0;\r\n    return datas.reduce((result: FormData, data) => {\r\n      const objectsFormData = Object.keys(data).reduce((formData, key) => {\r\n        const files = data[key] as Array<File>;\r\n        if (Array.isArray(files) && files.length > 0) {\r\n          files.forEach((file) => {\r\n            formData.append(key, transformer.fromFile(file), file.name);\r\n          });\r\n        } else {\r\n          formData.set(key, data[key]);\r\n        }\r\n        return formData;\r\n      }, new FormData());\r\n      objectsFormData.forEach((value, key) => {\r\n        result.append(key, value);\r\n      });\r\n      index++;\r\n      return result;\r\n    }, new FormData());\r\n  }\r\n  /**\r\n   * Retourne la réponse du serveur.\r\n   */\r\n  public get response(): any {\r\n    return this._response;\r\n  }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fetch-request\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fetch-request\"] = factory();\n\telse\n\t\troot[\"fetch-request\"] = factory();\n})(self, () => {\nreturn ","declare type FetchRequestType = {\r\n    uri: string,\r\n    data?: Object|FormData|null,\r\n    submiter?: HTMLElement|null,\r\n    options?: {\r\n        method?: 'GET' | 'POST',\r\n        headers?: Object,\r\n        body?: any,\r\n        credentials?: \"omit\" | \"same-origin\",\r\n        mode?: \"cors\" | \"no-cors\" | \"same-origin\",\r\n        cache?: \"default\" | \"reload\" | \"no-cache\" | \"force-cache\" | \"only-if-cached\",\r\n        timeOut?: number,\r\n        fetchOptions?: RequestInit,\r\n        isBinaryFileDownload?: boolean,\r\n        contentType?: string,\r\n        acceptDataFormat?: \"form-data\" | \"classic-object\" | \"array\",\r\n    }\r\n    onPostFetch?: (response?:any) => any,\r\n    onPreFetch?: (that?:any) => any,\r\n    onSuccess?: (response:any) => any,\r\n    onError?: (error: unknown, status:number) => any\r\n}\r\n/**\r\n * Cette classe est une classe utilitaire conçue pour faciliter l'envoi de requêtes Fetch dans une application web. \r\n * Elle offre une interface simple pour effectuer des requêtes HTTP \r\n * et gérer les actions avant et après l'envoi de la requête.\r\n */\r\nexport default class FetchRequest{\r\n    private options: FetchRequestType;\r\n    private _response: any;\r\n    constructor(options: FetchRequestType) {\r\n        this.options = options;\r\n        if(options.submiter){\r\n            options.submiter.addEventListener('click', this.submitForm);\r\n        }else{\r\n            this.submitForm()\r\n        }\r\n    }\r\n    private fetchData = async () => {\r\n        try {\r\n            if(!this.options){\r\n                throw new Error(`Missing Options for the request`)\r\n            }\r\n            if(!this.options.uri){\r\n                throw new Error(\"URI is required\");\r\n            }\r\n            if(!this.options.options || !this.options.options.method){\r\n                throw new Error(\"The calling method is required\");\r\n            }\r\n            const response = await fetch(this.options.uri, {\r\n                method: this.options.options.method ,\r\n                body: this._formData,\r\n                headers: {\r\n                    'X-Requested-With': 'XMLHttpRequest'\r\n                }\r\n            });\r\n            const dataResponse = await response.json();\r\n            this._response = dataResponse;\r\n            if(this.options.onPostFetch)\r\n            {this.options.onPostFetch(dataResponse);}\r\n            if(this.options.onSuccess && response.status === 200){\r\n                return this.options.onSuccess(dataResponse);\r\n            }\r\n            \r\n        } catch (error) {\r\n            if(this.options.onError && this._response.status !== 200){\r\n                return this.options.onError(error, this._response.status);\r\n            }\r\n            console.error(error);\r\n        }\r\n    }\r\n    private preFetch = async () => {\r\n        if(typeof this.options.onPreFetch === 'function') {\r\n            let data = await this.options.onPreFetch(this.options.data);\r\n            if(data){\r\n                this.options.data = data.data;\r\n            }\r\n        }\r\n    }\r\n    private postFetch = async () => {\r\n        if(this.options.submiter instanceof HTMLButtonElement)\r\n        {this.options.submiter.removeAttribute('disabled');}\r\n        return this.options.onPostFetch ? this.options.onPostFetch() : undefined;\r\n    }\r\n    private submitForm = async () => {\r\n        try{\r\n            if(this.options.onPreFetch){await this.preFetch();}\r\n            await this.fetchData();\r\n            if(this.options.onPostFetch){await this.postFetch();}\r\n        }catch(error){\r\n            console.error('Error executing query : ', error);\r\n        }\r\n    };\r\n    private createFormData = (data: object) => {\r\n        const formData = new FormData();\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value ?? \"\");\r\n        }\r\n        return formData;\r\n    }\r\n    private createJSON = (data: any[]|Object) => {\r\n        return JSON.stringify({ data: data });\r\n    }\r\n    private get _formData() {\r\n        const isFormData = (data: any): data is FormData => data instanceof FormData;\r\n        const isArray = (data: any): data is any[] => Array.isArray(data);\r\n        const isObject = (data: any): data is object => typeof data === 'object' && Object.keys(data).length > 0;\r\n\r\n        if(this.options.options){\r\n            const acceptDataFormat = this.options.options.acceptDataFormat;\r\n            if(acceptDataFormat){\r\n                switch (acceptDataFormat) {\r\n                    case \"form-data\":\r\n                        if (isFormData(this.options.data)) {\r\n                            return this.options.data;\r\n                        } else if (isArray(this.options.data)) {\r\n                            return this.createJSON(this.options.data);\r\n                        } else if (isObject(this.options.data)) {\r\n                            return this.createFormData(this.options.data);\r\n                        }\r\n                        break;\r\n                    case \"classic-object\":\r\n                        if (isFormData(this.options.data) || isArray(this.options.data) || isObject(this.options.data)) {\r\n                            return this.createJSON(isArray(this.options.data) ? this.options.data : this.options.data);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw Error(`The ${acceptDataFormat} format is not supported`);\r\n                }\r\n            }\r\n            }\r\n    }\r\n    public get response():any\r\n    {\r\n        return this._response;\r\n    }\r\n}\r\n\r\n\r\n",null,"// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/fetch-request.ts\"](0, __webpack_exports__);\n",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"transformer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"transformer\"] = factory();\n\telse\n\t\troot[\"transformer\"] = factory();\n})(self, () => {\nreturn ","function getMimeType(base64String: string, get: string = \"both\"): string {\r\n  const extension = base64String\r\n    .split(\",\")[0]\r\n    .split(\":\")[1]\r\n    .split(\";\")[0]\r\n    .split(\"/\")[1];\r\n  const fileType = base64String\r\n    .split(\",\")[0]\r\n    .split(\":\")[1]\r\n    .split(\";\")[0]\r\n    .split(\"/\")[0];\r\n\r\n  if (\"type\" === get) {\r\n    return fileType;\r\n  }\r\n  if (\"extension\" === get) {\r\n    return extension;\r\n  }\r\n  return fileType + \"/\" + extension;\r\n}\r\n\r\n\r\nexport namespace Transformer {\r\n  export class Base64Transformer {\r\n    protected base64String: string = \"\";\r\n    /**\r\n     * Convertit une chaîne base64 en objet File.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param fileName - (Optionnel) Le nom du fichier.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public toFile(base64String: string, fileName?: string): File {\r\n      this.base64String = base64String;\r\n      const byteCharacters = window.atob(base64String.split(\",\")[1]);\r\n      const byteArrays: Array<Uint8Array> = [];\r\n      let _fileName = \"\";\r\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\r\n        const slice = byteCharacters.slice(offset, offset + 512);\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n          byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n        const byteArray = new Uint8Array(byteNumbers);\r\n        byteArrays.push(byteArray);\r\n      }\r\n      const extension = getMimeType(base64String, \"extension\");\r\n      const fileType = getMimeType(base64String, \"type\");\r\n      if (fileName) {\r\n        _fileName = fileName;\r\n      } else {\r\n        _fileName = `tranformed_file.${extension}`;\r\n      }\r\n      return new File(byteArrays, _fileName, {\r\n        type: `${fileType}/${extension}`,\r\n      });\r\n    }\r\n    /**\r\n     * Convertit un objet File en chaîne base64.\r\n     * @param file - Le fichier à convertir en base64.\r\n     * @returns La chaîne base64 résultante (sous forme de promesse).\r\n     */\r\n    public fromFile(file: File): Promise<any> {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n    /**\r\n     * Convertit une chaîne base64 en tableau Uint8Array.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @returns Le tableau Uint8Array résultant.\r\n     */\r\n    public toUint8Array(base64String: string): Uint8Array {\r\n      const binaryString = window.atob(base64String.split(\",\")[1]);\r\n      const { length } = binaryString;\r\n      const bytes = new Uint8Array(length);\r\n      for (let i = 0; i < length; i++) {\r\n        bytes[i] = binaryString.charCodeAt(i);\r\n      }\r\n      return bytes;\r\n    }\r\n    /**\r\n     * Convertit un tableau Uint8Array en chaîne base64.\r\n     * @param uint8Array - Le tableau Uint8Array à convertir en base64.\r\n     * @returns La chaîne base64 résultante.\r\n     */\r\n    public fromUint8Array(uint8Array: Uint8Array): string {\r\n      let binaryString = \"\";\r\n      for (let i = 0; i < uint8Array.length; i++) {\r\n        binaryString += String.fromCharCode(uint8Array[i]);\r\n      }\r\n      return window.btoa(binaryString);\r\n    }\r\n    /**\r\n     * Convertit un objet Blob en chaîne base64 ou ArrayBuffer.\r\n     * @param blob - Le Blob à convertir.\r\n     * @returns La chaîne base64 ou ArrayBuffer résultante (sous forme de promesse).\r\n     */\r\n    public async fromBlob(blob: Blob): Promise<string | ArrayBuffer> {\r\n      return new Promise<string | ArrayBuffer>((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = function () {\r\n          const { result } = reader;\r\n          const base64String = result || \"\";\r\n          resolve(base64String);\r\n        };\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    }\r\n  }\r\n  export class BlobTransformer {\r\n    /**\r\n     * Convertit un tableau Uint8Array en objet Blob.\r\n     * @param uint8Array - Le tableau Uint8Array à convertir en Blob.\r\n     * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromUint8Array(uint8Array: Uint8Array, contentType?: string): Blob {\r\n      contentType = contentType ?? \"\";\r\n      return new Blob([uint8Array], { type: contentType });\r\n    }\r\n    /**\r\n     * Crée un Blob à partir d'un objet File.\r\n     * @param file - Le fichier à convertir en Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromFile(file: File): Blob {\r\n      return file.slice(0, file.size, file.type);\r\n    }\r\n    /**\r\n     * Crée un Blob à partir d'une chaîne encodée en base64.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromBase64String(base64String: string, contentType?: string): Blob {\r\n      contentType = contentType || \"\";\r\n      const byteCharacters = window.atob(base64String.split(\",\")[1]);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      return new Blob([byteArray], { type: contentType });\r\n    }\r\n  }\r\n\r\n  export class FileTransformer {\r\n    /**\r\n     * Convertit un fichier en chaîne base64.\r\n     * @param file - Le fichier à convertir en base64.\r\n     * @returns La chaîne base64 résultante (sous forme de promesse).\r\n     */\r\n    public toBase64(file: File): Promise<unknown> {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n    /**\r\n     * Convertit une chaîne base64 en objet File.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param contentType - (Optionnel) Le type de contenu du fichier.\r\n     * @param fileName - (Optionnel) Le nom du fichier.\r\n     * @param formatString - (Optionnel) Indique si la chaîne base64 est formatée.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public fromBase64String(\r\n      base64String: string,\r\n      contentType?: string | null,\r\n      fileName?: string | null,\r\n      formatString: boolean = true\r\n    ): File {\r\n      contentType = contentType || \"\";\r\n      const fileInfo = formatString ? base64String.split(\",\")[1] : base64String;\r\n      const byteCharacters = window.atob(fileInfo);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], { type: contentType });\r\n      fileName = fileName || \"image\";\r\n      return new File([blob], fileName, { type: contentType });\r\n    }\r\n    /**\r\n     * Convertit un tableau Uint8Array en objet File.\r\n     * @param uint8Array - Le tableau Uint8Array.\r\n     * @param mimeType - Le type MIME du fichier.\r\n     * @param fileName - Le nom du fichier.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public fromUint8Array(\r\n      uint8Array: Uint8Array,\r\n      mimeType: string,\r\n      fileName: string\r\n    ): File {\r\n      return new File(uint8Array as any, fileName, { type: mimeType });\r\n    }\r\n  }\r\n  export class FormDataTransformer {\r\n    private _data: object | undefined;\r\n    constructor(data: object | FormData) {\r\n      this._data = data;\r\n    }\r\n    /**\r\n     * Transforme les données en un objet FormData.\r\n     * @returns L'objet FormData résultant.\r\n     */\r\n    public transform(): FormData {\r\n      const formData = new FormData();\r\n      if (typeof this._data === \"object\") {\r\n        let data = this._data as any;\r\n        try {\r\n          for (const key in this._data) {\r\n            if (this._data.hasOwnProperty(key)) {\r\n              formData.append(key, data[key]);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur détectée: \" + error);\r\n        }\r\n      }\r\n      return formData;\r\n    }\r\n    /**\r\n     * Revertit un objet FormData en objet JavaScript.\r\n     * @returns L'objet JavaScript résultant.\r\n     */\r\n    public reverse(): object {\r\n      let elementObject: object = {};\r\n      if (this._data instanceof FormData) {\r\n        try {\r\n          const tempObject: any = {};\r\n          this._data.forEach((value, key) => {\r\n            tempObject[key] = value;\r\n          });\r\n          elementObject = { ...tempObject };\r\n        } catch (error) {\r\n          console.error(\"Erreur détectée: \" + error);\r\n        }\r\n      }\r\n      return elementObject;\r\n    }\r\n    /**\r\n     * Option de transformation spécifique.\r\n     * @param option - L'option de transformation ('onlyobject', 'onlyformdata', 'auto').\r\n     * @returns L'objet ou le FormData résultant en fonction de l'option spécifiée.\r\n     */\r\n    public option(option: string) {\r\n      if (option === \"onlyobject\") {\r\n        if (this._data instanceof FormData) {\r\n          return this.reverse();\r\n        }\r\n        return this._data;\r\n      }\r\n      if (option === \"onlyformdata\") {\r\n        if (this._data instanceof FormData) {\r\n          return this._data;\r\n        }\r\n        return this.transform();\r\n      }\r\n      if (option === \"auto\") {\r\n        return this.auto();\r\n      }\r\n    }\r\n    private auto() {\r\n      if (this._data instanceof FormData) {\r\n        return this.reverse();\r\n      } else {\r\n        return this.transform();\r\n      }\r\n    }\r\n  }\r\n}\r\n",null,"// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/transformer.ts\"](0, __webpack_exports__);\n",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","declare type RegexType = 'email' | 'phone-number' | 'number' | 'strong-password' | 'url' | 'default-text' | 'fr-text' | 'en-text' | 'tr-text';\r\nexport default class Utils{\r\n    /**\r\n     * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n     * @param audioPath Le chemin de la source audio.\r\n     * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n     * @returns L'élément audio créé.\r\n     */\r\n    public static setAudio(audioPath:string, classname=null) {\r\n        const audio = document.createElement('audio');\r\n        if(classname != null){audio.classList.add(classname);}\r\n        const source = document.createElement('source');\r\n        source.src = this.resolvePath(audioPath);\r\n        source.type = \"audio/mpeg\";\r\n        audio.appendChild(source);\r\n        return audio;\r\n    }\r\n    public static textToHTMLElement(textHtml:string, targetName=\"div\", children:boolean = false):Element|HTMLCollection|null\r\n    {\r\n        const target = document.createElement(`${targetName}`);\r\n        target.innerHTML = textHtml;\r\n        if(true === children){return target.children;}\r\n        return target.firstElementChild\r\n    }\r\n    /**\r\n     * retourne un élément du dom\r\n     */\r\n    public static $$(element:Element|HTMLCollection|string){\r\n        if (element instanceof HTMLElement || element instanceof HTMLCollection) {\r\n            return element;\r\n        }else if(typeof element === 'string') {\r\n            const collection = document.querySelectorAll(`${element}`);\r\n            const el = document.querySelector(`${element}`);\r\n            if (collection !== null && collection.length>1) {\r\n                return collection;\r\n            }\r\n            if(el !== null){\r\n                return el; \r\n            }\r\n        }else {throw new Error(\"Type of element is not supported\");}\r\n    }\r\n    /**\r\n     * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n     * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n     * @param nodeList Un objet NodeList ou un élément HTML. \r\n     * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n     * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n     * @returns \r\n     */\r\n    public static processNodes(nodeList: any, callback = (node: any, index?:number) => {}){\r\n        if(nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n        return Array.from(nodeList).forEach((node,i) => {\r\n            callback(node,i);\r\n        });\r\n        }\r\n        if(null !== nodeList && undefined !== nodeList)\r\n        {return callback(nodeList);}\r\n    }\r\n    \r\n\r\n    /**\r\n     * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n     * @param type Le type d'expression régulière demandé.\r\n     * @returns L'expression régulière correspondante.\r\n     */\r\n    public static getRegexp(type: RegexType): RegExp {\r\n        switch (type) {\r\n            case 'email':\r\n            return new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i);\r\n            case 'phone-number':\r\n            return new RegExp(/^(0|\\\\+[1-9]{1,3})[0-9 ]+$/);\r\n            case 'number':\r\n            return new RegExp(/^[0-9]+$/);\r\n            case 'strong-password':\r\n            return new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/);\r\n            case 'url':\r\n            return new RegExp(/^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?$/);\r\n            case 'default-text':\r\n            return new RegExp(/^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/);\r\n            case 'fr-text':\r\n            return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n            case 'en-text':\r\n            return  new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n            case 'tr-text':\r\n            return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n            default:\r\n            throw new Error('Type d\\'expression régulière non pris en charge.');\r\n        }\r\n    }\r\n    /**\r\n     * Résout le chemin d'une ressource en fonction de l'environnement d'exécution.\r\n     * @param path Le chemin de la ressource.\r\n     * @returns Le chemin résolu de la ressource.\r\n     */\r\n    public static resolvePath(path:string){\r\n        const PROJECT_NAME = window.location.pathname.split(\"/\")[1];\r\n        const ORIGIN = window.location.origin;\r\n        const PORT = window.location.port;\r\n        const HOST = window.location.host;\r\n        let _stylesheetsoutdir_;\r\n\r\n        if (HOST == \"localhost\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${PROJECT_NAME}/${path}`;\r\n        } else if (HOST !== \"localhost\" && PORT !== \"\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        } else {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        }\r\n    }\r\n    /**\r\n     * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement. \r\n     * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n     * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n     * @returns Un élément HTML représentant une zone interdite.\r\n     */\r\n    private static forbiddener(tag:string='td', backgroundColor?:string){\r\n        let forbiddenTag = document.createElement(tag)\r\n        forbiddenTag.setAttribute('class','forbidden')\r\n        const style = {\r\n            position:'absolute',\r\n            width: '100%',\r\n            height:'100%',\r\n            opacity: '.7',\r\n            zIndex: '10',\r\n            backgroundColor: backgroundColor ? backgroundColor : '#FFFFFF',\r\n        }\r\n        Object.assign(forbiddenTag.style, style)\r\n        return forbiddenTag as HTMLElement;\r\n    }\r\n    /**\r\n     * Réduit une chaîne de texte.\r\n     * @param text La chaîne de texte à réduire.\r\n     * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n     * @returns La chaîne de texte réduite.\r\n     */\r\n    public static reduceText(text: string, maxLength: number = 14): string {\r\n        text = typeof text === \"string\" ? text.trim() : \"\";\r\n        if (text.length > maxLength) {\r\n          return `${text.substring(0, maxLength)}...`;\r\n        }\r\n        return text;\r\n    }\r\n    /**\r\n     * Changes the input text type to a number type and performs additional processing\r\n     * based on the specified parameters.\r\n     * \r\n     * @param attr - The CSS selector for the input elements to be processed.\r\n     * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n     * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n     * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n     */\r\n    public static changeInputTextTypeToNumberType(attr: string,limit?: number | null,priceType: boolean = false,decimal?: number) {\r\n        this.processNodes(this.$$(attr), function (element) {\r\n          let input = element as HTMLInputElement;\r\n          if (input) {\r\n            input.addEventListener(\"input\", function () {\r\n              const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n              if (decimal) {\r\n                const getValue = input.value.replace(regExp, \"\");\r\n                input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n              } else {\r\n                input.value = input.value.replace(regExp, \"\");\r\n              }\r\n              if (limit && parseInt(input.value) > limit) {\r\n                input.value = `${limit}`;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }\r\n    /**\r\n     * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n     * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n     * and the background color for the forbidden tag.\r\n     * \r\n     * @param tag - The tag of the element to be disabled (default: \"td\").\r\n     * @param target - The target element to be disabled (default: undefined).\r\n     * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n     * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n     */\r\n    public static disablor(tag = \"td\",target?: HTMLElement,trigger?: HTMLElement,backgroundColor?: string) {\r\n        const buttons = document.querySelectorAll(\r\n        \"[disablor],[self-disablor]\"\r\n        );\r\n        try {\r\n        if (!trigger && !buttons) {\r\n            throw new Error(\r\n            \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n        }\r\n        this.processNodes(buttons, (button: HTMLElement) => {\r\n            button.addEventListener(\"click\", () => {\r\n            const self = button.hasAttribute(\"self-disablor\");\r\n            let item = self ? button : (button.closest(\"[disablor]\") as HTMLElement);\r\n    \r\n            if (!target && !item) {\r\n                throw new Error(\r\n                \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n                );\r\n            }\r\n            if (item) {\r\n                item.style.position = \"relative\";\r\n                item.insertBefore(this.forbiddener(tag, backgroundColor), item.firstChild);\r\n                if (item instanceof HTMLButtonElement) {\r\n                item.setAttribute(\"disabled\", \"true\");\r\n                }\r\n            }\r\n            });\r\n        });\r\n        } catch (error) {\r\n            console.error(\"Une erreur s'est produit: \", error);\r\n        }\r\n    }\r\n    /**\r\n     * Adds an asterisk indicator to labels associated with required form fields.\r\n     * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n     * of the 'required-field' attribute. The function utilizes the processNodes method\r\n     * to iterate through the matched labels and append the asterisk.\r\n     */\r\n    public static setAsteriskToRequiredField() {\r\n        const asterisk = `<svg class=\"required-svg\">\r\n        <use xlink:href=\"../asset/icon.svg#asterisk\"></use>\r\n        </svg>`;\r\n        const labels = document.querySelectorAll(\"label[required-field]\");\r\n        if (labels) {\r\n            this.processNodes(labels, (node: HTMLLabelElement) => {\r\n                const rang = document.createRange();\r\n                const fragment = rang.createContextualFragment(asterisk);\r\n                node.appendChild(fragment);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * This method checks if the object contains a key with the given substring.\r\n     * @param object The object to be searched.\r\n     * @param substring The substring to search for.\r\n     * @param getKey An optional parameter to determine the type of return value.\r\n     *               If true, the method will return the key as a string.\r\n     *               If false or not provided, the method will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static hasKeyWithNameSubstring(object: any,substring: string,getKey?: boolean) {\r\n        for (let key in object) {\r\n          if (key.includes(substring)) {\r\n            if (undefined === getKey || false === getKey) {\r\n              return object[key];\r\n            }\r\n            if (true === getKey) {\r\n              return key;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * This method searches for an object's property by its key or short key.\r\n     * @param object The object to be searched.\r\n     * @param keyOrShortKey The key or short key to search for.\r\n     * @param key An optional parameter to determine the type of return value.\r\n     *            If true, the function will return the key as a string.\r\n     *            If false or not provided, the function will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static findObjectDataByKeyName(object: any,keyOrShorKey: string,key?: boolean) {\r\n        Object.keys(object).forEach((key) => {\r\n          if (key.includes(keyOrShorKey)) {\r\n            return object[key];\r\n          }\r\n        });\r\n        return false;\r\n    }\r\n\r\n    public static findChar(string: string, limit: number, returnBool:boolean = false) {\r\n        for (let i = 0; i <= limit; i++) {\r\n          const index = string.indexOf(i.toString());\r\n          if (index !== -1) {\r\n            return returnBool ? true : i.toString();\r\n          }\r\n        }\r\n        return returnBool ? false : null;\r\n      }\r\n      \r\n    public static findComputedStyle(\r\n        element: HTMLElement,\r\n        property: string | Array<string>\r\n      ) {\r\n        const styles = window.getComputedStyle(element);\r\n        const propertiesObject: any = {};\r\n        try {\r\n          if (!element) {\r\n            throw new Error(\"Element not found\");\r\n          }\r\n          if (!property) {\r\n            throw new Error(\"Property is required\");\r\n          }\r\n          if (Array.isArray(property) && property.length > 0) {\r\n            property.forEach((props) => {\r\n              propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n            });\r\n            return propertiesObject;\r\n          }\r\n          if (typeof property === \"string\") {\r\n            return styles.getPropertyValue(`${property}`);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n    /**\r\n     * A function to escape special characters in a string using the DOM API.\r\n     * \r\n     * @param str - The input string to be escaped.\r\n     * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n     */\r\n    public static escape(str?: string): string {\r\n        if (!str) {\r\n          return \"\";\r\n        }\r\n        const div = document.createElement(\"div\");\r\n        div.appendChild(document.createTextNode(str));\r\n        return div.innerHTML;\r\n    }\r\n    /**\r\n     * This function takes an HTMLElement and a target string.\r\n     * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n     * If no such element is found, it returns null.\r\n     * @param referent - The starting point of the search.\r\n     * @param target - The CSS selector used to find the desired element.\r\n     * @returns The first Element with a matching target, or null if no such element is found.\r\n     */\r\n    public static findHTMLElementBy(referent: HTMLElement,target: string): Element | null {\r\n        let currentElement = referent as Element | null;\r\n        if (currentElement) {\r\n          while ((currentElement = currentElement.previousElementSibling)) {\r\n            const charCounterSpan = currentElement.querySelector(target);\r\n            if (charCounterSpan) {\r\n              return charCounterSpan;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n     * If no attributes are provided, it returns an empty string.\r\n     * @param attributes - An object containing HTML attributes.\r\n     * @returns A string representing the attributes.\r\n     */\r\n    public static formatHTMLAttributes(attributes: any) {\r\n        let attrs = \"\";\r\n        if (attributes) {\r\n          for (const [key, value] of Object.entries(attributes)) {\r\n            if (key) {\r\n              attrs += `${key}='${value}'`;\r\n            }\r\n          }\r\n        }\r\n        return attrs.trim();\r\n    }\r\n      \r\n  \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/process-backend.ts\");\n",""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","FetchRequest","constructor","options","fetchData","__awaiter","Error","uri","method","response","fetch","body","_formData","headers","dataResponse","json","_response","onPostFetch","onSuccess","status","error","onError","console","preFetch","onPreFetch","data","postFetch","submiter","HTMLButtonElement","removeAttribute","undefined","submitForm","createFormData","formData","FormData","key","value","Object","entries","append","createJSON","JSON","stringify","addEventListener","isFormData","isArray","Array","isObject","keys","length","acceptDataFormat","__webpack_exports__","__webpack_modules__","getMimeType","base64String","get","extension","split","fileType","Transformer","Base64Transformer","toFile","fileName","byteCharacters","window","atob","byteArrays","_fileName","offset","slice","byteNumbers","i","charCodeAt","byteArray","Uint8Array","push","File","type","fromFile","file","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","toUint8Array","binaryString","bytes","fromUint8Array","uint8Array","String","fromCharCode","btoa","fromBlob","blob","BlobTransformer","contentType","Blob","size","fromBase64String","FileTransformer","toBase64","formatString","fileInfo","mimeType","FormDataTransformer","_data","transform","hasOwnProperty","reverse","elementObject","tempObject","forEach","assign","option","auto","Utils","setAudio","audioPath","classname","audio","document","createElement","classList","add","source","src","resolvePath","appendChild","textToHTMLElement","textHtml","targetName","children","target","innerHTML","firstElementChild","$$","element","HTMLElement","HTMLCollection","collection","querySelectorAll","el","querySelector","processNodes","nodeList","callback","node","index","NodeList","from","getRegexp","RegExp","path","PROJECT_NAME","location","pathname","ORIGIN","origin","PORT","port","HOST","host","_stylesheetsoutdir_","forbiddener","tag","backgroundColor","forbiddenTag","setAttribute","style","position","width","height","opacity","zIndex","reduceText","text","maxLength","trim","substring","changeInputTextTypeToNumberType","attr","limit","priceType","decimal","input","regExp","getValue","replace","parseFloat","toFixed","parseInt","disablor","trigger","buttons","button","hasAttribute","item","closest","insertBefore","firstChild","setAsteriskToRequiredField","asterisk","labels","rang","createRange","fragment","createContextualFragment","hasKeyWithNameSubstring","object","getKey","includes","findObjectDataByKeyName","keyOrShorKey","findChar","string","returnBool","indexOf","toString","findComputedStyle","property","styles","getComputedStyle","propertiesObject","props","getPropertyValue","escape","str","div","createTextNode","findHTMLElementBy","referent","currentElement","previousElementSibling","charCounterSpan","formatHTMLAttributes","attributes","attrs"],"sourceRoot":""}
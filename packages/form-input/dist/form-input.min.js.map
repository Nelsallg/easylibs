{"version":3,"file":"form-input.min.js","mappings":"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","sources":["webpack://@easylibs/form-input/webpack/universalModuleDefinition","webpack://@easylibs/form-input/./src/form-input.ts","webpack://@easylibs/form-input/./src/scripts/checkbox-manager.ts","webpack://@easylibs/form-input/./src/scripts/color-manager.ts","webpack://@easylibs/form-input/./src/scripts/date-manager.ts","webpack://@easylibs/form-input/./src/scripts/password-manager.ts","webpack://@easylibs/form-input/./src/scripts/select-manager.ts","webpack://@easylibs/form-input/@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/form-input/@easylibs/utils/src/utils.ts","webpack://@easylibs/form-input/webpack/bootstrap","webpack://@easylibs/form-input/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"form-input\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"form-input\"] = factory();\n\telse\n\t\troot[\"form-input\"] = factory();\n})(self, () => {\nreturn ","import CheckboxManager  from './scripts/checkbox-manager';\r\nimport ColorManager  from './scripts/color-manager';\r\nimport DateManager  from './scripts/date-manager';\r\nimport PasswordManager  from './scripts/password-manager';\r\nimport SelectManager  from './scripts/select-manager';\r\n\r\nexport namespace FormInput {\r\n  export class CheckboxType extends CheckboxManager {}\r\n  export class ColorType extends ColorManager {}\r\n  export class PasswordType extends PasswordManager {}\r\n  export class SelectType extends SelectManager {}\r\n  export class DateType extends DateManager {}\r\n}","import Utils from \"@easylibs/utils\";\r\n\r\nexport default class CheckboxManager {\r\n    private parentElement: string;\r\n\r\n    constructor(parentElement: string) {\r\n        this.parentElement = parentElement;\r\n    }\r\n\r\n    /**\r\n     * Initializes the checkbox functionality in the specified parent element.\r\n     */\r\n    public initializeCheckbox() {\r\n        const content = Utils.$$(this.parentElement);\r\n\r\n        if (content !== null) {\r\n            Utils.processNodes(content, (node: HTMLElement) => {\r\n                this.init(node);\r\n            });\r\n        }\r\n    }\r\n\r\n    private init(content: HTMLElement) {\r\n        const parentCheckbox = content.querySelector('.parent-checkbox') as HTMLInputElement;\r\n        const childrenCheckboxes = content.querySelectorAll('.child-checkbox') as NodeListOf<HTMLInputElement>;\r\n        let parentChecked = parentCheckbox.checked;\r\n\r\n        /**\r\n         * Toggles the selection state of child checkboxes.\r\n         * @param checked Selection state of checkboxes.\r\n         */\r\n        const toggleChildrenCheckboxes = (checked: boolean) => {\r\n            childrenCheckboxes.forEach((checkbox) => {\r\n                checkbox.checked = checked;\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Event handler for the parent checkbox.\r\n         * Updates the selection state of child checkboxes.\r\n         * @param e Click event.\r\n         */\r\n        parentCheckbox.addEventListener('click', (e) => {\r\n            parentChecked = parentCheckbox.checked;\r\n            toggleChildrenCheckboxes(parentChecked);\r\n        });\r\n\r\n        childrenCheckboxes.forEach((checkbox) => {\r\n            /**\r\n             * Event handler for child checkboxes.\r\n             * Updates the selection state of the parent checkbox based on child checkboxes.\r\n             */\r\n            checkbox.addEventListener('click', () => {\r\n                if (!checkbox.checked && parentChecked) {\r\n                    parentCheckbox.checked = false;\r\n                    parentChecked = false;\r\n                } else if (checkbox.checked && !parentChecked) {\r\n                    const allChildrenChecked = Array.from(childrenCheckboxes).every((c) => c.checked);\r\n                    if (allChildrenChecked) {\r\n                        parentCheckbox.checked = true;\r\n                        parentChecked = true;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","export default class ColorManager{\r\n    protected colorPicker: string | HTMLInputElement;\r\n    constructor(colorPicker:string|HTMLInputElement){\r\n      this.colorPicker = colorPicker;\r\n    }\r\n    public fetchColors(url:string){\r\n      document.addEventListener(\"DOMContentLoaded\", async () => {\r\n        const colorPicker = this.colorPicker instanceof HTMLInputElement ? this.colorPicker : document.getElementById(this.colorPicker) as HTMLInputElement;\r\n        const datalist = document.createElement('datalist');\r\n        datalist.id = \"colorOptions\";\r\n      \r\n        try {\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          if(response){\r\n            const colors = data.colors;\r\n            colors.forEach((color:string) => {\r\n              const option = document.createElement(\"option\");\r\n              option.value = color;\r\n              datalist.appendChild(option);\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur lors du chargement des couleurs :\", error)\r\n        }\r\n        colorPicker.addEventListener(\"input\", function () {\r\n          console.log(\"Couleur sélectionnée :\", colorPicker.value);\r\n        });\r\n      });\r\n    }\r\n  }","export default class DateManager{\r\n    protected fullDate:number = 0\r\n    startDate: string | HTMLInputElement;\r\n    endDate: string | HTMLInputElement;\r\n    durationContainer: HTMLElement | undefined;\r\n    autoSetDuration: boolean;\r\n      constructor(startDate:string|HTMLInputElement, endDate:string|HTMLInputElement, durationContainer?:HTMLElement, autoSetDuration:boolean=false){\r\n          this.startDate = startDate;\r\n          this.endDate = endDate;\r\n          this.durationContainer = durationContainer;\r\n          this.autoSetDuration = autoSetDuration;\r\n      }\r\n      public findDurationBetweenToDate() {\r\n          let start_date:Date|null = null;\r\n          let fullDate:number = 0;\r\n          if(this.startDate instanceof HTMLInputElement){\r\n              const {startDate} = this;\r\n              startDate.addEventListener(\"input\", ()=>{\r\n                  const {value} = startDate\r\n                  start_date = new Date(value);\r\n                  if(this.endDate instanceof HTMLInputElement){\r\n                      this.endDate.min = start_date.toISOString().split(\"T\")[0];\r\n                  }\r\n              });\r\n          }\r\n          if(this.endDate instanceof HTMLInputElement){\r\n              const {endDate} = this;\r\n              endDate.addEventListener(\"input\", () => {\r\n                  let end_date = new Date(endDate.value);\r\n                  if(start_date && start_date < end_date) {\r\n                      endDate.value = end_date.toISOString().split(\"T\")[0];\r\n                      this.fullDate = end_date.getTime() - start_date.getTime();\r\n                      if(true === this.autoSetDuration && this.durationContainer){\r\n                        const text = this.fullDurationText\r\n                        const duration = this.durationContainer;\r\n                        if(duration)\r\n                        {this.setFullDurationText(duration, text);}\r\n                      }\r\n                  }\r\n              });\r\n          }\r\n      }\r\n      public convertFullDateToDays()\r\n      {\r\n        let one_day = 24 * 60 * 60 * 1000;\r\n        let absValue = Math.abs(this.fullDate);\r\n        return Math.floor(absValue / one_day);\r\n      };\r\n      \r\n      public convertFullDateToWeeks(extDays?:number)\r\n      {\r\n        let totalDaysNumber = extDays;\r\n        let weeksNumber:number = 0;\r\n        if(this.fullDate){\r\n          totalDaysNumber = this.convertFullDateToDays();\r\n        }\r\n        if(totalDaysNumber){\r\n          weeksNumber = Math.floor(totalDaysNumber / 7);\r\n          extDays = totalDaysNumber % 7;\r\n        }\r\n        return { weeks: weeksNumber, extDays: extDays };\r\n      }\r\n      \r\n      public convertFullDateToMonths()\r\n      {\r\n        let totalDaysNumber = this.convertFullDateToDays();\r\n        let monthsNumber = Math.floor(totalDaysNumber / 30);\r\n        let extDays = totalDaysNumber % 30;\r\n        let totalweeks = this.convertFullDateToWeeks(extDays);\r\n        let days:number|undefined = 0;\r\n        let weeks:number|undefined = 0;\r\n        let months:number|undefined = 0;\r\n        if(totalDaysNumber < 30){\r\n          days = this.convertFullDateToWeeks(totalDaysNumber).extDays;\r\n          weeks = this.convertFullDateToWeeks(totalDaysNumber).weeks;\r\n        }else{\r\n          days = totalweeks.extDays;\r\n          weeks = totalweeks.weeks;\r\n          months = monthsNumber;\r\n        }\r\n        return {days,weeks,months};\r\n      }\r\n      \r\n      public durationText(day?:number, week?:number, month?:number)\r\n      {\r\n          let dayText:string = \"\";\r\n          (day && day > 1) ? dayText=`${day} jours` : dayText=`${day} jour`;\r\n      \r\n          let weekText:string = \"\";\r\n          (week && week > 1) ? weekText=`${week} semaines` : weekText=`${week} semaine`;\r\n      \r\n          let monthText:string = \"\";\r\n          (month && month > 0) ? monthText = `${month} mois` : monthText = \"\";\r\n      \r\n          if(day === 0){\r\n            return {weekText,monthText}\r\n          }\r\n          if(week === 0){\r\n            return {dayText,monthText}\r\n          }\r\n          if(month === 0){\r\n            return {dayText,weekText}\r\n          }\r\n          return {dayText,weekText,monthText}\r\n      }\r\n      \r\n      public get fullDurationText()\r\n      {\r\n        let fulleMonth = this.convertFullDateToMonths()\r\n        const day = fulleMonth.days\r\n        const week = fulleMonth.weeks\r\n        const month = fulleMonth.months\r\n        let durationText = this.durationText(day, week, month);\r\n        console.log({durationText,month})\r\n        return ` ${durationText.monthText??\"\"} ${durationText.weekText??\"\"} ${durationText.dayText??\"\"}`;\r\n      }\r\n      public setFullDurationText(element:HTMLElement, text:string)\r\n      {\r\n        if(element instanceof HTMLInputElement){\r\n          element.value = text;\r\n        }else{\r\n          element.innerHTML = text;\r\n        }\r\n      }\r\n  }\r\n  ","import Utils from \"@easylibs/utils\";\r\n\r\nexport default class PasswordManager{\r\n    public passwordVisibility(){\r\n        return PasswordVisibility\r\n    }\r\n}\r\n\r\nclass PasswordVisibility{\r\n    private iconPath: { hide: string; show: string; };\r\n    private showIconsToClick: boolean;\r\n   \r\n    constructor(iconPath:{hide:string,show:string},showIconsToClick:boolean = false){\r\n        this.iconPath = iconPath;\r\n        this.showIconsToClick = showIconsToClick;\r\n    }\r\n    public active = () => {\r\n        const fieldContainer = document.querySelectorAll(\"password\");\r\n        Utils.processNodes(fieldContainer, (container:HTMLElement) => {\r\n            container.setAttribute('pws-target','');\r\n            const field = container.querySelector(\"input[type='password']\") as HTMLInputElement;\r\n            const html = this.html();\r\n            container.appendChild(html);\r\n            const iconHide = container.querySelector(\".hide-eye\") as HTMLElement;\r\n            const iconShow = container.querySelector(\".show-eye\") as HTMLElement;\r\n            const fieldBorderRadius = Utils.findComputedStyle(field, \"border-radius\");\r\n            if(\"\" !== fieldBorderRadius){\r\n                container.style.borderTopRightRadius = fieldBorderRadius;\r\n                container.style.borderBottomRightRadius = fieldBorderRadius;\r\n            }\r\n            if(this.showIconsToClick){\r\n                field.addEventListener(\"click\", () =>{\r\n                    html.style.display = 'flex';\r\n                })\r\n            }else{html.style.display = 'flex';}\r\n            iconShow.addEventListener('click', ()=>{\r\n                if(field.type === 'password'){\r\n                    field.type = \"text\";\r\n                    field.style.paddingRight = \"35px\";\r\n                    iconShow.style.display = 'none';\r\n                    iconHide.style.display = 'flex';\r\n                }\r\n            })\r\n            iconHide.addEventListener('click', ()=>{\r\n                if(field.type === 'text'){\r\n                    field.type = \"password\";\r\n                    iconShow.style.display = 'flex';\r\n                    iconHide.style.display = 'none';\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    private html(): HTMLElement\r\n    {\r\n        const html = `<div class='eyes-icon'>\r\n            <svg class=\"hide-eye\" style='display:none;'><use xlink:href=\"/${this.iconPath.hide}\"></use></svg>\r\n            <svg class=\"show-eye\"><use xlink:href=\"/${this.iconPath.show}\"></use></svg>\r\n        </div>`;\r\n        const htmlstyle = {\r\n            display: 'none',\r\n            position: 'absolute',\r\n            top: '0',\r\n            right: '0',\r\n            height: '100%',\r\n            width: '35px',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#d5e3ec'\r\n        }\r\n        let node = Utils.textToHTMLElement(html,\"div\") as HTMLElement;\r\n        Object.assign(node.style, htmlstyle);\r\n        return this.iconStyle(node) as HTMLElement;\r\n    }\r\n    private iconStyle(html:HTMLElement): HTMLElement\r\n    {\r\n        let svg = html.querySelectorAll('svg');\r\n        html.innerHTML = \"\";\r\n        Utils.processNodes(svg, (iconSvg:SVGSVGElement) => {\r\n            const style = {\r\n                color: '#999',\r\n                cursor: 'pointer',\r\n                width: '1.5rem',\r\n                height: '1.5rem',\r\n            }\r\n            Object.assign(iconSvg.style, style);\r\n            html.appendChild(iconSvg);\r\n        })\r\n        return html;\r\n    }\r\n}","import Utils from \"@easylibs/utils\";\r\n\r\nexport default class SelectManager {\r\n  /**\r\n   * Cette méthode redimensionne automatiquement un élément \"select\"\r\n   * en fonction de la longueur du texte sélectionné\r\n   * @param select\r\n   */\r\n  static autoResize(select: string | HTMLSelectElement): void {\r\n    let field = Utils.$$(select);\r\n    if (field instanceof HTMLSelectElement) {\r\n      field.addEventListener('change', (event) => {\r\n        let tempSelect = document.createElement('select'),\r\n          tempOption = document.createElement('option');\r\n\r\n        if (null !== event.target && event.target instanceof HTMLSelectElement) {\r\n          tempOption.textContent = event.target.options[event.target.selectedIndex].text;\r\n          tempSelect.style.cssText += `\r\n                    visibility: hidden;\r\n                    position: fixed;\r\n                    `;\r\n          tempSelect.appendChild(tempOption);\r\n          event.target.after(tempSelect);\r\n\r\n          const tempSelectWidth = tempSelect.getBoundingClientRect().width;\r\n          console.log({ tempSelect });\r\n          event.target.style.width = `${tempSelectWidth}px`;\r\n          tempSelect.remove();\r\n        }\r\n      });\r\n      field.dispatchEvent(new Event('change'));\r\n    } else {\r\n      console.error(\"Le paramètre n'est pas un élément Select\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gestion du select avec les icônes\r\n   * @param {string | HTMLSelectElement} select\r\n   */\r\n  static addIconToOptions(select: string | HTMLSelectElement): void {\r\n    let input = Utils.$$(select);\r\n    if (input instanceof HTMLSelectElement) {\r\n      input.addEventListener('change', function () {\r\n        if (null !== input && input instanceof HTMLSelectElement) {\r\n          let optionValue = this.options[input.selectedIndex].value;\r\n          let icon = document.body.querySelector(`[data-option=\"${optionValue}\"]`);\r\n          if (icon) {\r\n            let parent = icon.parentNode as ParentNode;\r\n            let icons = parent.children;\r\n            for (let i = 0; i < icons.length; i++) {\r\n              icons[i].setAttribute('style', 'display:none;');\r\n            }\r\n            icon.setAttribute('style', 'display:flex;');\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"Le paramètre est invalide\");\r\n    }\r\n  }\r\n}\r\n\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","declare type RegexType = 'email' | 'phone-number' | 'number' | 'strong-password' | 'url' | 'default-text' | 'fr-text' | 'en-text' | 'tr-text';\r\nexport default class Utils{\r\n    /**\r\n     * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n     * @param audioPath Le chemin de la source audio.\r\n     * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n     * @returns L'élément audio créé.\r\n     */\r\n    public static setAudio(audioPath:string, classname=null) {\r\n        const audio = document.createElement('audio');\r\n        if(classname != null){audio.classList.add(classname);}\r\n        const source = document.createElement('source');\r\n        source.src = this.resolvePath(audioPath);\r\n        source.type = \"audio/mpeg\";\r\n        audio.appendChild(source);\r\n        return audio;\r\n    }\r\n    public static textToHTMLElement(textHtml:string, targetName=\"div\", children:boolean = false):Element|HTMLCollection|null\r\n    {\r\n        const target = document.createElement(`${targetName}`);\r\n        target.innerHTML = textHtml;\r\n        if(true === children){return target.children;}\r\n        return target.firstElementChild\r\n    }\r\n    /**\r\n     * retourne un élément du dom\r\n     */\r\n    public static $$(element:Element|HTMLCollection|string){\r\n        if (element instanceof HTMLElement || element instanceof HTMLCollection) {\r\n            return element;\r\n        }else if(typeof element === 'string') {\r\n            const collection = document.querySelectorAll(`${element}`);\r\n            const el = document.querySelector(`${element}`);\r\n            if (collection !== null && collection.length>1) {\r\n                return collection;\r\n            }\r\n            if(el !== null){\r\n                return el; \r\n            }\r\n        }else {throw new Error(\"Type of element is not supported\");}\r\n    }\r\n    /**\r\n     * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n     * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n     * @param nodeList Un objet NodeList ou un élément HTML. \r\n     * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n     * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n     * @returns \r\n     */\r\n    public static processNodes(nodeList: any, callback = (node: any, index?:number) => {}){\r\n        if(nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n        return Array.from(nodeList).forEach((node,i) => {\r\n            callback(node,i);\r\n        });\r\n        }\r\n        if(null !== nodeList && undefined !== nodeList)\r\n        {return callback(nodeList);}\r\n    }\r\n    \r\n\r\n    /**\r\n     * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n     * @param type Le type d'expression régulière demandé.\r\n     * @returns L'expression régulière correspondante.\r\n     */\r\n    public static getRegexp(type: RegexType): RegExp {\r\n        switch (type) {\r\n            case 'email':\r\n            return new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i);\r\n            case 'phone-number':\r\n            return new RegExp(/^(0|\\\\+[1-9]{1,3})[0-9 ]+$/);\r\n            case 'number':\r\n            return new RegExp(/^[0-9]+$/);\r\n            case 'strong-password':\r\n            return new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/);\r\n            case 'url':\r\n            return new RegExp(/^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?$/);\r\n            case 'default-text':\r\n            return new RegExp(/^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/);\r\n            case 'fr-text':\r\n            return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n            case 'en-text':\r\n            return  new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n            case 'tr-text':\r\n            return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n            default:\r\n            throw new Error('Type d\\'expression régulière non pris en charge.');\r\n        }\r\n    }\r\n    /**\r\n     * Résout le chemin d'une ressource en fonction de l'environnement d'exécution.\r\n     * @param path Le chemin de la ressource.\r\n     * @returns Le chemin résolu de la ressource.\r\n     */\r\n    public static resolvePath(path:string){\r\n        const PROJECT_NAME = window.location.pathname.split(\"/\")[1];\r\n        const ORIGIN = window.location.origin;\r\n        const PORT = window.location.port;\r\n        const HOST = window.location.host;\r\n        let _stylesheetsoutdir_;\r\n\r\n        if (HOST == \"localhost\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${PROJECT_NAME}/${path}`;\r\n        } else if (HOST !== \"localhost\" && PORT !== \"\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        } else {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        }\r\n    }\r\n    /**\r\n     * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement. \r\n     * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n     * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n     * @returns Un élément HTML représentant une zone interdite.\r\n     */\r\n    private static forbiddener(tag:string='td', backgroundColor?:string){\r\n        let forbiddenTag = document.createElement(tag)\r\n        forbiddenTag.setAttribute('class','forbidden')\r\n        const style = {\r\n            position:'absolute',\r\n            width: '100%',\r\n            height:'100%',\r\n            opacity: '.7',\r\n            zIndex: '10',\r\n            backgroundColor: backgroundColor ? backgroundColor : '#FFFFFF',\r\n        }\r\n        Object.assign(forbiddenTag.style, style)\r\n        return forbiddenTag as HTMLElement;\r\n    }\r\n    /**\r\n     * Réduit une chaîne de texte.\r\n     * @param text La chaîne de texte à réduire.\r\n     * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n     * @returns La chaîne de texte réduite.\r\n     */\r\n    public static reduceText(text: string, maxLength: number = 14): string {\r\n        text = typeof text === \"string\" ? text.trim() : \"\";\r\n        if (text.length > maxLength) {\r\n          return `${text.substring(0, maxLength)}...`;\r\n        }\r\n        return text;\r\n    }\r\n    /**\r\n     * Changes the input text type to a number type and performs additional processing\r\n     * based on the specified parameters.\r\n     * \r\n     * @param attr - The CSS selector for the input elements to be processed.\r\n     * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n     * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n     * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n     */\r\n    public static changeInputTextTypeToNumberType(attr: string,limit?: number | null,priceType: boolean = false,decimal?: number) {\r\n        this.processNodes(this.$$(attr), function (element) {\r\n          let input = element as HTMLInputElement;\r\n          if (input) {\r\n            input.addEventListener(\"input\", function () {\r\n              const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n              if (decimal) {\r\n                const getValue = input.value.replace(regExp, \"\");\r\n                input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n              } else {\r\n                input.value = input.value.replace(regExp, \"\");\r\n              }\r\n              if (limit && parseInt(input.value) > limit) {\r\n                input.value = `${limit}`;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }\r\n    /**\r\n     * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n     * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n     * and the background color for the forbidden tag.\r\n     * \r\n     * @param tag - The tag of the element to be disabled (default: \"td\").\r\n     * @param target - The target element to be disabled (default: undefined).\r\n     * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n     * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n     */\r\n    public static disablor(tag = \"td\",target?: HTMLElement,trigger?: HTMLElement,backgroundColor?: string) {\r\n        const buttons = document.querySelectorAll(\r\n        \"[disablor],[self-disablor]\"\r\n        );\r\n        try {\r\n        if (!trigger && !buttons) {\r\n            throw new Error(\r\n            \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n        }\r\n        this.processNodes(buttons, (button: HTMLElement) => {\r\n            button.addEventListener(\"click\", () => {\r\n            const self = button.hasAttribute(\"self-disablor\");\r\n            let item = self ? button : (button.closest(\"[disablor]\") as HTMLElement);\r\n    \r\n            if (!target && !item) {\r\n                throw new Error(\r\n                \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n                );\r\n            }\r\n            if (item) {\r\n                item.style.position = \"relative\";\r\n                item.insertBefore(this.forbiddener(tag, backgroundColor), item.firstChild);\r\n                if (item instanceof HTMLButtonElement) {\r\n                item.setAttribute(\"disabled\", \"true\");\r\n                }\r\n            }\r\n            });\r\n        });\r\n        } catch (error) {\r\n            console.error(\"Une erreur s'est produit: \", error);\r\n        }\r\n    }\r\n    /**\r\n     * Adds an asterisk indicator to labels associated with required form fields.\r\n     * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n     * of the 'required-field' attribute. The function utilizes the processNodes method\r\n     * to iterate through the matched labels and append the asterisk.\r\n     */\r\n    public static setAsteriskToRequiredField() {\r\n        const asterisk = `<svg class=\"required-svg\">\r\n        <use xlink:href=\"../asset/icon.svg#asterisk\"></use>\r\n        </svg>`;\r\n        const labels = document.querySelectorAll(\"label[required-field]\");\r\n        if (labels) {\r\n            this.processNodes(labels, (node: HTMLLabelElement) => {\r\n                const rang = document.createRange();\r\n                const fragment = rang.createContextualFragment(asterisk);\r\n                node.appendChild(fragment);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * This method checks if the object contains a key with the given substring.\r\n     * @param object The object to be searched.\r\n     * @param substring The substring to search for.\r\n     * @param getKey An optional parameter to determine the type of return value.\r\n     *               If true, the method will return the key as a string.\r\n     *               If false or not provided, the method will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static hasKeyWithNameSubstring(object: any,substring: string,getKey?: boolean) {\r\n        for (let key in object) {\r\n          if (key.includes(substring)) {\r\n            if (undefined === getKey || false === getKey) {\r\n              return object[key];\r\n            }\r\n            if (true === getKey) {\r\n              return key;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * This method searches for an object's property by its key or short key.\r\n     * @param object The object to be searched.\r\n     * @param keyOrShortKey The key or short key to search for.\r\n     * @param key An optional parameter to determine the type of return value.\r\n     *            If true, the function will return the key as a string.\r\n     *            If false or not provided, the function will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static findObjectDataByKeyName(object: any,keyOrShorKey: string,key?: boolean) {\r\n        Object.keys(object).forEach((key) => {\r\n          if (key.includes(keyOrShorKey)) {\r\n            return object[key];\r\n          }\r\n        });\r\n        return false;\r\n    }\r\n\r\n    public static findChar(string: string, limit: number, returnBool:boolean = false) {\r\n        for (let i = 0; i <= limit; i++) {\r\n          const index = string.indexOf(i.toString());\r\n          if (index !== -1) {\r\n            return returnBool ? true : i.toString();\r\n          }\r\n        }\r\n        return returnBool ? false : null;\r\n      }\r\n      \r\n    public static findComputedStyle(\r\n        element: HTMLElement,\r\n        property: string | Array<string>\r\n      ) {\r\n        const styles = window.getComputedStyle(element);\r\n        const propertiesObject: any = {};\r\n        try {\r\n          if (!element) {\r\n            throw new Error(\"Element not found\");\r\n          }\r\n          if (!property) {\r\n            throw new Error(\"Property is required\");\r\n          }\r\n          if (Array.isArray(property) && property.length > 0) {\r\n            property.forEach((props) => {\r\n              propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n            });\r\n            return propertiesObject;\r\n          }\r\n          if (typeof property === \"string\") {\r\n            return styles.getPropertyValue(`${property}`);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n    /**\r\n     * A function to escape special characters in a string using the DOM API.\r\n     * \r\n     * @param str - The input string to be escaped.\r\n     * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n     */\r\n    public static escape(str?: string): string {\r\n        if (!str) {\r\n          return \"\";\r\n        }\r\n        const div = document.createElement(\"div\");\r\n        div.appendChild(document.createTextNode(str));\r\n        return div.innerHTML;\r\n    }\r\n    /**\r\n     * This function takes an HTMLElement and a target string.\r\n     * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n     * If no such element is found, it returns null.\r\n     * @param referent - The starting point of the search.\r\n     * @param target - The CSS selector used to find the desired element.\r\n     * @returns The first Element with a matching target, or null if no such element is found.\r\n     */\r\n    public static findHTMLElementBy(referent: HTMLElement,target: string): Element | null {\r\n        let currentElement = referent as Element | null;\r\n        if (currentElement) {\r\n          while ((currentElement = currentElement.previousElementSibling)) {\r\n            const charCounterSpan = currentElement.querySelector(target);\r\n            if (charCounterSpan) {\r\n              return charCounterSpan;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n     * If no attributes are provided, it returns an empty string.\r\n     * @param attributes - An object containing HTML attributes.\r\n     * @returns A string representing the attributes.\r\n     */\r\n    public static formatHTMLAttributes(attributes: any) {\r\n        let attrs = \"\";\r\n        if (attributes) {\r\n          for (const [key, value] of Object.entries(attributes)) {\r\n            if (key) {\r\n              attrs += `${key}='${value}'`;\r\n            }\r\n          }\r\n        }\r\n        return attrs.trim();\r\n    }\r\n      \r\n  \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(936);\n"],"names":["root","factory","exports","module","define","amd","self","FormInput","CheckboxType","ColorType","PasswordType","SelectType","DateType","constructor","parentElement","this","initializeCheckbox","content","$$","processNodes","node","init","parentCheckbox","querySelector","childrenCheckboxes","querySelectorAll","parentChecked","checked","addEventListener","e","forEach","checkbox","Array","from","every","c","colorPicker","fetchColors","url","document","HTMLInputElement","getElementById","datalist","createElement","id","response","fetch","data","json","colors","color","option","value","appendChild","error","console","log","startDate","endDate","durationContainer","autoSetDuration","fullDate","findDurationBetweenToDate","start_date","Date","min","toISOString","split","end_date","getTime","text","fullDurationText","duration","setFullDurationText","convertFullDateToDays","absValue","Math","abs","floor","convertFullDateToWeeks","extDays","totalDaysNumber","weeksNumber","weeks","convertFullDateToMonths","monthsNumber","totalweeks","days","months","durationText","day","week","month","dayText","weekText","monthText","fulleMonth","element","innerHTML","passwordVisibility","PasswordVisibility","iconPath","showIconsToClick","active","fieldContainer","container","setAttribute","field","html","iconHide","iconShow","fieldBorderRadius","findComputedStyle","style","borderTopRightRadius","borderBottomRightRadius","display","type","paddingRight","hide","show","textToHTMLElement","Object","assign","position","top","right","height","width","justifyContent","alignItems","backgroundColor","iconStyle","svg","iconSvg","cursor","autoResize","select","HTMLSelectElement","event","tempSelect","tempOption","target","textContent","options","selectedIndex","cssText","after","tempSelectWidth","getBoundingClientRect","remove","dispatchEvent","Event","addIconToOptions","input","optionValue","icon","body","icons","parentNode","children","i","length","setAudio","audioPath","classname","audio","classList","add","source","src","resolvePath","textHtml","targetName","firstElementChild","HTMLElement","HTMLCollection","Error","collection","el","nodeList","callback","index","NodeList","isArray","getRegexp","RegExp","path","PROJECT_NAME","window","location","pathname","ORIGIN","origin","HOST","port","host","forbiddener","tag","forbiddenTag","opacity","zIndex","reduceText","maxLength","trim","substring","changeInputTextTypeToNumberType","attr","limit","priceType","decimal","regExp","getValue","replace","parseFloat","toFixed","parseInt","disablor","trigger","buttons","button","item","hasAttribute","closest","insertBefore","firstChild","HTMLButtonElement","setAsteriskToRequiredField","labels","fragment","createRange","createContextualFragment","hasKeyWithNameSubstring","object","getKey","key","includes","undefined","findObjectDataByKeyName","keyOrShorKey","keys","findChar","string","returnBool","indexOf","toString","property","styles","getComputedStyle","propertiesObject","props","getPropertyValue","escape","str","div","createTextNode","findHTMLElementBy","referent","currentElement","previousElementSibling","charCounterSpan","formatHTMLAttributes","attributes","attrs","entries","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}
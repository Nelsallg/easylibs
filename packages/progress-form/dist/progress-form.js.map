{"version":3,"file":"progress-form.js","mappings":"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","sources":["webpack://@easylibs/progress-form/webpack/universalModuleDefinition","webpack://@easylibs/progress-form/./src/scripts/focus-in-block.ts","webpack://@easylibs/progress-form/webpack/bootstrap","webpack://@easylibs/progress-form/./src/progress-form.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"progress-form\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"progress-form\"] = factory();\n\telse\n\t\troot[\"progress-form\"] = factory();\n})(self, () => {\nreturn ","/**\r\n * Gère le focus clavier sur les éléments d'un bloc HTML spécifié.\r\n * @param key - L'événement clavier qui a déclenché la fonction.\r\n * @param block - L'élément HTML qui représente le bloc sur lequel on souhaite gérer le focus.\r\n */\r\nexport function focusInBlock(key:KeyboardEvent, block:HTMLElement):void\r\n{\r\n    key.preventDefault();\r\n    const focusables = getFocusableElements(block);\r\n    let index = focusables.findIndex(f => f === block.querySelector(':focus'));\r\n    (key.shiftKey === true) ? index-- : index++;\r\n    console.log({focusables,block})\r\n    if (index >= focusables.length) { index = 0; }\r\n    if (index < 0) { index = focusables.length - 1; }\r\n    const FIELD = focusables[index] as HTMLElement;\r\n    FIELD.focus();\r\n}\r\n/**\r\n * Récupère tous les éléments focusables dans un bloc HTML spécifié.\r\n * @param block - L'élément HTML qui représente le bloc contenant les éléments focusables.\r\n * @returns Un tableau d'éléments focusables présents dans le bloc.\r\n */\r\nexport function getFocusableElements(block:HTMLElement):Element[]\r\n{\r\n    let focusableSelector = \"button, select, input, a, textarea\";\r\n    return Array.from(block.querySelectorAll(focusableSelector));\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { focusInBlock, getFocusableElements } from \"./scripts/focus-in-block\";\r\n\r\nlet fieldSetElement:HTMLElement|null = null;\r\ndeclare type ProgressFormType = {\r\n    form:HTMLFormElement,\r\n    progress?:{\r\n        progressElement?:HTMLElement,\r\n    }\r\n    translateX?:number,\r\n    targetMarginWidth?:number,\r\n    fieldsetMargingWidth?:number\r\n}\r\ndeclare interface StyleOptions {\r\n    form?: {\r\n        width?:string ,\r\n        height?:string ,\r\n        boxSizing?:string ,\r\n    },\r\n    fieldsetParent?:{\r\n        height: string,\r\n        overflow: string,\r\n        width: string,\r\n    },\r\n    fieldsetContainer?: {\r\n        width?:string ,\r\n        height?:string ,\r\n        overflow?:string ,\r\n        display?:string ,\r\n        justifyContent?:string ,\r\n        alignItems?:string,\r\n    },\r\n    fieldset?: {\r\n        width?:string ,\r\n        transition?:string ,\r\n        backgroundColor?:string ,\r\n        justifyContent?:string ,\r\n        alignItems?:string ,\r\n        display?:string ,\r\n        flexDirection?:string ,\r\n        padding?:string ,\r\n        border?:string ,\r\n        boxShadow?:string ,\r\n        borderRadius?:string ,\r\n    },\r\n}\r\n\r\nexport default class ProgressForm\r\n{\r\n    private translateX = -530;\r\n    public fieldsetLength:number = 0;\r\n    enableDefaultCssStyle: boolean;\r\n    constructor(enableDefaultCssStyle:boolean = true){\r\n        this.enableDefaultCssStyle  = enableDefaultCssStyle;\r\n        this.translateX = this.translateX;\r\n    }\r\n    public run<T extends ProgressFormType>(params:T,styleOptions?: StyleOptions)\r\n    {\r\n        const fieldSets = params.form.querySelectorAll('fieldset');\r\n        const progressElement = params.progress?.progressElement;\r\n        let nextIndex = 1;\r\n        let prevIndex = fieldSets.length;\r\n        let prevTranslateX = 0;\r\n        this.fieldsetLength = fieldSets.length;\r\n        const {progress} = this;\r\n        this.isValid(params.form);\r\n        if(fieldSets && fieldSets.length > 1){\r\n            fieldSets.forEach((fieldSet,i) => {\r\n                const nextButton = fieldSet.querySelector(\"[next__btn]\") as HTMLElement;\r\n                const prevButton = fieldSet.querySelector(\"[prev__btn]\") as HTMLElement;\r\n                let translateX = params.translateX as number ?? this.translateX;\r\n                const targetMarginWidth = params.targetMarginWidth ?? 0;\r\n                let nextTranslateX = (translateX * nextIndex) - targetMarginWidth;\r\n                prevTranslateX  = (translateX * nextIndex) + Math.abs(translateX * 2);\r\n                const nextProgress = progress * (i + 2);\r\n                const prevProgress = i > 1 ? progress * i : progress;\r\n                fieldSetElement = fieldSet;\r\n                fieldSet.classList.add(`fieldset${i}`);\r\n                if(i === 0){\r\n                    const fields = fieldSet.querySelectorAll(\"input:not([type='hidden'],[readonly]), textarea\") as NodeListOf<HTMLInputElement>;\r\n                    fields[i].focus();\r\n                    this.setFocusInFieldSet(fieldSetElement);\r\n                }\r\n                this.next(nextButton, nextIndex, nextTranslateX, progressElement, nextProgress);\r\n                nextIndex++;\r\n                if(i === 0){getFocusableElements(fieldSetElement);}\r\n                this.prev(prevButton, prevIndex, prevTranslateX, progressElement, prevProgress);\r\n                prevIndex--;\r\n                \r\n            }); \r\n        }\r\n        if(progressElement){progressElement.style.width = `${progress}%`;}\r\n        if(this.enableDefaultCssStyle)\r\n        {this.cssStyle(params,fieldSets,styleOptions)}\r\n\r\n    }\r\n    private next(nextButton: HTMLElement, nextIndex: number, nextTranslateX:number, progressElement?:HTMLElement,nextProgress?:number)\r\n    {\r\n        \r\n        const targets = this.fieldsetTargetArray;\r\n        if(nextButton){\r\n            nextButton.addEventListener(\"click\", (e)=>{\r\n                e.preventDefault();\r\n                const fieldSet = document.querySelector(`.fieldset${nextIndex - 1}`) as HTMLElement;\r\n                const isValid = this.isValidFieldset(fieldSet);\r\n                if(isValid){\r\n                    fieldSetElement = document.querySelector(`.fieldset${nextIndex}`) as HTMLElement;\r\n                    if(fieldSetElement)\r\n                    {\r\n                        this.setFocusInFieldSet(fieldSetElement);\r\n                        getFocusableElements(fieldSetElement);\r\n                    }\r\n                    // anime({\r\n                    //     targets: targets,\r\n                    //     translateX: nextTranslateX,\r\n                    //     easing: 'easeInOutExpo'\r\n                    // });\r\n                    \r\n                    if(progressElement)\r\n                    {progressElement.style.width = `${nextProgress??0}%`;}\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    private prev(prevButton:HTMLElement, prevIndex:number, prevTranslateX:number ,progressElement?:HTMLElement, prevProgress?:number)\r\n    {\r\n        const targets = this.fieldsetTargetArray;\r\n        if(prevButton){\r\n            prevButton.addEventListener(\"click\", (e)=>{\r\n                e.preventDefault();\r\n                fieldSetElement = document.querySelector(`.fieldset${prevIndex}`);\r\n                if(fieldSetElement)\r\n                {\r\n                    this.setFocusInFieldSet(fieldSetElement);\r\n                    getFocusableElements(fieldSetElement);\r\n                }\r\n                // anime({\r\n                //     targets: targets,\r\n                //     translateX: prevTranslateX,\r\n                //     easing: 'easeInOutExpo'\r\n                // });\r\n                if(progressElement)\r\n                {progressElement.style.width = `${prevProgress??0}%`;}\r\n             });\r\n        }\r\n    }\r\n    public get progress()\r\n    {\r\n        return 100 / this.fieldsetLength;\r\n    }\r\n    private setFocusInFieldSet(fieldSet:HTMLElement)\r\n    {\r\n        window.addEventListener('keydown', (e) => {\r\n            if (e.key === 'Tab' && fieldSet !== null){\r\n                focusInBlock(e, fieldSet);\r\n            }\r\n        })\r\n    }\r\n    private isValidFieldset(fieldSet: HTMLElement): boolean\r\n    {\r\n        if(fieldSet){\r\n            const fields =  Array.from(fieldSet.querySelectorAll('input, select, textarea'));\r\n            if(fields){\r\n                for(const field of fields as HTMLInputElement[]){\r\n                    if(!field.checkValidity()){\r\n                        field.reportValidity();\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    private get fieldsetTargetArray(): string[]\r\n    {\r\n        let fieldsetTargetArray = []\r\n        if(this.fieldsetLength > 0){\r\n            for(let i = 0; i < this.fieldsetLength; i++) {\r\n                fieldsetTargetArray.push(`.fieldset${i}`);\r\n            }\r\n        }\r\n        return fieldsetTargetArray;\r\n    }\r\n    private fieldsetAnimation(targets: string[], translateX:number)\r\n    {\r\n        for (let i = 0; i < targets.length; i++) {\r\n            const fieldset = document.querySelector(`${targets[i]}`) as HTMLFieldSetElement;\r\n            fieldset.style.transform = `translateX(${translateX})`;\r\n        }\r\n    }\r\n    private cssStyle<T extends ProgressFormType>(\r\n        params:T,\r\n        fieldSets:NodeListOf<HTMLFieldSetElement>,\r\n        styleOptions?:StyleOptions)\r\n    {\r\n        const fieldSetParent = params.form.querySelector(\"[fieldset__parent]\") as HTMLElement;\r\n        try {\r\n            if(!fieldSetParent){\r\n                throw new Error(\"The element with the attribute [fieldset__parent] not found in your form\");\r\n            }\r\n            const fieldsetContainer = fieldSetParent.querySelector(\"[fieldset__container]\") as HTMLElement;\r\n            if(!fieldsetContainer){\r\n                throw new Error(\"The element with the attribute [fieldset__container] not found in your fieldset__parent\");\r\n            }\r\n            const defaultFieldSetParentStyle = {\r\n                height: '100%',\r\n                overflow: 'hidden',\r\n                width: '530px'\r\n            }\r\n            const defaultFormStyle = {\r\n                width: '545px',\r\n                height: '100%',\r\n                boxSizing: 'border-box',\r\n            };\r\n            \r\n            const defaultFieldsetContainerStyle = {\r\n                width: `1800px`,\r\n                height: '100%',\r\n                overflow: 'hidden',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n            };\r\n    \r\n            const defaultFieldsetStyle = {\r\n                width: ' 25%',\r\n                transition: 'margin-left 0.4s ease-in-out',\r\n                backgroundColor: '#FFFFFF',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                padding: '30px',\r\n                border: 'none',\r\n                boxShadow: '0 0 5px rgba(255, 255, 255, 0.7137254902)',\r\n                borderRadius: '3px',\r\n            };\r\n        \r\n            // Fusionnez les styles par défaut avec les styles personnalisés\r\n            const formStyle = Object.assign({}, defaultFormStyle, styleOptions?.form);\r\n            const fieldSetParentStyle = Object.assign({},defaultFieldSetParentStyle, styleOptions?.fieldsetParent)\r\n            const fieldsetContainerStyle = Object.assign({},defaultFieldsetContainerStyle,styleOptions?.fieldsetContainer);\r\n            const fieldsetStyle = Object.assign({}, defaultFieldsetStyle, styleOptions?.fieldset);\r\n        \r\n            Object.assign(params.form.style, formStyle);\r\n            Object.assign(fieldSetParent.style, fieldSetParentStyle);\r\n            Object.assign(fieldsetContainer.style, fieldsetContainerStyle);\r\n            fieldSets.forEach((fieldSet, index) => {\r\n                Object.assign(fieldSet.style, fieldsetStyle);\r\n                fieldSet.classList.add(`fieldset${index}`);\r\n            });\r\n            const tempSelectWidth = fieldSets[0].getBoundingClientRect().width;\r\n            const fieldsetMargingWidth = params.fieldsetMargingWidth || 60;\r\n            const fieldSetWidth = fieldSets[0].offsetWidth;\r\n            const fieldsetContainerWidth = this.fieldsetLength * fieldSetWidth + fieldsetMargingWidth;\r\n            fieldsetContainer.style.width = `${fieldsetContainerWidth}px`;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    private isValid(form:HTMLFormElement){\r\n        try {\r\n            if(!form){\r\n                throw new Error('Le formulaire est invalide');\r\n            }\r\n            const next_buttons = form.querySelectorAll(\"[next__btn]\");\r\n            const prev_buttons = form.querySelector(\"[prev__btn]\");\r\n            const fieldSets = form.querySelectorAll('fieldset');\r\n            if(!fieldSets){\r\n                throw new Error(\"Aucune section de formulaire trouvée.\");\r\n            }\r\n            if(!next_buttons){\r\n                throw new Error('Aucun bouton \"suivant\" trouvé !');\r\n            }\r\n            if(!prev_buttons){\r\n                throw new Error(\"Aucun bouton 'précédent' trouvé !\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}"],"names":[],"sourceRoot":""}
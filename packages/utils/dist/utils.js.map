{"version":3,"file":"utils.js","mappings":"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","sources":["webpack://@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/utils/webpack/bootstrap","webpack://@easylibs/utils/webpack/runtime/define property getters","webpack://@easylibs/utils/webpack/runtime/hasOwnProperty shorthand","webpack://@easylibs/utils/webpack/runtime/make namespace object","webpack://@easylibs/utils/./src/utils.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","declare type RegexType =\r\n  | \"email\"\r\n  | \"phone-number\"\r\n  | \"number\"\r\n  | \"strong-password\"\r\n  | \"default-text\"\r\n  | \"fr-text\"\r\n  | \"en-text\"\r\n  | \"tr-text\"\r\n  | \"url-protocol\"\r\n  | \"url-domain\"\r\n  | \"url-ip\"\r\n  | \"url-port\"\r\n  | \"url-path\"\r\n  | \"url-query\"\r\n  | \"url-fragment\";\r\nexport default class Utils {\r\n  /**\r\n   * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n   * @param audioPath Le chemin de la source audio.\r\n   * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n   * @returns L'élément audio créé.\r\n   */\r\n  public static setAudio(audioPath: string, classname = null) {\r\n    const audio = document.createElement(\"audio\");\r\n    if (classname != null) {\r\n      audio.classList.add(classname);\r\n    }\r\n    const source = document.createElement(\"source\");\r\n    source.src = audioPath;\r\n    source.type = \"audio/mpeg\";\r\n    audio.appendChild(source);\r\n    return audio;\r\n  }\r\n  /**\r\n   * Converts an HTML string into an HTML element or a collection of HTML elements.\r\n   *\r\n   * @param textHtml - The HTML string to convert.\r\n   * @param targetName - The tag name of the target HTML element to create.\r\n   * @param children - A boolean indicating whether to return all children of the target element.\r\n   * @returns - Returns the first child of the target element if `children` is `false`, otherwise returns a collection of the element's children. Returns `null` if there are no children.\r\n   *\r\n   * This method creates a new HTML element of the type specified by `targetName`, sets its inner HTML to `textHtml`, and returns either the first child of this element or all its children as an HTMLCollection, depending on the value of `children`.\r\n   * If the HTML content generates no children, the method returns `null`.\r\n   */\r\n  public static textToHTMLElement(\r\n    textHtml: string,\r\n    targetName = \"div\",\r\n    children: boolean = false\r\n  ): Element | HTMLCollection | null {\r\n    const target = document.createElement(`${targetName}`);\r\n    target.innerHTML = textHtml;\r\n    if (true === children) {\r\n      return target.children;\r\n    }\r\n    return target.firstElementChild;\r\n  }\r\n  /**\r\n   * retourne un élément du dom\r\n   */\r\n  public static $$(element: any) {\r\n    if (typeof element !== \"string\") {\r\n      return element;\r\n    } else if (typeof element === \"string\") {\r\n      const collection = document.querySelectorAll(`${element}`);\r\n      const el = document.querySelector(`${element}`);\r\n      if (collection !== null && collection.length > 1) {\r\n        return collection;\r\n      }\r\n      if (el !== null) {\r\n        return el;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n   * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n   * @param nodeList Un objet NodeList ou un élément HTML.\r\n   * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n   * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n   * @returns\r\n   */\r\n  public static processNodes(\r\n    nodeList: any,\r\n    callback = (node: any, index?: number) => {}\r\n  ) {\r\n    if (nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n      return Array.from(nodeList).forEach((node, i) => {\r\n        callback(node, i);\r\n      });\r\n    }\r\n    if (null !== nodeList && undefined !== nodeList) {\r\n      return callback(nodeList);\r\n    }\r\n  }\r\n  /**\r\n   * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n   * @param type Le type d'expression régulière demandé.\r\n   * @returns L'expression régulière correspondante.\r\n   */\r\n  public static getRegexp(type: RegexType): RegExp {\r\n    switch (type) {\r\n      case \"email\":\r\n        return new RegExp(\r\n          /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i\r\n        );\r\n      case \"phone-number\":\r\n        return new RegExp(/^(0|\\+[1-9][0-9]{0,2}) ?[0-9]+$/);\r\n      case \"number\":\r\n        return new RegExp(/^[-+]?[0-9]*\\.?[0-9]+$/);\r\n      case \"strong-password\":\r\n        return new RegExp(\r\n          /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\r\n        );\r\n      case \"url-protocol\":\r\n        return new RegExp(/^(https?:\\/\\/)$/, \"i\");\r\n      case \"url-domain\":\r\n        return new RegExp(/^((([a-zA-Z0-9]{1,})[.-]?)+[a-zA-Z]{2,})$/, \"i\");\r\n      case \"url-ip\":\r\n        return new RegExp(\r\n          /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\r\n          \"i\"\r\n        );\r\n      case \"url-port\":\r\n        return new RegExp(\r\n          /^:(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3})$/,\r\n          \"i\"\r\n        );\r\n      case \"url-path\":\r\n        return new RegExp(/^(\\.\\/)?[-a-zA-Z\\d%_.~+\\/]*$/, \"i\");\r\n      case \"url-query\":\r\n        return new RegExp(/^(\\?[;&a-zA-Z\\d%_.~+=-]*)$/, \"i\");\r\n      case \"url-fragment\":\r\n        return new RegExp(/^#[-a-zA-Z\\d%_.~+/=?&;:!*'()]*$/, \"i\");\r\n      case \"default-text\":\r\n        return new RegExp(\r\n          /^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/\r\n        );\r\n      case \"fr-text\":\r\n        return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n      case \"en-text\":\r\n        return new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n      case \"tr-text\":\r\n        return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n      default:\r\n        throw new Error(\"Type d'expression régulière non pris en charge.\");\r\n    }\r\n  }\r\n  /**\r\n   * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement.\r\n   * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n   * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n   * @returns Un élément HTML représentant une zone interdite.\r\n   */\r\n  private static forbiddener(tag: string = \"td\", backgroundColor?: string) {\r\n    let forbiddenTag = document.createElement(tag);\r\n    forbiddenTag.setAttribute(\"class\", \"forbidden\");\r\n    const style = {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: \".7\",\r\n      zIndex: \"10\",\r\n      backgroundColor: backgroundColor ? backgroundColor : \"#FFFFFF\",\r\n    };\r\n    Object.assign(forbiddenTag.style, style);\r\n    return forbiddenTag as HTMLElement;\r\n  }\r\n  /**\r\n   * Réduit une chaîne de texte.\r\n   * @param text La chaîne de texte à réduire.\r\n   * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n   * @returns La chaîne de texte réduite.\r\n   */\r\n  public static truncateChars(text: string, maxLength: number = 14): string {\r\n    text = typeof text === \"string\" ? text.trim() : \"\";\r\n    if (text.length > maxLength) {\r\n      return `${text.substring(0, maxLength)}...`;\r\n    }\r\n    return text;\r\n  }\r\n  /**\r\n   * Changes the input text type to a number type and performs additional processing\r\n   * based on the specified parameters.\r\n   *\r\n   * @param attr - The CSS selector for the input elements to be processed.\r\n   * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n   * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n   * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n   */\r\n  public static changeInputTextTypeToNumberType(\r\n    attr: string,\r\n    limit?: number | null,\r\n    priceType: boolean = false,\r\n    decimal?: number\r\n  ) {\r\n    this.processNodes(this.$$(attr), function (element) {\r\n      let input = element as HTMLInputElement;\r\n      if (input) {\r\n        input.addEventListener(\"input\", function () {\r\n          const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n          if (decimal) {\r\n            const getValue = input.value.replace(regExp, \"\");\r\n            input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n          } else {\r\n            input.value = input.value.replace(regExp, \"\");\r\n          }\r\n          if (limit && parseInt(input.value) > limit) {\r\n            input.value = `${limit}`;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n   * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n   * and the background color for the forbidden tag.\r\n   *\r\n   * @param tag - The tag of the element to be disabled (default: \"td\").\r\n   * @param target - The target element to be disabled (default: undefined).\r\n   * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n   * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n   */\r\n  public static disablor(\r\n    tag = \"td\",\r\n    target?: HTMLElement,\r\n    trigger?: HTMLElement,\r\n    backgroundColor?: string\r\n  ) {\r\n    const buttons = document.querySelectorAll(\"[disablor],[self-disablor]\");\r\n    try {\r\n      if (!trigger && !buttons) {\r\n        throw new Error(\r\n          \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n        );\r\n      }\r\n      this.processNodes(buttons, (button: HTMLElement) => {\r\n        button.addEventListener(\"click\", () => {\r\n          const self = button.hasAttribute(\"self-disablor\");\r\n          let item = self\r\n            ? button\r\n            : (button.closest(\"[disablor]\") as HTMLElement);\r\n\r\n          if (!target && !item) {\r\n            throw new Error(\r\n              \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n          }\r\n          if (item) {\r\n            item.style.position = \"relative\";\r\n            item.insertBefore(\r\n              this.forbiddener(tag, backgroundColor),\r\n              item.firstChild\r\n            );\r\n            if (item instanceof HTMLButtonElement) {\r\n              item.setAttribute(\"disabled\", \"true\");\r\n            }\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Une erreur s'est produit: \", error);\r\n    }\r\n  }\r\n  /**\r\n   * Adds an asterisk indicator to labels associated with required form fields.\r\n   * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n   * of the 'required-field' attribute. The function utilizes the processNodes method\r\n   * to iterate through the matched labels and append the asterisk.\r\n   */\r\n  public static setAsteriskToRequiredField() \r\n  {\r\n    const setIcon = (svgString:string)=>{\r\n      const asterisk = this.textToHTMLElement(svgString) as HTMLElement;\r\n      const labels = document.querySelectorAll(\"label[required-field]\");\r\n      asterisk.style.color = \"#f89a9b\";\r\n      asterisk.style.width = \"10px\";\r\n      asterisk.style.height = \"10px\";\r\n      if (labels) {\r\n        this.processNodes(labels, (label: HTMLLabelElement) => {\r\n          const clonedAsterisk = asterisk.cloneNode(true);\r\n          label.appendChild(clonedAsterisk);\r\n        });\r\n      }\r\n    }\r\n    const cacheIcon = sessionStorage.getItem(\"asterisk\");\r\n    if(cacheIcon)return setIcon(cacheIcon);\r\n    const svgUrl = \"https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/utils/dist/assets/asterisk.svg\";\r\n    fetch(svgUrl)\r\n      .then((response) => response.text())\r\n      .then((svgString) => {\r\n        setIcon(svgString)\r\n        sessionStorage.setItem(\"asterisk\", svgString);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur lors du chargement du fichier SVG:\", error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method checks if the object contains a key with the given substring.\r\n   * @param object The object to be searched.\r\n   * @param substring The substring to search for.\r\n   * @param getKey An optional parameter to determine the type of return value.\r\n   *               If true, the method will return the key as a string.\r\n   *               If false or not provided, the method will return the value corresponding to the key.\r\n   * @returns The value or key of the first matching property if found, otherwise false.\r\n   */\r\n  public static hasKeyWithNameSubstring(\r\n    object: any,\r\n    substring: string,\r\n    getKey?: boolean\r\n  ) {\r\n    for (let key in object) {\r\n      if (key.includes(substring)) {\r\n        if (undefined === getKey || false === getKey) {\r\n          return object[key];\r\n        }\r\n        if (true === getKey) {\r\n          return key;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * This method searches for an object's property by its key or short key.\r\n   * @param object The object to be searched.\r\n   * @param keyOrShortKey The key or short key to search for.\r\n   * @param key An optional parameter to determine the type of return value.\r\n   *            If true, the function will return the key as a string.\r\n   *            If false or not provided, the function will return the value corresponding to the key.\r\n   * @returns The value or key of the first matching property if found, otherwise false.\r\n   */\r\n  public static findObjectDataByKeyName(\r\n    object: any,\r\n    keyOrShorKey: string,\r\n    key?: boolean\r\n  ) {\r\n    Object.keys(object).forEach((key) => {\r\n      if (key.includes(keyOrShorKey)) {\r\n        return object[key];\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n\r\n  public static findChar(\r\n    string: string,\r\n    limit: number,\r\n    returnBool: boolean = false\r\n  ) {\r\n    for (let i = 0; i <= limit; i++) {\r\n      const index = string.indexOf(i.toString());\r\n      if (index !== -1) {\r\n        return returnBool ? true : i.toString();\r\n      }\r\n    }\r\n    return returnBool ? false : null;\r\n  }\r\n\r\n  public static findComputedStyle(\r\n    element: HTMLElement,\r\n    property: string | Array<string>\r\n  ): string {\r\n    const styles = window.getComputedStyle(element);\r\n    const propertiesObject: any = {};\r\n    try {\r\n      if (!element) {\r\n        throw new Error(\"Element not found\");\r\n      }\r\n      if (!property) {\r\n        throw new Error(\"Property is required\");\r\n      }\r\n      if (Array.isArray(property) && property.length > 0) {\r\n        property.forEach((props) => {\r\n          propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n        });\r\n        return propertiesObject;\r\n      }\r\n      if (typeof property === \"string\") {\r\n        return styles.getPropertyValue(`${property}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  /**\r\n   * A function to escape special characters in a string using the DOM API.\r\n   *\r\n   * @param str - The input string to be escaped.\r\n   * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n   */\r\n  public static escape(str?: string): string {\r\n    if (!str) {\r\n      return \"\";\r\n    }\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(document.createTextNode(str));\r\n    return div.innerHTML;\r\n  }\r\n  /**\r\n   * This function takes an HTMLElement and a target string.\r\n   * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n   * If no such element is found, it returns null.\r\n   * @param referent - The starting point of the search.\r\n   * @param target - The CSS selector used to find the desired element.\r\n   * @returns The first Element with a matching target, or null if no such element is found.\r\n   */\r\n  public static findHTMLElementBy(\r\n    referent: HTMLElement,\r\n    target: string\r\n  ): Element | null {\r\n    let currentElement = referent as Element | null;\r\n    if (currentElement) {\r\n      while ((currentElement = currentElement.previousElementSibling)) {\r\n        const charCounterSpan = currentElement.querySelector(target);\r\n        if (charCounterSpan) {\r\n          return charCounterSpan;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n   * If no attributes are provided, it returns an empty string.\r\n   * @param attributes - An object containing HTML attributes.\r\n   * @returns A string representing the attributes.\r\n   */\r\n  public static formatHTMLAttributes(attributes: any) {\r\n    let attrs = \"\";\r\n    if (attributes) {\r\n      for (const [key, value] of Object.entries(attributes)) {\r\n        if (key) {\r\n          attrs += `${key}='${value}'`;\r\n        }\r\n      }\r\n    }\r\n    return attrs.trim();\r\n  }\r\n}\r\n"],"names":["Utils","_classCallCheck","_createClass","key","value","setAudio","audioPath","classname","arguments","length","undefined","audio","document","createElement","classList","add","source","src","type","appendChild","textToHTMLElement","textHtml","targetName","children","target","concat","innerHTML","firstElementChild","$$","element","collection","querySelectorAll","el","querySelector","processNodes","nodeList","callback","node","index","NodeList","Array","isArray","from","forEach","i","getRegexp","RegExp","Error","forbiddener","tag","backgroundColor","forbiddenTag","setAttribute","style","position","width","height","opacity","zIndex","Object","assign","truncateChars","text","maxLength","trim","substring","changeInputTextTypeToNumberType","attr","limit","priceType","decimal","input","addEventListener","regExp","getValue","replace","parseFloat","toFixed","parseInt","disablor","_this","trigger","buttons","button","self","hasAttribute","item","closest","insertBefore","firstChild","HTMLButtonElement","error","console","setAsteriskToRequiredField","_this2","setIcon","svgString","asterisk","labels","color","label","clonedAsterisk","cloneNode","cacheIcon","sessionStorage","getItem","svgUrl","fetch","then","response","setItem","hasKeyWithNameSubstring","object","getKey","includes","findObjectDataByKeyName","keyOrShorKey","keys","findChar","string","returnBool","indexOf","toString","findComputedStyle","property","styles","window","getComputedStyle","propertiesObject","props","getPropertyValue","escape","str","div","createTextNode","findHTMLElementBy","referent","currentElement","previousElementSibling","charCounterSpan","formatHTMLAttributes","attributes","attrs","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","default"],"sourceRoot":""}
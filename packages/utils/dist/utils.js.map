{"version":3,"file":"utils.js","mappings":"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","sources":["webpack://@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/utils/./src/utils.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","declare type RegexType = 'email' | 'phoneNumber' | 'number' | 'strongPassword' | 'url' | 'defaultText' | 'frText' | 'enText' | 'trText';\r\nexport default class Utils{\r\n    /**\r\n     * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n     * @param audioPath Le chemin de la source audio.\r\n     * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n     * @returns L'élément audio créé.\r\n     */\r\n    public setAudio(audioPath:string, classname=null) {\r\n        const audio = document.createElement('audio');\r\n        if(classname != null){audio.classList.add(classname);}\r\n        const source = document.createElement('source');\r\n        source.src = this.resolvePath(audioPath);\r\n        source.type = \"audio/mpeg\";\r\n        audio.appendChild(source);\r\n        return audio;\r\n    }\r\n    public textToHTMLElement(textHtml:string, targetName=\"div\", children:boolean = false):Element|HTMLCollection|null\r\n    {\r\n        const target = document.createElement(`${targetName}`);\r\n        target.innerHTML = textHtml;\r\n        if(true === children){return target.children;}\r\n        return target.firstElementChild\r\n    }\r\n    /**\r\n     * retourne un élément du dom\r\n     */\r\n    public $$(element:Element|HTMLCollection|string){\r\n        if (element instanceof HTMLElement || element instanceof HTMLCollection) {\r\n            return element;\r\n        }else if(typeof element === 'string') {\r\n            const collection = document.querySelectorAll(`${element}`);\r\n            const el = document.querySelector(`${element}`);\r\n            if (collection !== null && collection.length>1) {\r\n                return collection;\r\n            }\r\n            if(el !== null){\r\n                return el; \r\n            }\r\n        }else {throw new Error(\"Type of element is not supported\");}\r\n    }\r\n    /**\r\n     * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n     * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n     * @param nodeList Un objet NodeList ou un élément HTML. \r\n     * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n     * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n     * @returns \r\n     */\r\n    public processNodes(nodeList: any, callback = (node: any, index?:number) => {}){\r\n        if(nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n        return Array.from(nodeList).forEach((node,i) => {\r\n            callback(node,i);\r\n        });\r\n        }\r\n        if(null !== nodeList && undefined !== nodeList)\r\n        {return callback(nodeList);}\r\n    }\r\n    \r\n\r\n    /**\r\n     * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n     * @param type Le type d'expression régulière demandé.\r\n     * @returns L'expression régulière correspondante.\r\n     */\r\n    public getRegexp(type: RegexType): RegExp {\r\n        switch (type) {\r\n            case 'email':\r\n            return new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i);\r\n            case 'phoneNumber':\r\n            return new RegExp(/^(0|\\\\+[1-9]{1,3})[0-9 ]+$/);\r\n            case 'number':\r\n            return new RegExp(/^[0-9]+$/);\r\n            case 'strongPassword':\r\n            return new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/);\r\n            case 'url':\r\n            return new RegExp(/^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?$/);\r\n            case 'defaultText':\r\n            return new RegExp(/^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/);\r\n            case 'frText':\r\n            return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n            case 'enText':\r\n            return  new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n            case 'trText':\r\n            return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n            default:\r\n            throw new Error('Type d\\'expression régulière non pris en charge.');\r\n        }\r\n    }\r\n    /**\r\n     * Résout le chemin d'une ressource en fonction de l'environnement d'exécution.\r\n     * @param path Le chemin de la ressource.\r\n     * @returns Le chemin résolu de la ressource.\r\n     */\r\n    public resolvePath(path:string){\r\n        const PROJECT_NAME = window.location.pathname.split(\"/\")[1];\r\n        const ORIGIN = window.location.origin;\r\n        const PORT = window.location.port;\r\n        const HOST = window.location.host;\r\n        let _stylesheetsoutdir_;\r\n\r\n        if (HOST == \"localhost\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${PROJECT_NAME}/${path}`;\r\n        } else if (HOST !== \"localhost\" && PORT !== \"\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        } else {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        }\r\n    }\r\n    /**\r\n     * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement. \r\n     * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n     * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n     * @returns Un élément HTML représentant une zone interdite.\r\n     */\r\n    private forbiddener(tag:string='td', backgroundColor?:string){\r\n        let forbiddenTag = document.createElement(tag)\r\n        forbiddenTag.setAttribute('class','forbidden')\r\n        const style = {\r\n            position:'absolute',\r\n            width: '100%',\r\n            height:'100%',\r\n            opacity: '.7',\r\n            zIndex: '10',\r\n            backgroundColor: backgroundColor ? backgroundColor : '#FFFFFF',\r\n        }\r\n        Object.assign(forbiddenTag.style, style)\r\n        return forbiddenTag as HTMLElement;\r\n    }\r\n    /**\r\n     * Réduit une chaîne de texte.\r\n     * @param text La chaîne de texte à réduire.\r\n     * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n     * @returns La chaîne de texte réduite.\r\n     */\r\n    public reduceText(text: string, maxLength: number = 14): string {\r\n        text = typeof text === \"string\" ? text.trim() : \"\";\r\n        if (text.length > maxLength) {\r\n          return `${text.substring(0, maxLength)}...`;\r\n        }\r\n        return text;\r\n    }\r\n    /**\r\n     * Changes the input text type to a number type and performs additional processing\r\n     * based on the specified parameters.\r\n     * \r\n     * @param attr - The CSS selector for the input elements to be processed.\r\n     * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n     * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n     * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n     */\r\n    public changeInputTextTypeToNumberType(attr: string,limit?: number | null,priceType: boolean = false,decimal?: number) {\r\n        this.processNodes(this.$$(attr), function (element) {\r\n          let input = element as HTMLInputElement;\r\n          if (input) {\r\n            input.addEventListener(\"input\", function () {\r\n              const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n              if (decimal) {\r\n                const getValue = input.value.replace(regExp, \"\");\r\n                input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n              } else {\r\n                input.value = input.value.replace(regExp, \"\");\r\n              }\r\n              if (limit && parseInt(input.value) > limit) {\r\n                input.value = `${limit}`;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }\r\n    /**\r\n     * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n     * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n     * and the background color for the forbidden tag.\r\n     * \r\n     * @param tag - The tag of the element to be disabled (default: \"td\").\r\n     * @param target - The target element to be disabled (default: undefined).\r\n     * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n     * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n     */\r\n    public disablor(tag = \"td\",target?: HTMLElement,trigger?: HTMLElement,backgroundColor?: string) {\r\n        const buttons = document.querySelectorAll(\r\n        \"[disablor],[self-disablor]\"\r\n        );\r\n        try {\r\n        if (!trigger && !buttons) {\r\n            throw new Error(\r\n            \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n        }\r\n        this.processNodes(buttons, (button: HTMLElement) => {\r\n            button.addEventListener(\"click\", () => {\r\n            const self = button.hasAttribute(\"self-disablor\");\r\n            let item = self ? button : (button.closest(\"[disablor]\") as HTMLElement);\r\n    \r\n            if (!target && !item) {\r\n                throw new Error(\r\n                \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n                );\r\n            }\r\n            if (item) {\r\n                item.style.position = \"relative\";\r\n                item.insertBefore(this.forbiddener(tag, backgroundColor), item.firstChild);\r\n                if (item instanceof HTMLButtonElement) {\r\n                item.setAttribute(\"disabled\", \"true\");\r\n                }\r\n            }\r\n            });\r\n        });\r\n        } catch (error) {\r\n            console.error(\"Une erreur s'est produit: \", error);\r\n        }\r\n    }\r\n    /**\r\n     * Adds an asterisk indicator to labels associated with required form fields.\r\n     * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n     * of the 'required-field' attribute. The function utilizes the processNodes method\r\n     * to iterate through the matched labels and append the asterisk.\r\n     */\r\n    public setAsteriskToRequiredField() {\r\n        const asterisk = `<svg class=\"required-svg\">\r\n        <use xlink:href=\"/svg/form.svg#asterisk\"></use>\r\n        </svg>`;\r\n        const labels = document.querySelectorAll(\"label[required-field]\");\r\n        if (labels) {\r\n            this.processNodes(labels, (node: HTMLLabelElement) => {\r\n                const rang = document.createRange();\r\n                const fragment = rang.createContextualFragment(asterisk);\r\n                node.appendChild(fragment);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * This method checks if the object contains a key with the given substring.\r\n     * @param object The object to be searched.\r\n     * @param substring The substring to search for.\r\n     * @param getKey An optional parameter to determine the type of return value.\r\n     *               If true, the method will return the key as a string.\r\n     *               If false or not provided, the method will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public hasKeyWithNameSubstring(object: any,substring: string,getKey?: boolean) {\r\n        for (let key in object) {\r\n          if (key.includes(substring)) {\r\n            if (undefined === getKey || false === getKey) {\r\n              return object[key];\r\n            }\r\n            if (true === getKey) {\r\n              return key;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * This method searches for an object's property by its key or short key.\r\n     * @param object The object to be searched.\r\n     * @param keyOrShortKey The key or short key to search for.\r\n     * @param key An optional parameter to determine the type of return value.\r\n     *            If true, the function will return the key as a string.\r\n     *            If false or not provided, the function will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public findObjectDataByKeyName(object: any,keyOrShorKey: string,key?: boolean) {\r\n        Object.keys(object).forEach((key) => {\r\n          if (key.includes(keyOrShorKey)) {\r\n            return object[key];\r\n          }\r\n        });\r\n        return false;\r\n    }\r\n\r\n    public findChar(string: string, limit: number, returnBool:boolean = false) {\r\n        for (let i = 0; i <= limit; i++) {\r\n          const index = string.indexOf(i.toString());\r\n          if (index !== -1) {\r\n            return returnBool ? true : i.toString();\r\n          }\r\n        }\r\n        return returnBool ? false : null;\r\n      }\r\n      \r\n    public findComputedStyle(\r\n        element: HTMLElement,\r\n        property: string | Array<string>\r\n      ) {\r\n        const styles = window.getComputedStyle(element);\r\n        const propertiesObject: any = {};\r\n        try {\r\n          if (!element) {\r\n            throw new Error(\"Element not found\");\r\n          }\r\n          if (!property) {\r\n            throw new Error(\"Property is required\");\r\n          }\r\n          if (Array.isArray(property) && property.length > 0) {\r\n            property.forEach((props) => {\r\n              propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n            });\r\n            return propertiesObject;\r\n          }\r\n          if (typeof property === \"string\") {\r\n            return styles.getPropertyValue(`${property}`);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n    /**\r\n     * A function to escape special characters in a string using the DOM API.\r\n     * \r\n     * @param str - The input string to be escaped.\r\n     * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n     */\r\n    public escape(str?: string): string {\r\n        if (!str) {\r\n          return \"\";\r\n        }\r\n        const div = document.createElement(\"div\");\r\n        div.appendChild(document.createTextNode(str));\r\n        return div.innerHTML;\r\n    }\r\n    /**\r\n     * This function takes an HTMLElement and a target string.\r\n     * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n     * If no such element is found, it returns null.\r\n     * @param referent - The starting point of the search.\r\n     * @param target - The CSS selector used to find the desired element.\r\n     * @returns The first Element with a matching target, or null if no such element is found.\r\n     */\r\n    public findHTMLElementBy(referent: HTMLElement,target: string): Element | null {\r\n        let currentElement = referent as Element | null;\r\n        if (currentElement) {\r\n          while ((currentElement = currentElement.previousElementSibling)) {\r\n            const charCounterSpan = currentElement.querySelector(target);\r\n            if (charCounterSpan) {\r\n              return charCounterSpan;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n     * If no attributes are provided, it returns an empty string.\r\n     * @param attributes - An object containing HTML attributes.\r\n     * @returns A string representing the attributes.\r\n     */\r\n    public formatHTMLAttributes(attributes: any) {\r\n        let attrs = \"\";\r\n        if (attributes) {\r\n          for (const [key, value] of Object.entries(attributes)) {\r\n            if (key) {\r\n              attrs += `${key}='${value}'`;\r\n            }\r\n          }\r\n        }\r\n        return attrs.trim();\r\n    }\r\n      \r\n  \r\n}"],"names":[],"sourceRoot":""}
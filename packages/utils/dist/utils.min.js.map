{"version":3,"file":"utils.min.js","mappings":"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","sources":["webpack://@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/utils/webpack/runtime/load script","webpack://@easylibs/utils/webpack/bootstrap","webpack://@easylibs/utils/webpack/runtime/define property getters","webpack://@easylibs/utils/webpack/runtime/ensure chunk","webpack://@easylibs/utils/webpack/runtime/get javascript chunk filename","webpack://@easylibs/utils/webpack/runtime/global","webpack://@easylibs/utils/webpack/runtime/hasOwnProperty shorthand","webpack://@easylibs/utils/webpack/runtime/make namespace object","webpack://@easylibs/utils/webpack/runtime/publicPath","webpack://@easylibs/utils/webpack/runtime/jsonp chunk loading","webpack://@easylibs/utils/./src/utils.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","var inProgress = {};\nvar dataWebpackPrefix = \"@easylibs/utils:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".min.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t493: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_easylibs_utils\"] = self[\"webpackChunk_easylibs_utils\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","declare type RegexType = \r\n    'email' | \r\n    'phone-number' | \r\n    'number' | \r\n    'strong-password' | \r\n    'default-text' | \r\n    'fr-text' | \r\n    'en-text' | \r\n    'tr-text' |\r\n    'url-protocol' | \r\n    'url-domain' | \r\n    'url-ip' | \r\n    'url-port' | \r\n    'url-path' | \r\n    'url-query' | \r\n    'url-fragment';\r\nexport default class Utils{\r\n    /**\r\n     * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n     * @param audioPath Le chemin de la source audio.\r\n     * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n     * @returns L'élément audio créé.\r\n     */\r\n    public static setAudio(audioPath:string, classname=null) {\r\n        const audio = document.createElement('audio');\r\n        if(classname != null){audio.classList.add(classname);}\r\n        const source = document.createElement('source');\r\n        source.src = audioPath;\r\n        source.type = \"audio/mpeg\";\r\n        audio.appendChild(source);\r\n        return audio;\r\n    }\r\n    /**\r\n   * Converts an HTML string into an HTML element or a collection of HTML elements.\r\n   *\r\n   * @param textHtml - The HTML string to convert.\r\n   * @param targetName - The tag name of the target HTML element to create.\r\n   * @param children - A boolean indicating whether to return all children of the target element.\r\n   * @returns - Returns the first child of the target element if `children` is `false`, otherwise returns a collection of the element's children. Returns `null` if there are no children.\r\n   *\r\n   * This method creates a new HTML element of the type specified by `targetName`, sets its inner HTML to `textHtml`, and returns either the first child of this element or all its children as an HTMLCollection, depending on the value of `children`.\r\n   * If the HTML content generates no children, the method returns `null`.\r\n   */\r\n    public static textToHTMLElement(textHtml:string, targetName=\"div\", children:boolean = false):Element|HTMLCollection|null\r\n    {\r\n        const target = document.createElement(`${targetName}`);\r\n        target.innerHTML = textHtml;\r\n        if(true === children){return target.children;}\r\n        return target.firstElementChild\r\n    }\r\n    /**\r\n     * retourne un élément du dom\r\n     */\r\n    public static $$(element:any){\r\n        if (typeof element !== 'string') {\r\n            return element;\r\n        }else if(typeof element === 'string') {\r\n            const collection = document.querySelectorAll(`${element}`);\r\n            const el = document.querySelector(`${element}`);\r\n            if (collection !== null && collection.length>1) {\r\n                return collection;\r\n            }\r\n            if(el !== null){\r\n                return el; \r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n     * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n     * @param nodeList Un objet NodeList ou un élément HTML. \r\n     * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n     * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n     * @returns \r\n     */\r\n    public static processNodes(nodeList: any, callback = (node: any, index?:number) => {}){\r\n        if(nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n        return Array.from(nodeList).forEach((node,i) => {\r\n            callback(node,i);\r\n        });\r\n        }\r\n        if(null !== nodeList && undefined !== nodeList)\r\n        {return callback(nodeList);}\r\n    }\r\n    /**\r\n     * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n     * @param type Le type d'expression régulière demandé.\r\n     * @returns L'expression régulière correspondante.\r\n     */\r\n    public static getRegexp(type: RegexType): RegExp {\r\n        switch (type) {\r\n            case 'email':\r\n              return new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i);\r\n            case 'phone-number':\r\n              return new RegExp(/^(0|\\+[1-9][0-9]{0,2}) ?[0-9]+$/);\r\n            case 'number':\r\n              return new RegExp(/^[-+]?[0-9]*\\.?[0-9]+$/);\r\n            case 'strong-password':\r\n              return new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/);\r\n            case 'url-protocol':\r\n              return new RegExp(/^(https?:\\/\\/)$/, 'i');\r\n            case 'url-domain':\r\n                return new RegExp(/^((([a-zA-Z0-9]{1,})[.-]?)+[a-zA-Z]{2,})$/, 'i');\r\n            case 'url-ip':\r\n                return new RegExp(/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/, 'i');\r\n            case 'url-port':\r\n                return new RegExp(/^:(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3})$/, 'i');\r\n            case 'url-path':\r\n                return new RegExp(/^(\\.\\/)?[-a-zA-Z\\d%_.~+\\/]*$/, 'i');\r\n            case 'url-query':\r\n                return new RegExp(/^(\\?[;&a-zA-Z\\d%_.~+=-]*)$/, 'i');\r\n            case 'url-fragment':\r\n                return new RegExp(/^#[-a-zA-Z\\d%_.~+/=?&;:!*'()]*$/, 'i');\r\n            case 'default-text':\r\n              return new RegExp(/^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/);\r\n            case 'fr-text':\r\n              return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n            case 'en-text':\r\n              return  new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n            case 'tr-text':\r\n              return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n            default:\r\n              throw new Error('Type d\\'expression régulière non pris en charge.');\r\n        }\r\n    }\r\n    /**\r\n     * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement. \r\n     * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n     * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n     * @returns Un élément HTML représentant une zone interdite.\r\n     */\r\n    private static forbiddener(tag:string='td', backgroundColor?:string){\r\n        let forbiddenTag = document.createElement(tag)\r\n        forbiddenTag.setAttribute('class','forbidden')\r\n        const style = {\r\n            position:'absolute',\r\n            width: '100%',\r\n            height:'100%',\r\n            opacity: '.7',\r\n            zIndex: '10',\r\n            backgroundColor: backgroundColor ? backgroundColor : '#FFFFFF',\r\n        }\r\n        Object.assign(forbiddenTag.style, style)\r\n        return forbiddenTag as HTMLElement;\r\n    }\r\n    /**\r\n     * Réduit une chaîne de texte.\r\n     * @param text La chaîne de texte à réduire.\r\n     * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n     * @returns La chaîne de texte réduite.\r\n     */\r\n    public static truncateChars(text: string, maxLength: number = 14): string {\r\n        text = typeof text === \"string\" ? text.trim() : \"\";\r\n        if (text.length > maxLength) {\r\n          return `${text.substring(0, maxLength)}...`;\r\n        }\r\n        return text;\r\n    }\r\n    /**\r\n     * Changes the input text type to a number type and performs additional processing\r\n     * based on the specified parameters.\r\n     * \r\n     * @param attr - The CSS selector for the input elements to be processed.\r\n     * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n     * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n     * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n     */\r\n    public static changeInputTextTypeToNumberType(attr: string,limit?: number | null,priceType: boolean = false,decimal?: number) {\r\n        this.processNodes(this.$$(attr), function (element) {\r\n          let input = element as HTMLInputElement;\r\n          if (input) {\r\n            input.addEventListener(\"input\", function () {\r\n              const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n              if (decimal) {\r\n                const getValue = input.value.replace(regExp, \"\");\r\n                input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n              } else {\r\n                input.value = input.value.replace(regExp, \"\");\r\n              }\r\n              if (limit && parseInt(input.value) > limit) {\r\n                input.value = `${limit}`;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }\r\n    /**\r\n     * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n     * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n     * and the background color for the forbidden tag.\r\n     * \r\n     * @param tag - The tag of the element to be disabled (default: \"td\").\r\n     * @param target - The target element to be disabled (default: undefined).\r\n     * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n     * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n     */\r\n    public static disablor(tag = \"td\",target?: HTMLElement,trigger?: HTMLElement,backgroundColor?: string) {\r\n        const buttons = document.querySelectorAll(\r\n        \"[disablor],[self-disablor]\"\r\n        );\r\n        try {\r\n        if (!trigger && !buttons) {\r\n            throw new Error(\r\n            \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n        }\r\n        this.processNodes(buttons, (button: HTMLElement) => {\r\n            button.addEventListener(\"click\", () => {\r\n            const self = button.hasAttribute(\"self-disablor\");\r\n            let item = self ? button : (button.closest(\"[disablor]\") as HTMLElement);\r\n    \r\n            if (!target && !item) {\r\n                throw new Error(\r\n                \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n                );\r\n            }\r\n            if (item) {\r\n                item.style.position = \"relative\";\r\n                item.insertBefore(this.forbiddener(tag, backgroundColor), item.firstChild);\r\n                if (item instanceof HTMLButtonElement) {\r\n                item.setAttribute(\"disabled\", \"true\");\r\n                }\r\n            }\r\n            });\r\n        });\r\n        } catch (error) {\r\n            console.error(\"Une erreur s'est produit: \", error);\r\n        }\r\n    }\r\n    /**\r\n     * Adds an asterisk indicator to labels associated with required form fields.\r\n     * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n     * of the 'required-field' attribute. The function utilizes the processNodes method\r\n     * to iterate through the matched labels and append the asterisk.\r\n     */\r\n    public static setAsteriskToRequiredField() {\r\n      import(\"raw-loader!./assets/asterisk.svg\").then((SVG)=>{\r\n        const encodedSvg = SVG.default;\r\n        const svgString = decodeURIComponent(encodedSvg.split(',')[1]);\r\n        const asterisk = this.textToHTMLElement(svgString) as HTMLElement;\r\n        const labels = document.querySelectorAll(\"label[required-field]\");\r\n        asterisk.style.color = \"#f89a9b\";\r\n        asterisk.style.width = \"10px\";\r\n        asterisk.style.height = \"10px\";\r\n        if (labels) {\r\n            this.processNodes(labels, (label: HTMLLabelElement) => {\r\n              const clonedAsterisk = asterisk.cloneNode(true);\r\n              label.appendChild(clonedAsterisk);\r\n            });\r\n        }\r\n      });\r\n        \r\n    }\r\n    /**\r\n     * This method checks if the object contains a key with the given substring.\r\n     * @param object The object to be searched.\r\n     * @param substring The substring to search for.\r\n     * @param getKey An optional parameter to determine the type of return value.\r\n     *               If true, the method will return the key as a string.\r\n     *               If false or not provided, the method will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static hasKeyWithNameSubstring(object: any,substring: string,getKey?: boolean) {\r\n        for (let key in object) {\r\n          if (key.includes(substring)) {\r\n            if (undefined === getKey || false === getKey) {\r\n              return object[key];\r\n            }\r\n            if (true === getKey) {\r\n              return key;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * This method searches for an object's property by its key or short key.\r\n     * @param object The object to be searched.\r\n     * @param keyOrShortKey The key or short key to search for.\r\n     * @param key An optional parameter to determine the type of return value.\r\n     *            If true, the function will return the key as a string.\r\n     *            If false or not provided, the function will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static findObjectDataByKeyName(object: any,keyOrShorKey: string,key?: boolean) {\r\n        Object.keys(object).forEach((key) => {\r\n          if (key.includes(keyOrShorKey)) {\r\n            return object[key];\r\n          }\r\n        });\r\n        return false;\r\n    }\r\n\r\n    public static findChar(string: string, limit: number, returnBool:boolean = false) {\r\n        for (let i = 0; i <= limit; i++) {\r\n          const index = string.indexOf(i.toString());\r\n          if (index !== -1) {\r\n            return returnBool ? true : i.toString();\r\n          }\r\n        }\r\n        return returnBool ? false : null;\r\n      }\r\n      \r\n    public static findComputedStyle(\r\n        element: HTMLElement,\r\n        property: string | Array<string>\r\n      ): string {\r\n        const styles = window.getComputedStyle(element);\r\n        const propertiesObject: any = {};\r\n        try {\r\n          if (!element) {\r\n            throw new Error(\"Element not found\");\r\n          }\r\n          if (!property) {\r\n            throw new Error(\"Property is required\");\r\n          }\r\n          if (Array.isArray(property) && property.length > 0) {\r\n            property.forEach((props) => {\r\n              propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n            });\r\n            return propertiesObject;\r\n          }\r\n          if (typeof property === \"string\") {\r\n            return styles.getPropertyValue(`${property}`);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n    /**\r\n     * A function to escape special characters in a string using the DOM API.\r\n     * \r\n     * @param str - The input string to be escaped.\r\n     * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n     */\r\n    public static escape(str?: string): string {\r\n        if (!str) {\r\n          return \"\";\r\n        }\r\n        const div = document.createElement(\"div\");\r\n        div.appendChild(document.createTextNode(str));\r\n        return div.innerHTML;\r\n    }\r\n    /**\r\n     * This function takes an HTMLElement and a target string.\r\n     * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n     * If no such element is found, it returns null.\r\n     * @param referent - The starting point of the search.\r\n     * @param target - The CSS selector used to find the desired element.\r\n     * @returns The first Element with a matching target, or null if no such element is found.\r\n     */\r\n    public static findHTMLElementBy(referent: HTMLElement,target: string): Element | null {\r\n        let currentElement = referent as Element | null;\r\n        if (currentElement) {\r\n          while ((currentElement = currentElement.previousElementSibling)) {\r\n            const charCounterSpan = currentElement.querySelector(target);\r\n            if (charCounterSpan) {\r\n              return charCounterSpan;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n     * If no attributes are provided, it returns an empty string.\r\n     * @param attributes - An object containing HTML attributes.\r\n     * @returns A string representing the attributes.\r\n     */\r\n    public static formatHTMLAttributes(attributes: any) {\r\n        let attrs = \"\";\r\n        if (attributes) {\r\n          for (const [key, value] of Object.entries(attributes)) {\r\n            if (key) {\r\n              attrs += `${key}='${value}'`;\r\n            }\r\n          }\r\n        }\r\n        return attrs.trim();\r\n    }\r\n      \r\n  \r\n}"],"names":["root","factory","exports","module","define","amd","self","inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","Error","replace","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","Utils","_classCallCheck","audioPath","classname","arguments","audio","classList","add","source","textHtml","targetName","children","concat","innerHTML","firstElementChild","element","collection","querySelectorAll","el","querySelector","nodeList","callback","node","index","NodeList","Array","isArray","from","RegExp","tag","backgroundColor","forbiddenTag","style","position","width","height","opacity","zIndex","assign","text","maxLength","trim","substring","attr","limit","priceType","decimal","processNodes","$$","input","addEventListener","regExp","getValue","parseFloat","toFixed","parseInt","_this","trigger","buttons","button","item","hasAttribute","closest","insertBefore","forbiddener","firstChild","HTMLButtonElement","console","_this2","then","SVG","encodedSvg","svgString","decodeURIComponent","split","asterisk","textToHTMLElement","labels","color","label","clonedAsterisk","cloneNode","object","getKey","includes","keyOrShorKey","string","returnBool","indexOf","toString","property","styles","getComputedStyle","propertiesObject","props","getPropertyValue","str","div","createTextNode","referent","currentElement","previousElementSibling","charCounterSpan","attributes","attrs","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray"],"sourceRoot":""}
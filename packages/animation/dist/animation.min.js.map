{"version":3,"file":"animation.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,YAAa,GAAIH,GACE,iBAAZC,QACdA,QAAmB,UAAID,IAEvBD,EAAgB,UAAIC,GACrB,CATD,CASGK,MAAM,I,4HC+BT,sBAA2BC,GACvB,MAAMC,EAAWD,EAAQE,QACzB,MAAO,CACLA,QAASD,aAAoBE,YAAcF,EAAWA,aAAQ,EAARA,EAAUC,QAChEE,eAAgBH,aAAoBE,aAA0BF,aAAZI,EAAYJ,EAAUG,eAE5E,EAEF,0BAA+BF,EAAsBE,EAAyCE,EAA6EC,EAAsBP,IAxCjM,SACIE,EACAK,EACAD,G,QAEA,QAAkBD,IAAdC,EAAyB,CAC3B,MAAME,EAA0B,QAAd,EAAAF,EAAUG,YAAI,QAAI,OAC9BC,EAAkC,QAAlB,EAAAJ,EAAUK,gBAAQ,QAAI,OACtC,mBAAEC,GAAuBN,EAE3BC,GACFL,EAAQW,UAAUC,OAAO,GAAGN,SAAiBE,KAC7CR,EAAQW,UAAUE,IAAI,GAAGP,QAAgBE,KAErCE,IAA6C,IAAvBA,GACxBI,YAAW,KACTd,EAAQW,UAAUC,OAAO,GAAGN,QAAgBE,IAAgB,GAC3D,OAGLR,EAAQW,UAAUC,OAAO,GAAGN,QAAgBE,KAC5CR,EAAQW,UAAUE,IAAI,GAAGP,SAAiBE,KAEtCE,IAA6C,IAAvBA,GACxBI,YAAW,KACTd,EAAQW,UAAUC,OAAO,GAAGN,SAAiBE,IAAgB,GAC5D,KAGT,CACF,CAWEO,CAAgBb,QAAAA,EAAkBF,EAASK,EAAaD,GAChC,OAApBN,EAAQkB,QACVF,YAAW,K,MACTd,EAAQiB,MAAMD,QAAyB,QAAf,EAAAlB,EAAQkB,eAAO,QAAI,MAAM,GAChDlB,EAAQoB,OAAS,GAEpBJ,YAAW,KACTd,EAAQY,QAAQ,GACfd,EAAQoB,OAAS,EAExB,C,GC1DEC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlB,IAAjBmB,EACH,OAAOA,EAAa7B,QAGrB,IAAIC,EAASyB,EAAyBE,GAAY,CAGjD5B,QAAS,CAAC,GAOX,OAHA8B,EAAoBF,GAAU3B,EAAQA,EAAOD,QAAS2B,GAG/C1B,EAAOD,OACf,C,8ECtBA,eAMA,gBAKU,sBAAO+B,CAAgBC,GAC7BA,EAAED,iBACJ,CAMO,OAAAE,CAAQ5B,GACb,MAAM,QAAEE,EAAO,eAAEE,IAAmB,IAAAyB,YAAW7B,IAE/C,IAAA8B,gBAAe5B,EAASE,EAAgBJ,EAAQM,WAD5B,EACoDN,EAC1E,CAMO,QAAA+B,CAAS/B,GACd,MAAM,QAAEE,EAAO,eAAEE,IAAmB,IAAAyB,YAAW7B,IAE/C,IAAA8B,gBAAe5B,EAASE,EAAgBJ,EAAQM,WAD5B,EACoDN,EAC1E,CAMO,UAAAgC,CAAWhC,G,QAChB,IAAIiC,GAAc,EAClB,MAAMC,EAAc,KACbD,EAGHE,KAAKJ,SAAS/B,GAFdmC,KAAKP,QAAQ5B,GAIfiC,GAAeA,CAAW,EAGV,QAAlB,EAAAjC,EAAQoC,kBAAU,SAAEC,iBAAiB,QAASH,GAC3B,QAAnB,EAAAlC,EAAQsC,mBAAW,SAAED,iBAAiB,QAASH,EACjD,E","sources":["webpack://@easylibs/animation/webpack/universalModuleDefinition","webpack://@easylibs/animation/./src/scripts/helpers.ts","webpack://@easylibs/animation/webpack/bootstrap","webpack://@easylibs/animation/./src/animation.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"animation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"animation\"] = factory();\n\telse\n\t\troot[\"animation\"] = factory();\n})(self, () => {\nreturn ","import { AnimeOptions } from \"./types\";\r\n\r\n/**\r\n   * Effectue une animation de commutation sur un élément HTML spécifié.\r\n   * @param element - L'élément HTML sur lequel l'animation doit être appliquée.\r\n   * @param fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa.\r\n   * @param animation - Les informations sur le type et la position de l'animation (facultatif).\r\n   */\r\nfunction switchAnimation(\r\n    element: HTMLElement,\r\n    fromInToOut: boolean,\r\n    animation?: { type: string; position: string; clearAfterApplying?: boolean }\r\n  ): void {\r\n    if (animation !== undefined) {\r\n      const animeType = animation.type ?? \"fade\";\r\n      const animePosition = animation.position ?? \"top\";\r\n      const { clearAfterApplying } = animation;\r\n\r\n      if (fromInToOut) {\r\n        element.classList.remove(`${animeType}-out-${animePosition}`);\r\n        element.classList.add(`${animeType}-in-${animePosition}`);\r\n\r\n        if (clearAfterApplying && clearAfterApplying === true) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-in-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        element.classList.remove(`${animeType}-in-${animePosition}`);\r\n        element.classList.add(`${animeType}-out-${animePosition}`);\r\n\r\n        if (clearAfterApplying && clearAfterApplying === true) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-out-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\nexport function getElement(options: AnimeOptions): { element: HTMLElement; animateElement?: HTMLElement } {\r\n    const _element = options.element;\r\n    return {\r\n      element: _element instanceof HTMLElement ? _element : _element?.element,\r\n      animateElement: _element instanceof HTMLElement ? undefined : _element?.animateElement,\r\n    };\r\n  }\r\n  \r\nexport function applyAnimation(element: HTMLElement, animateElement: HTMLElement | undefined, animation: { type: string; position: string; clearAfterApplying?: boolean }, fromInToOut: boolean, options: AnimeOptions): void {\r\n    switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n    if (options.display !== null) {\r\n      setTimeout(() => {\r\n        element.style.display = options.display ?? \"none\";\r\n      }, options.delay || 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        element.remove();\r\n      }, options.delay || 0);\r\n    }\r\n  }\r\n  ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { applyAnimation, getElement } from \"./scripts/helpers\";\r\nimport { AnimeOptions } from \"./scripts/types\";\r\n\r\n/**\r\n * Provides animation functionalities for HTML elements.\r\n */\r\nexport default class Animation {\r\n  /**\r\n   * Stops the propagation of the given event.\r\n   * @param e The event to stop propagation for.\r\n   */\r\n  private static stopPropagation(e: Event): void {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Performs an entrance animation on the specified HTML element.\r\n   * @param options Configuration options for the animation.\r\n   */\r\n  public animeIn(options: AnimeOptions): void {\r\n    const { element, animateElement } = getElement(options);\r\n    const fromInToOut = true;\r\n    applyAnimation(element, animateElement, options.animation, fromInToOut, options);\r\n  }\r\n\r\n  /**\r\n   * Performs an exit animation on the specified HTML element, then hides or removes it.\r\n   * @param options Configuration options for the animation.\r\n   */\r\n  public animeOut(options: AnimeOptions): void {\r\n    const { element, animateElement } = getElement(options);\r\n    const fromInToOut = false;\r\n    applyAnimation(element, animateElement, options.animation, fromInToOut, options);\r\n  }\r\n\r\n  /**\r\n   * Performs either an entrance or exit animation on the specified HTML element in response to open and close button events.\r\n   * @param options Configuration options for the animation, including elements and buttons involved.\r\n   */\r\n  public animeInOut(options: AnimeOptions): void {\r\n    let modalIsOpen = false;\r\n    const toggleModal = () => {\r\n      if (!modalIsOpen) {\r\n        this.animeIn(options);\r\n      } else {\r\n        this.animeOut(options);\r\n      }\r\n      modalIsOpen = !modalIsOpen;\r\n    };\r\n\r\n    options.openButton?.addEventListener(\"click\", toggleModal);\r\n    options.closeButton?.addEventListener(\"click\", toggleModal);\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","options","_element","element","HTMLElement","animateElement","undefined","animation","fromInToOut","animeType","type","animePosition","position","clearAfterApplying","classList","remove","add","setTimeout","switchAnimation","display","style","delay","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","stopPropagation","e","animeIn","getElement","applyAnimation","animeOut","animeInOut","modalIsOpen","toggleModal","this","openButton","addEventListener","closeButton"],"sourceRoot":""}
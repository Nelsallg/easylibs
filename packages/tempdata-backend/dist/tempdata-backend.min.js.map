{"version":3,"file":"tempdata-backend.min.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,mBAAoB,GAAIH,GACL,iBAAZC,QACdA,QAAQ,oBAAsBD,IAE9BD,EAAK,oBAAsBC,GAC5B,CATD,CASGK,MAAM,mfCTT,kBACA,QAUA,gBAME,WAAAC,CAAoBC,EAA4BC,GAA5B,KAAAD,SAAAA,EAA4B,KAAAC,IAAAA,CAAc,CAOjD,OAAAC,CAAQC,4CAEnB,MAAMC,QAAiBC,KAAKL,SAASM,OAC/BC,EAAuC,GAC7C,GAAIH,aAAoBI,OAASJ,EAASK,OAAS,EACjD,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAASK,OAAQC,IACnC,CAAEC,IACAJ,EAASK,KACP,IAAIC,SAAQ,CAAOC,EAASC,IAAW,EAAD,gCACpC,IACE,MAAMC,QAAaX,KAAKL,SAASiB,QAC/BN,OACAO,EACA,UAECF,WACMA,EAAmB,oBACnBA,EAAS,IAElBF,EAAQE,EACV,CAAE,MAAOG,GACPJ,EAAO,oCAAsCI,EAC/C,CACF,MAEH,EAnBD,CAmBGT,GAGP,MAAMU,EAAWf,KAAKgB,0BAA0BR,QAAQS,IAAIf,IAC5D,IAAI,UAAa,CACfN,IAAKI,KAAKJ,IACVe,KAAMI,EACNG,QAAS,CACPC,OAAQ,OACRC,iBAAiB,OACjBC,mBAAoB,aAEtBvB,UAAUA,GAEd,IAQO,IAAAwB,CAAKC,EAAuBzB,EAAuB0B,SACxD,MAAMC,EACyC,QAA5C,EAAAF,EAASG,QAAQ,eAA2B,QAC5CC,SAASC,cAAc,QAC1BL,EAASM,iBAAiB,SAAgBC,GAAM,EAAD,gCAC7CA,EAAEC,iBACF,MAAMC,QAAgBhC,KAAKL,SAASsC,YACpC,IAAI,IAASD,IAAYP,EAAKS,gBAC5B,OAAOT,EAAKU,iBAEd,MAAMC,EAAgBpC,KAAKqC,OAAOd,EAASe,WAC3C,IAAI,IAASN,GAAWP,EAAKS,gBAA7B,CACE,MAAMnB,EAAW,IAAIwB,SAASd,GAC9B,IAAI,UAAa,CACf7B,IAAKI,KAAKJ,IACVe,KAAMI,EACNG,QAAS,CACPC,OAAQ,OACRC,iBAAiB,OACjBC,mBAAoB,aAEtBvB,UAAU,CACR,UAAA0C,CAAW7B,GACLa,IACCA,aAAkBiB,SACrBjB,IACKD,EAASe,UAAYd,GAE5B1B,EAAU0C,WAAW7B,EACvB,EACA+B,YAAa,CAACC,EAAUC,IAAS9C,EAAU4C,YAAYC,EAAUC,GACjEC,QAAQ,CAAC/B,EAAO8B,IAAW9C,EAAU+C,QAAQ/B,EAAO8B,GACpD,SAAAE,CAAUH,GACRpB,EAASe,UAAYF,EACrBtC,EAAUgD,UAAUH,EACtB,IAIN,MAEAlB,EAAKsB,aAAa,aAAc,UAC1B/C,KAAKH,QAAQC,EACrB,KACF,CAOU,mBAAAkB,CAAoBgC,GAC5B,MAAMC,EAAc,IAAI,EAAAC,YAAYC,gBAEpC,OAAOH,EAAMI,QAAO,CAACC,EAAkB1C,KACb2C,OAAOC,KAAK5C,GAAMyC,QAAO,CAACrC,EAAUyC,KAC1D,MAAMC,EAAQ9C,EAAK6C,GAQnB,OAPIrD,MAAMuD,QAAQD,IAAUA,EAAMrD,OAAS,EACzCqD,EAAME,SAASC,IACb7C,EAAS8C,OAAOL,EAAKP,EAAYa,SAASF,GAAOA,EAAKG,KAAK,IAG7DhD,EAASiD,IAAIR,EAAK7C,EAAK6C,IAElBzC,CAAQ,GACd,IAAIwB,UACSoB,SAAQ,CAACM,EAAOT,KAC9BH,EAAOQ,OAAOL,EAAKS,EAAM,IAGpBZ,IACN,IAAId,SACT,CACQ,MAAAF,CAAO6B,GACb,IAAKA,EACH,MAAO,GAET,MAAMC,EAAMxC,SAASyC,cAAc,OAEnC,OADAD,EAAIE,YAAY1C,SAAS2C,eAAeJ,IACjCC,EAAI7B,SACb,m8QChGF,IAIqBiC,EAAY,WAe7B,SAHA,SAAAA,EAAoBrD,GAAyB,IAAAsD,EAAA,kGAAAC,CAAA,KAAAF,GAAzB,KAAArD,QAAAA,EANZ,KAAAwD,MAAgB,EAoBhB,KAAAC,WAAUC,EAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,GAETV,EAAKtD,QAAQpB,YAAa0E,EAAKtD,QAAQpB,UAAU0C,WAAU,CAAAyC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAAUX,EAAKY,WAAU,cAAAH,EAAAE,KAAA,EAClFX,EAAKa,MAAK,WACZb,EAAKtD,QAAQpB,YAAa0E,EAAKtD,QAAQpB,UAAU4C,YAAW,CAAAuC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAAUX,EAAKc,UAAUd,EAAK7B,SAAU6B,EAAK5B,QAAO,WAChH4B,EAAKtD,QAAQpB,YAAa0E,EAAKtD,QAAQpB,UAAUgD,UAAS,CAAAmC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAASX,EAAK1B,UAAU0B,EAAK5B,QAAO,QAAAqC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAElGT,EAAKgB,YAAWP,EAAAM,GAAQf,EAAK5B,OAAQ,4BAA4B,yBAAAqC,EAAAQ,OAAA,GAAAV,EAAA,mBAOjE,KAAAM,IAAGT,EAAAC,IAAAC,MAAG,SAAAY,IAAA,IAAA/C,EAAAgD,EAAA/F,EAAAe,EAAAiF,EAAAC,EAAA1E,EAAA2E,EAAA,OAAAjB,IAAAG,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAGoB,GAF1BxC,EAA4B,KAAIoD,EAAAb,KAAA,EAAAS,EAEDnB,EAAKtD,QAA5BtB,EAAG+F,EAAH/F,IAAKe,EAAIgF,EAAJhF,KAAMO,EAAOyE,EAAPzE,QACdtB,EAAG,CAAAmG,EAAAZ,KAAA,cAAQ,IAAIa,MAAM,mBAAkB,OAqB3C,OApBDxB,EAAK5E,IAAMA,EACX4E,EAAK7D,KAAOA,EACRkF,EAAWjG,EAEA,SADTuB,GAASD,aAAO,EAAPA,EAASC,SAAU,QACVR,EACpBkF,EAAWrB,EAAKyB,mBAAmBrG,EAAKe,IAChC,CAAC,MAAM,OAAO,WAAWuF,SAAS/E,IAAWR,IACrD6D,EAAK2B,KAAO3B,EAAK4B,mBAAmBzF,IAElCmF,EAA4B,CAC9B3E,OAAQA,EACRkF,QAASnF,aAAO,EAAPA,EAASmF,QAClBF,KAAM3B,EAAK2B,KACXG,YAAapF,aAAO,EAAPA,EAASoF,YACtBC,KAAMrF,aAAO,EAAPA,EAASqF,KACfC,MAAOtF,aAAO,EAAPA,EAASsF,MAChBC,UAAWvF,aAAO,EAAPA,EAASuF,WAEpB,CAAC,MAAM,OAAO,WAAWP,SAAS/E,WAC3B2E,EAAaK,KACvBJ,EAAAZ,KAAA,GACKX,EAAKkC,aAAab,EAASC,GAAa,QAAAC,EAAAZ,KAAA,iBAAAY,EAAAb,KAAA,GAAAa,EAAAR,GAAAQ,EAAA,SAE9CvB,EAAKgB,YAAWO,EAAAR,GAAQ5C,EAAWA,EAASC,OAAS,GAAG,yBAAAmD,EAAAN,OAAA,GAAAC,EAAA,mBA4CxD,KAAAN,SAAQR,EAAAC,IAAAC,MAAG,SAAA6B,IAAA,IAAAhG,EAAA,OAAAkE,IAAAG,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACkC,mBAAtCX,EAAKtD,QAAQpB,UAAU0C,WAAyB,CAAAoE,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EACtCX,EAAKtD,QAAQpB,UAAU0C,WAAWgC,EAAKtD,QAAQP,MAAK,QAAjEA,EAAIiG,EAAAC,QAEJrC,EAAKtD,QAAQP,KAAOA,EAAKmG,eAAe,QAAUnG,EAAKA,KAAOA,GACjE,wBAAAiG,EAAAnB,OAAA,GAAAkB,EAAA,KAQD,KAAArB,UAAS,eAAAyB,EAAAnC,EAAAC,IAAAC,MAAG,SAAAkC,EAAOrE,EAAqCC,GAAc,OAAAiC,IAAAG,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OAGzE,OAFGX,EAAKtD,QAAQgG,qBAAqBC,mBAClC3C,EAAKtD,QAAQgG,UAAUE,gBAAgB,YAC1CH,EAAAI,OAAA,SACM7C,EAAKtD,QAAQpB,UAAU4C,YAAc8B,EAAKtD,QAAQpB,UAAU4C,YAAYC,EAAUC,QAAU/B,GAAS,wBAAAoG,EAAAxB,OAAA,GAAAuB,EAAA,KAC/G,gBAAAM,EAAAC,GAAA,OAAAR,EAAAS,MAAA,KAAAC,UAAA,EALgB,GAMT,KAAA3E,UAAS,eAAA4E,EAAA9C,EAAAC,IAAAC,MAAG,SAAA6C,EAAO/E,GAAc,IAAAgF,EAAA,OAAA/C,IAAAG,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OACX,QAAtByC,EAAApD,EAAKtD,QAAQpB,iBAAS,IAAA8H,GAAtBA,EAAwB9E,WAAwB,MAAXF,GACrC4B,EAAKtD,QAAQpB,UAAUgD,UAAU0B,EAAK7B,UACzC,wBAAAkF,EAAApC,OAAA,GAAAkC,EAAA,KACJ,gBAAAG,GAAA,OAAAJ,EAAAF,MAAA,KAAAC,UAAA,EAJgB,GAtHb,KAAKM,sBACT,IACA,EAAAvE,IAAA,uBAAAS,MAIQ,WACJ,KAAK/C,QAAQgG,UAAY,KAAKhG,QAAQgG,UAAUrF,iBAAiB,QAAS,KAAK8C,YAAc,KAAKA,YACtG,GAAC,CAAAnB,IAAA,eAAAS,OAAA+D,EAAApD,EAAAC,IAAAC,MAkDO,SAAAmD,EAAmBrI,EAAYkG,GAAwB,IAAA5E,EAAAgH,EAAAC,EAAAxF,EAAAyF,EAAA,YAAAvD,IAAAG,MAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,WAExD,KAAKjE,QAAO,CAAAmH,EAAAlD,KAAA,SACyB,KAA9BjE,EAAU,KAAKA,QAAQA,WACfA,EAAQgH,QAAO,CAAAG,EAAAlD,KAAA,QACM,OAAzB+C,EAAUhH,EAAQgH,QAAOG,EAAAlD,KAAA,EACRmD,MAAM1I,EAAKkG,GAAa,OAGnC,OAHNnD,EAAQ0F,EAAAxB,KACd0B,WAAU3D,EAAAC,IAAAC,MAAC,SAAA0D,IAAA,OAAA3D,IAAAG,MAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACDiD,EAAKM,aAAa/F,EAASzB,GAAQ,wBAAAuH,EAAAhD,OAAA,GAAA+C,EAAA,KAC1CN,GAASG,EAAAhB,OAAA,wBAAAgB,EAAAlD,KAAA,GAGOmD,MAAM1I,EAAKkG,GAAa,QAAjC,OAARnD,EAAQ0F,EAAAxB,KAAAwB,EAAAlD,KAAA,GACR,KAAKuD,aAAa/F,EAASzB,GAAQ,yBAAAmH,EAAA5C,OAAA,GAAAwC,EAAA,UAEhD,SAAAU,EAAAC,GAAA,OAAAZ,EAAAR,MAAA,KAAAC,UAAA,KAAAjE,IAAA,eAAAS,OAAA4E,EAAAjE,EAAAC,IAAAC,MACO,SAAAgE,EAAmBnG,EAAkBzB,GAA2B,IAAA6H,EAAAC,EAAA5H,EAAA,OAAAyD,IAAAG,MAAA,SAAAiE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,OAExC,GAD5B,KAAKvC,OAASD,EAASC,OACjBoG,EAAiB,CAAC,MACpB9H,EAAO,CAAA+H,EAAA9D,KAAA,SAC0C,KAA3C/D,EAAmBF,EAAQE,kBACb,CAAA6H,EAAA9D,KAAA,YACX,KAAKvC,UAAUoG,EAAc,CAAAC,EAAA9D,KAAA,YAAA8D,EAAA/D,KAAA,EAEW,SAArB9D,EAA2B,CAAA6H,EAAA9D,KAAA,gBAAA8D,EAAA9D,KAAA,GAASxC,EAASuG,OAAM,QAAAD,EAAA1D,GAAA0D,EAAApC,KAAAoC,EAAA9D,KAAA,wBAAA8D,EAAA9D,KAAA,GAASxC,EAASwG,OAAM,QAAAF,EAAA1D,GAAA0D,EAAApC,KAAA,QAA3F,KAAKlE,SAAQsG,EAAA1D,GAAA0D,EAAA9D,KAAA,wBAAA8D,EAAA/D,KAAA,GAAA+D,EAAAG,GAAAH,EAAA,SAAAA,EAAA/D,KAAA,GAAA+D,EAAA9D,KAAA,GAGaxC,EAASwG,OAAM,QAArC,KAAKxG,SAAQsG,EAAApC,KAAAoC,EAAA9D,KAAA,wBAAA8D,EAAA/D,KAAA,GAAA+D,EAAAI,GAAAJ,EAAA,UAAAA,EAAA9D,KAAA,GAESxC,EAASuG,OAAM,QAArC,KAAKvG,SAAQsG,EAAApC,KAAA,QAKR,QAAtBkC,EAAA,KAAK7H,QAAQpB,iBAAS,IAAAiJ,IAAtBA,EAAwBlG,SAAa,KAAKD,UAAUoG,GAAoBrG,EAAS2G,IAChF,KAAKpI,QAAQpB,UAAU+C,QAAQ,IAAImD,MAA+B,iBAAlB,KAAKrD,SAAwB,KAAKA,SAAY,KAAKA,SAAS4G,QAAU,KAAK5G,SAAS4G,QAAU,uBAAyB5G,EAASC,QACnL,yBAAAqG,EAAAxD,OAAA,GAAAqD,EAAA,2BACJ,SAAAU,EAAAC,GAAA,OAAAZ,EAAArB,MAAA,KAAAC,UAAA,IA4BD,CAAAjE,IAAA,YAAAS,OAAAyF,EAAA9E,EAAAC,IAAAC,MAKO,SAAA6E,EAAgBhJ,GAAiC,OAAAkE,IAAAG,MAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,WAEjD,KAAKjE,QAAQ2I,UAAS,CAAAD,EAAAzE,KAAA,aAClB,KAAKT,MAAQ,KAAKxD,QAAQ2I,WAAS,CAAAD,EAAAzE,KAAA,QACwB,OAAvDxE,IAAK,KAAKO,QAAQP,KAAO2C,OAAOwG,OAAO,KAAKnJ,KAAKA,IAAMiJ,EAAAzE,KAAA,EACpD,KAAKE,MAAK,OAChB,KAAKX,QAAQ,wBAAAkF,EAAAnE,OAAA,GAAAkE,EAAA,UAGxB,SAAAI,GAAA,OAAAL,EAAAlC,MAAA,KAAAC,UAAA,IACD,CAAAjE,IAAA,qBAAAS,MAMQ,SAAmBrE,EAAae,GACpC,IAAMqJ,EAAM,IAAIC,IAAIrK,EAAKsK,OAAOC,SAASC,QACnCC,EAAS,IAAIC,gBACnB,GAAI3J,aAAgB4B,SAAU,KACagI,EADbC,koBAAAC,CACD9J,EAAK+J,WAAS,IAAvC,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAyC,KAAAC,EAAAC,EAAAR,EAAAtG,MAAA,GAA/BT,EAAGsH,EAAA,GAAE7G,EAAK6G,EAAA,GACK,iBAAV7G,GACPoG,EAAOxG,OAAOL,EAAKS,EAE3B,CAAC,OAAA+G,GAAAR,EAAA1I,EAAAkJ,EAAA,SAAAR,EAAAS,GAAA,CACL,MAAM,GAAoB,WAAhBC,EAAOvK,IAAsBR,MAAMuD,QAAQ/C,GAI/C,GAAIR,MAAMuD,QAAQ/C,GACpB,IAAK,IAAIN,EAAI,EAAGA,EAAIM,EAAKP,OAAQC,IAC7BgK,EAAOxG,OAAM,GAAAsH,OAAI9K,GAAC,GAAA8K,OAAOxK,EAAKN,UAGlCgK,EAAOxG,OAAO,OAAM,GAAAsH,OAAIxK,SARxB,QAAAyK,EAAA,EAAAC,EAAyB/H,OAAOoH,QAAQ/J,GAAKyK,EAAAC,EAAAjL,OAAAgL,IAAE,CAA1C,IAAAE,EAAAP,EAAAM,EAAAD,GAAA,GAAK5H,EAAG8H,EAAA,GAAErH,EAAKqH,EAAA,GAChBjB,EAAOxG,OAAOL,EAAKS,EACvB,CASJ,OADA+F,EAAIuB,OAASlB,EAAOmB,WACbxB,EAAIwB,UACf,GACA,CAAAhI,IAAA,qBAAAS,MAKQ,SAAmBtD,GAAc,IAAA8K,EAAAC,EACrC,MAAiD,eAAzB,QAApBD,EAAA,KAAKvK,QAAQA,eAAO,IAAAuK,OAAA,EAApBA,EAAsBpK,oBACnBV,aAAgB4B,SAAgB5B,EAChCR,MAAMuD,QAAQ/C,GACN,KAAKgL,uBAAuBhL,GACpB,iBAATA,GAAqC,iBAATA,GAAqC,kBAATA,EACvD,KAAKiL,6BAA6BjL,GACtC,KAAKkL,wBAAwBlL,GACgB,YAAzB,QAApB+K,EAAA,KAAKxK,QAAQA,eAAO,IAAAwK,OAAA,EAApBA,EAAsBrK,oBAC1BlB,MAAMuD,QAAQ/C,GACN,KAAKmL,qBAAqBnL,GAClB,iBAATA,GAAqC,iBAATA,GAAqC,kBAATA,EACvD,KAAKoL,2BAA2BpL,GACpCqL,KAAKC,UAAUtL,GAEnB,KAAKsL,UAAUtL,EAC1B,GAAC,CAAA6C,IAAA,YAAAS,MACO,SAAUtD,GACd,IAAK,IAAM6C,KAAO7C,EACV2C,OAAO4I,UAAUpF,eAAeqF,KAAKxL,EAAM6C,IACnB,WAArB0H,EAAOvK,EAAK6C,MACd7C,EAAK6C,GAAOwI,KAAKC,UAAUtL,EAAK6C,KAGzC,OAAO7C,CACX,GAAC,CAAA6C,IAAA,yBAAAS,MACO,SAAuBtD,GAE3B,IADA,IAAMI,EAAW,IAAIwB,SACZlC,EAAI,EAAGA,EAAIM,EAAKP,OAAQC,IAC1BF,MAAMuD,QAAQ/C,EAAKN,KAA0B,WAAnB6K,EAAOvK,EAAKN,IACrCU,EAASiD,IAAG,GAAAmH,OAAI9K,GAAI2L,KAAKC,UAAUtL,EAAKN,KACvCU,EAASiD,IAAG,GAAAmH,OAAI9K,GAAC,GAAA8K,OAAMxK,EAAKN,KAErC,OAAOU,CACX,GAAC,CAAAyC,IAAA,uBAAAS,MACO,SAAqBtD,GAEzB,IADA,IAAMyL,EAAS,GACN/L,EAAI,EAAGA,EAAIM,EAAKP,OAAQC,IAC7B+L,EAAO/L,GAAKM,EAAKN,GAErB,OAAO2L,KAAKC,UAAUG,EAC1B,GAAC,CAAA5I,IAAA,+BAAAS,MACO,SAA6BtD,GACjC,IAAMI,EAAW,IAAIwB,SAErB,OADAxB,EAASiD,IAAI,OAAM,GAAAmH,OAAIxK,IAChBI,CACX,GAAC,CAAAyC,IAAA,6BAAAS,MACO,SAA2BtD,GAC/B,OAAOqL,KAAKC,UAAU,CAACtL,KAAAA,GAC3B,GACA,CAAA6C,IAAA,0BAAAS,MAKQ,SAAwBtD,GAC5B,IAAMI,EAAW,IAAIwB,SAMrB,OALAe,OAAOoH,QAAQ/J,GAAMgD,SAAQ,SAAA0I,GAAiB,IAAAC,EAAAvB,EAAAsB,EAAA,GAAf7I,EAAG8I,EAAA,GAAErI,EAAKqI,EAAA,GAClCnM,MAAMuD,QAAQO,IAA2B,WAAjBiH,EAAOjH,GAC9BlD,EAAS8C,OAAOL,EAAIwI,KAAKC,UAAUhI,IAClClD,EAAS8C,OAAOL,EAAKS,EAC9B,IACOlD,CACX,GACA,CAAAyC,IAAA,WAAA+I,IAGA,WACI,OAAO,KAAK5J,SAAW,KAAKA,SAAW,IAC3C,GACA,CAAAa,IAAA,cAAAS,MAOQ,SAAYnD,EAAY8B,GAA0D,IAAA4J,EAAzCjD,EAAA9B,UAAArH,OAAA,QAAAS,IAAA4G,UAAA,GAAAA,UAAA,GAAkB,wBAC/DgF,QAAQ3L,MAAMyI,EAASzI,GACG,QAA1B0L,EAAI,KAAKtL,QAAQpB,iBAAS,IAAA0M,GAAtBA,EAAwB3J,SACxB,KAAK3B,QAAQpB,UAAU+C,QAAQ/B,EAAO8B,GAAU,EAExD,iGAnIA8G,EAlDCb,EAjEAb,CAsPA,CA3Q4B,GAAjC3I,EAAAA,QAAAkF,0BC3DAnF,4BACAyF,EAAA,kBAAA/C,CAAA,MAAA4K,EAAA5K,EAAA,GAAA6K,EAAArJ,OAAA4I,UAAAtB,EAAA+B,EAAA7F,eAAA8F,EAAAtJ,OAAAuJ,gBAAA,SAAAH,EAAA5K,EAAA6K,GAAAD,EAAA5K,GAAA6K,EAAA1I,KAAA,EAAA5D,EAAA,mBAAAyM,OAAAA,OAAA,GAAAC,EAAA1M,EAAA2M,UAAA,aAAAC,EAAA5M,EAAA6M,eAAA,kBAAAC,EAAA9M,EAAA+M,aAAA,yBAAA7N,EAAAmN,EAAA5K,EAAA6K,GAAA,OAAArJ,OAAAuJ,eAAAH,EAAA5K,EAAA,CAAAmC,MAAA0I,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAA5K,EAAA,KAAAvC,EAAA,aAAAmN,GAAAnN,EAAA,SAAAmN,EAAA5K,EAAA6K,GAAA,OAAAD,EAAA5K,GAAA6K,CAAA,WAAA3H,EAAA0H,EAAA5K,EAAA6K,EAAA/B,GAAA,IAAAvK,EAAAyB,GAAAA,EAAAoK,qBAAAsB,EAAA1L,EAAA0L,EAAAT,EAAAzJ,OAAAmK,OAAApN,EAAA6L,WAAAe,EAAA,IAAAS,EAAA9C,GAAA,WAAAgC,EAAAG,EAAA,WAAA9I,MAAA0J,EAAAjB,EAAAC,EAAAM,KAAAF,CAAA,UAAAa,EAAAlB,EAAA5K,EAAA6K,GAAA,WAAAkB,KAAA,SAAAC,IAAApB,EAAAP,KAAArK,EAAA6K,GAAA,OAAAD,GAAA,OAAAmB,KAAA,QAAAC,IAAApB,EAAA,EAAA5K,EAAAkD,KAAAA,EAAA,IAAA+I,EAAA,iBAAAC,EAAA,iBAAA/C,EAAA,YAAAN,EAAA,YAAAsD,EAAA,YAAAT,IAAA,UAAAU,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA7O,EAAA6O,EAAArB,GAAA,8BAAAsB,EAAA/K,OAAAgL,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5B,GAAA/B,EAAAuB,KAAAoC,EAAAxB,KAAAqB,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAsB,EAAAtB,UAAA5I,OAAAmK,OAAAW,GAAA,SAAAM,EAAAhC,GAAA,0BAAA/I,SAAA,SAAA7B,GAAAvC,EAAAmN,EAAA5K,GAAA,SAAA4K,GAAA,YAAAiC,QAAA7M,EAAA4K,EAAA,gBAAAkC,EAAAlC,EAAA5K,GAAA,SAAA+M,EAAAlC,EAAAC,EAAAvM,EAAA0M,GAAA,IAAAE,EAAAW,EAAAlB,EAAAC,GAAAD,EAAAE,GAAA,aAAAK,EAAAY,KAAA,KAAAV,EAAAF,EAAAa,IAAAC,EAAAZ,EAAAlJ,MAAA,OAAA8J,GAAA,UAAA7C,EAAA6C,IAAAnD,EAAAuB,KAAA4B,EAAA,WAAAjM,EAAArB,QAAAsN,EAAAe,SAAAC,MAAA,SAAArC,GAAAmC,EAAA,OAAAnC,EAAArM,EAAA0M,EAAA,aAAAL,GAAAmC,EAAA,QAAAnC,EAAArM,EAAA0M,EAAA,IAAAjL,EAAArB,QAAAsN,GAAAgB,MAAA,SAAArC,GAAAS,EAAAlJ,MAAAyI,EAAArM,EAAA8M,EAAA,aAAAT,GAAA,OAAAmC,EAAA,QAAAnC,EAAArM,EAAA0M,EAAA,IAAAA,EAAAE,EAAAa,IAAA,KAAAnB,EAAAC,EAAA,gBAAA3I,MAAA,SAAAyI,EAAA9B,GAAA,SAAAoE,IAAA,WAAAlN,GAAA,SAAAA,EAAA6K,GAAAkC,EAAAnC,EAAA9B,EAAA9I,EAAA6K,EAAA,WAAAA,EAAAA,EAAAA,EAAAoC,KAAAC,EAAAA,GAAAA,GAAA,aAAArB,EAAA7L,EAAA6K,EAAA/B,GAAA,IAAAgC,EAAAmB,EAAA,gBAAA1N,EAAA0M,GAAA,GAAAH,IAAA3B,EAAA,MAAAjF,MAAA,mCAAA4G,IAAAjC,EAAA,cAAAtK,EAAA,MAAA0M,EAAA,OAAA9I,MAAAyI,EAAA7B,MAAA,OAAAD,EAAAzJ,OAAAd,EAAAuK,EAAAkD,IAAAf,IAAA,KAAAE,EAAArC,EAAAqE,SAAA,GAAAhC,EAAA,KAAAE,EAAA+B,EAAAjC,EAAArC,GAAA,GAAAuC,EAAA,IAAAA,IAAAc,EAAA,gBAAAd,CAAA,cAAAvC,EAAAzJ,OAAAyJ,EAAA/D,KAAA+D,EAAAuE,MAAAvE,EAAAkD,SAAA,aAAAlD,EAAAzJ,OAAA,IAAAyL,IAAAmB,EAAA,MAAAnB,EAAAjC,EAAAC,EAAAkD,IAAAlD,EAAAwE,kBAAAxE,EAAAkD,IAAA,gBAAAlD,EAAAzJ,QAAAyJ,EAAAvD,OAAA,SAAAuD,EAAAkD,KAAAlB,EAAA3B,EAAA,IAAAmD,EAAAR,EAAA9L,EAAA6K,EAAA/B,GAAA,cAAAwD,EAAAP,KAAA,IAAAjB,EAAAhC,EAAAC,KAAAF,EAAAqD,EAAAI,EAAAN,MAAAG,EAAA,gBAAAhK,MAAAmK,EAAAN,IAAAjD,KAAAD,EAAAC,KAAA,WAAAuD,EAAAP,OAAAjB,EAAAjC,EAAAC,EAAAzJ,OAAA,QAAAyJ,EAAAkD,IAAAM,EAAAN,IAAA,YAAAoB,EAAApN,EAAA6K,GAAA,IAAA/B,EAAA+B,EAAAxL,OAAAyL,EAAA9K,EAAAkL,SAAApC,GAAA,GAAAgC,IAAAF,EAAA,OAAAC,EAAAsC,SAAA,eAAArE,GAAA9I,EAAAkL,SAAA,SAAAL,EAAAxL,OAAA,SAAAwL,EAAAmB,IAAApB,EAAAwC,EAAApN,EAAA6K,GAAA,UAAAA,EAAAxL,SAAA,WAAAyJ,IAAA+B,EAAAxL,OAAA,QAAAwL,EAAAmB,IAAA,IAAAuB,UAAA,oCAAAzE,EAAA,aAAAqD,EAAA,IAAA5N,EAAAuN,EAAAhB,EAAA9K,EAAAkL,SAAAL,EAAAmB,KAAA,aAAAzN,EAAAwN,KAAA,OAAAlB,EAAAxL,OAAA,QAAAwL,EAAAmB,IAAAzN,EAAAyN,IAAAnB,EAAAsC,SAAA,KAAAhB,EAAA,IAAAlB,EAAA1M,EAAAyN,IAAA,OAAAf,EAAAA,EAAAlC,MAAA8B,EAAA7K,EAAAwN,YAAAvC,EAAA9I,MAAA0I,EAAAxH,KAAArD,EAAAyN,QAAA,WAAA5C,EAAAxL,SAAAwL,EAAAxL,OAAA,OAAAwL,EAAAmB,IAAApB,GAAAC,EAAAsC,SAAA,KAAAhB,GAAAlB,GAAAJ,EAAAxL,OAAA,QAAAwL,EAAAmB,IAAA,IAAAuB,UAAA,oCAAA1C,EAAAsC,SAAA,KAAAhB,EAAA,UAAAuB,EAAA9C,GAAA,IAAA5K,EAAA,CAAA2N,OAAA/C,EAAA,SAAAA,IAAA5K,EAAA4N,SAAAhD,EAAA,SAAAA,IAAA5K,EAAA6N,WAAAjD,EAAA,GAAA5K,EAAA8N,SAAAlD,EAAA,SAAAmD,WAAAtP,KAAAuB,EAAA,UAAAgO,EAAApD,GAAA,IAAA5K,EAAA4K,EAAAqD,YAAA,GAAAjO,EAAA+L,KAAA,gBAAA/L,EAAAgM,IAAApB,EAAAqD,WAAAjO,CAAA,UAAA4L,EAAAhB,GAAA,KAAAmD,WAAA,EAAAJ,OAAA,SAAA/C,EAAA/I,QAAA6L,EAAA,WAAAQ,OAAA,YAAAxB,EAAA1M,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA6K,EAAA7K,EAAAiL,GAAA,GAAAJ,EAAA,OAAAA,EAAAR,KAAArK,GAAA,sBAAAA,EAAAqD,KAAA,OAAArD,EAAA,IAAAmO,MAAAnO,EAAA1B,QAAA,KAAAwM,GAAA,EAAAvM,EAAA,SAAA8E,IAAA,OAAAyH,EAAA9K,EAAA1B,QAAA,GAAAwK,EAAAuB,KAAArK,EAAA8K,GAAA,OAAAzH,EAAAlB,MAAAnC,EAAA8K,GAAAzH,EAAA0F,MAAA,EAAA1F,EAAA,OAAAA,EAAAlB,MAAAyI,EAAAvH,EAAA0F,MAAA,EAAA1F,CAAA,SAAA9E,EAAA8E,KAAA9E,CAAA,YAAAgP,UAAAnE,EAAApJ,GAAA,2BAAAoM,EAAAhC,UAAAiC,EAAAvB,EAAA6B,EAAA,eAAAxK,MAAAkK,EAAAb,cAAA,IAAAV,EAAAuB,EAAA,eAAAlK,MAAAiK,EAAAZ,cAAA,IAAAY,EAAAgC,YAAA3Q,EAAA4O,EAAAhB,EAAA,qBAAArL,EAAAqO,oBAAA,SAAAzD,GAAA,IAAA5K,EAAA,mBAAA4K,GAAAA,EAAAhN,YAAA,QAAAoC,IAAAA,IAAAoM,GAAA,uBAAApM,EAAAoO,aAAApO,EAAAiC,MAAA,EAAAjC,EAAAgD,KAAA,SAAA4H,GAAA,OAAApJ,OAAA8M,eAAA9M,OAAA8M,eAAA1D,EAAAyB,IAAAzB,EAAA2D,UAAAlC,EAAA5O,EAAAmN,EAAAS,EAAA,sBAAAT,EAAAR,UAAA5I,OAAAmK,OAAAgB,GAAA/B,CAAA,EAAA5K,EAAAwO,MAAA,SAAA5D,GAAA,OAAAoC,QAAApC,EAAA,EAAAgC,EAAAE,EAAA1C,WAAA3M,EAAAqP,EAAA1C,UAAAe,GAAA,0BAAAnL,EAAA8M,cAAAA,EAAA9M,EAAAyO,MAAA,SAAA7D,EAAAC,EAAA/B,EAAAgC,EAAAvM,QAAA,IAAAA,IAAAA,EAAAG,SAAA,IAAAuM,EAAA,IAAA6B,EAAA5J,EAAA0H,EAAAC,EAAA/B,EAAAgC,GAAAvM,GAAA,OAAAyB,EAAAqO,oBAAAxD,GAAAI,EAAAA,EAAA5H,OAAA4J,MAAA,SAAArC,GAAA,OAAAA,EAAA7B,KAAA6B,EAAAzI,MAAA8I,EAAA5H,MAAA,KAAAuJ,EAAAD,GAAAlP,EAAAkP,EAAAtB,EAAA,aAAA5N,EAAAkP,EAAA1B,GAAA,0BAAAxN,EAAAkP,EAAA,qDAAA3M,EAAAyB,KAAA,SAAAmJ,GAAA,IAAA5K,EAAAwB,OAAAoJ,GAAAC,EAAA,WAAA/B,KAAA9I,EAAA6K,EAAApM,KAAAqK,GAAA,OAAA+B,EAAA6D,UAAA,SAAArL,IAAA,KAAAwH,EAAAvM,QAAA,KAAAsM,EAAAC,EAAA8D,MAAA,GAAA/D,KAAA5K,EAAA,OAAAqD,EAAAlB,MAAAyI,EAAAvH,EAAA0F,MAAA,EAAA1F,CAAA,QAAAA,EAAA0F,MAAA,EAAA1F,CAAA,GAAArD,EAAA0M,OAAAA,EAAAd,EAAAxB,UAAA,CAAAxM,YAAAgO,EAAAsC,MAAA,SAAAlO,GAAA,QAAAoD,KAAA,OAAAC,KAAA,OAAA0B,KAAA,KAAAsI,MAAAzC,EAAA,KAAA7B,MAAA,OAAAoE,SAAA,UAAA9N,OAAA,YAAA2M,IAAApB,EAAA,KAAAmD,WAAAlM,QAAAmM,IAAAhO,EAAA,QAAA6K,KAAA,WAAAA,EAAA+D,OAAA,IAAA9F,EAAAuB,KAAA,KAAAQ,KAAAsD,OAAAtD,EAAAgE,MAAA,WAAAhE,GAAAD,EAAA,EAAAjH,KAAA,gBAAAoF,MAAA,MAAA6B,EAAA,KAAAmD,WAAA,GAAAE,WAAA,aAAArD,EAAAmB,KAAA,MAAAnB,EAAAoB,IAAA,YAAA8C,IAAA,EAAAxB,kBAAA,SAAAtN,GAAA,QAAA+I,KAAA,MAAA/I,EAAA,IAAA6K,EAAA,cAAAkE,EAAAjG,EAAAgC,GAAA,OAAAG,EAAAc,KAAA,QAAAd,EAAAe,IAAAhM,EAAA6K,EAAAxH,KAAAyF,EAAAgC,IAAAD,EAAAxL,OAAA,OAAAwL,EAAAmB,IAAApB,KAAAE,CAAA,SAAAA,EAAA,KAAAiD,WAAAzP,OAAA,EAAAwM,GAAA,IAAAA,EAAA,KAAAvM,EAAA,KAAAwP,WAAAjD,GAAAG,EAAA1M,EAAA0P,WAAA,YAAA1P,EAAAoP,OAAA,OAAAoB,EAAA,UAAAxQ,EAAAoP,QAAA,KAAAvK,KAAA,KAAA+H,EAAArC,EAAAuB,KAAA9L,EAAA,YAAA8M,EAAAvC,EAAAuB,KAAA9L,EAAA,iBAAA4M,GAAAE,EAAA,SAAAjI,KAAA7E,EAAAqP,SAAA,OAAAmB,EAAAxQ,EAAAqP,UAAA,WAAAxK,KAAA7E,EAAAsP,WAAA,OAAAkB,EAAAxQ,EAAAsP,WAAA,SAAA1C,GAAA,QAAA/H,KAAA7E,EAAAqP,SAAA,OAAAmB,EAAAxQ,EAAAqP,UAAA,YAAAvC,EAAA,MAAAnH,MAAA,kDAAAd,KAAA7E,EAAAsP,WAAA,OAAAkB,EAAAxQ,EAAAsP,WAAA,KAAAtI,OAAA,SAAAqF,EAAA5K,GAAA,QAAA6K,EAAA,KAAAkD,WAAAzP,OAAA,EAAAuM,GAAA,IAAAA,EAAA,KAAAC,EAAA,KAAAiD,WAAAlD,GAAA,GAAAC,EAAA6C,QAAA,KAAAvK,MAAA0F,EAAAuB,KAAAS,EAAA,oBAAA1H,KAAA0H,EAAA+C,WAAA,KAAAtP,EAAAuM,EAAA,OAAAvM,IAAA,UAAAqM,GAAA,aAAAA,IAAArM,EAAAoP,QAAA3N,GAAAA,GAAAzB,EAAAsP,aAAAtP,EAAA,UAAA0M,EAAA1M,EAAAA,EAAA0P,WAAA,UAAAhD,EAAAc,KAAAnB,EAAAK,EAAAe,IAAAhM,EAAAzB,GAAA,KAAAc,OAAA,YAAAgE,KAAA9E,EAAAsP,WAAA1B,GAAA,KAAA6C,SAAA/D,EAAA,EAAA+D,SAAA,SAAApE,EAAA5K,GAAA,aAAA4K,EAAAmB,KAAA,MAAAnB,EAAAoB,IAAA,gBAAApB,EAAAmB,MAAA,aAAAnB,EAAAmB,KAAA,KAAA1I,KAAAuH,EAAAoB,IAAA,WAAApB,EAAAmB,MAAA,KAAA+C,KAAA,KAAA9C,IAAApB,EAAAoB,IAAA,KAAA3M,OAAA,cAAAgE,KAAA,kBAAAuH,EAAAmB,MAAA/L,IAAA,KAAAqD,KAAArD,GAAAmM,CAAA,EAAA8C,OAAA,SAAArE,GAAA,QAAA5K,EAAA,KAAA+N,WAAAzP,OAAA,EAAA0B,GAAA,IAAAA,EAAA,KAAA6K,EAAA,KAAAkD,WAAA/N,GAAA,GAAA6K,EAAAgD,aAAAjD,EAAA,YAAAoE,SAAAnE,EAAAoD,WAAApD,EAAAiD,UAAAE,EAAAnD,GAAAsB,CAAA,kBAAAvB,GAAA,QAAA5K,EAAA,KAAA+N,WAAAzP,OAAA,EAAA0B,GAAA,IAAAA,EAAA,KAAA6K,EAAA,KAAAkD,WAAA/N,GAAA,GAAA6K,EAAA8C,SAAA/C,EAAA,KAAA9B,EAAA+B,EAAAoD,WAAA,aAAAnF,EAAAiD,KAAA,KAAAjB,EAAAhC,EAAAkD,IAAAgC,EAAAnD,EAAA,QAAAC,CAAA,QAAA5G,MAAA,0BAAAgL,cAAA,SAAAlP,EAAA6K,EAAA/B,GAAA,YAAAqE,SAAA,CAAAjC,SAAAwB,EAAA1M,GAAAwN,WAAA3C,EAAA4C,QAAA3E,GAAA,cAAAzJ,SAAA,KAAA2M,IAAApB,GAAAuB,CAAA,GAAAnM,CAAA,UAAA2C,EAAAwM,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAA7B,UAAA,8CAAA8B,EAAAC,EAAAC,GAAA,QAAAhR,EAAA,EAAAA,EAAAgR,EAAAjR,OAAAC,IAAA,KAAAiR,EAAAD,EAAAhR,GAAAiR,EAAAjE,WAAAiE,EAAAjE,aAAA,EAAAiE,EAAAhE,cAAA,YAAAgE,IAAAA,EAAA/D,UAAA,GAAAjK,OAAAuJ,eAAAuE,EAAAG,EAAAD,EAAA9N,KAAA8N,EAAA,WAAAE,EAAAN,EAAAO,EAAAC,GAAA,OAAAD,GAAAN,EAAAD,EAAAhF,UAAAuF,GAAAC,GAAAP,EAAAD,EAAAQ,GAAApO,OAAAuJ,eAAAqE,EAAA,aAAA3D,UAAA,IAAA2D,CAAA,UAAAK,EAAA7E,GAAA,IAAArM,EAAA,SAAAqM,EAAAC,GAAA,aAAAzB,EAAAwB,KAAAA,EAAA,OAAAA,EAAA,IAAA5K,EAAA4K,EAAAI,OAAA6E,aAAA,YAAA7P,EAAA,KAAAzB,EAAAyB,EAAAqK,KAAAO,EAAAC,GAAA,wBAAAzB,EAAA7K,GAAA,OAAAA,EAAA,UAAAgP,UAAA,kEAAA1C,EAAAiF,OAAAC,QAAAnF,EAAA,CAAAoF,CAAApF,EAAA,0BAAAxB,EAAA7K,GAAAA,EAAAA,EAAA,YAAA6K,EAAA0B,GAAA,OAAA1B,EAAA,mBAAA4B,QAAA,iBAAAA,OAAAE,SAAA,SAAAJ,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAE,QAAAF,EAAAlN,cAAAoN,QAAAF,IAAAE,OAAAZ,UAAA,gBAAAU,CAAA,EAAA1B,EAAA0B,EAAA,YAQCnN,KATDL,EASC,WACD,+ECYiB8D,8TAtBjB,SAAS6O,EAAYC,GAA0C,IAApBzF,EAAA9E,UAAArH,OAAA,QAAAS,IAAA4G,UAAA,GAAAA,UAAA,GAAc,OACjDwK,EAAYD,EACfE,MAAM,KAAK,GACXA,MAAM,KAAK,GACXA,MAAM,KAAK,GACXA,MAAM,KAAK,GACRC,EAAWH,EACdE,MAAM,KAAK,GACXA,MAAM,KAAK,GACXA,MAAM,KAAK,GACXA,MAAM,KAAK,GAEd,MAAI,SAAW3F,EACN4F,EAEL,cAAgB5F,EACX0F,EAEFE,EAAW,IAAMF,CAC1B,uEAGA,SAAiB/O,GAAW,IACbkP,EAAiB,WAE5B,OAAAZ,GAFF,SAAAY,IAAA3N,EAAA,KAAA2N,GACY,KAAAJ,aAAuB,EA2FnC,GA1FE,EAAAxO,IAAA,SAAAS,MAMO,SAAO+N,EAAsBK,GAClCrS,KAAKgS,aAAeA,EAIpB,IAHA,IAAMM,EAAiBpI,OAAOqI,KAAKP,EAAaE,MAAM,KAAK,IACrDM,EAAgC,GAClCC,EAAY,GACPC,EAAS,EAAGA,EAASJ,EAAelS,OAAQsS,GAAU,IAAK,CAGlE,IAFA,IAAM/B,EAAQ2B,EAAe3B,MAAM+B,EAAQA,EAAS,KAC9CC,EAAc,IAAIxS,MAAMwQ,EAAMvQ,QAC3BC,EAAI,EAAGA,EAAIsQ,EAAMvQ,OAAQC,IAChCsS,EAAYtS,GAAKsQ,EAAMiC,WAAWvS,GAEpC,IAAMwS,EAAY,IAAIC,WAAWH,GACjCH,EAAWjS,KAAKsS,EAClB,CACA,IAAMZ,EAAYF,EAAYC,EAAc,aACtCG,EAAWJ,EAAYC,EAAc,QAM3C,OAJES,EADEJ,GAGU,mBAAHlH,OAAsB8G,GAE1B,IAAIc,KAAKP,EAAYC,EAAW,CACrC5E,KAAM,GAAF1C,OAAKgH,EAAQ,KAAAhH,OAAI8G,IAEzB,GACA,CAAAzO,IAAA,WAAAS,MAKO,SAASL,GACd,OAAO,IAAIpD,SAAQ,SAACC,EAASC,GAC3B,IAAMsS,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACjBzS,EAAQuS,EAAO3P,OACjB,EACA2P,EAAOG,QAAU,SAACrS,GAChBJ,EAAOI,EACT,EACAkS,EAAOI,cAAcxP,EACvB,GACF,GACA,CAAAJ,IAAA,eAAAS,MAKO,SAAa+N,GAIlB,IAHA,IAAMqB,EAAenJ,OAAOqI,KAAKP,EAAaE,MAAM,KAAK,IACjD9R,EAAWiT,EAAXjT,OACFkT,EAAQ,IAAIR,WAAW1S,GACpBC,EAAI,EAAGA,EAAID,EAAQC,IAC1BiT,EAAMjT,GAAKgT,EAAaT,WAAWvS,GAErC,OAAOiT,CACT,GACA,CAAA9P,IAAA,iBAAAS,MAKO,SAAesP,GAEpB,IADA,IAAIF,EAAe,GACVhT,EAAI,EAAGA,EAAIkT,EAAWnT,OAAQC,IACrCgT,GAAgBzB,OAAO4B,aAAaD,EAAWlT,IAEjD,OAAO6J,OAAOuJ,KAAKJ,EACrB,GACA,CAAA7P,IAAA,WAAAS,MAKa,SAASyP,gJACb,IAAIlT,SAA8B,SAACC,GACxC,IAAMuS,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACjB,IAAQ7P,EAAW2P,EAAX3P,OAER5C,EADqB4C,GAAU,GAEjC,EACA2P,EAAOI,cAAcM,EACvB,KAAE,wBAAAzO,EAAAQ,OAAA,GAAAV,EAAA,QACH,CA3F2B,GAAjB7B,EAAAkP,kBAAiBA,EA4F7B,IACYjP,EAAe,kBAAAqO,GAAA,SAAArO,IAAAsB,EAAA,KAAAtB,EAAA,KAAAK,IAAA,iBAAAS,MAOnB,SAAesP,EAAwBI,GAE5C,OADAA,EAAcA,QAAAA,EAAe,GACtB,IAAIC,KAAK,CAACL,GAAa,CAAE1F,KAAM8F,GACxC,GACA,CAAAnQ,IAAA,WAAAS,MAKO,SAASL,GACd,OAAOA,EAAK+M,MAAM,EAAG/M,EAAKiQ,KAAMjQ,EAAKiK,KACvC,GACA,CAAArK,IAAA,mBAAAS,MAMO,SAAiB+N,EAAsB2B,GAC5CA,EAAcA,GAAe,GAG7B,IAFA,IAAMrB,EAAiBpI,OAAOqI,KAAKP,EAAaE,MAAM,KAAK,IACrDS,EAAc,IAAIxS,MAAMmS,EAAelS,QACpCC,EAAI,EAAGA,EAAIiS,EAAelS,OAAQC,IACzCsS,EAAYtS,GAAKiS,EAAeM,WAAWvS,GAE7C,IAAMwS,EAAY,IAAIC,WAAWH,GACjC,OAAO,IAAIiB,KAAK,CAACf,GAAY,CAAEhF,KAAM8F,GACvC,IAAC,CAlCyB,GAAfzQ,EAAAC,gBAAeA,EAmC3B,IAEY2Q,EAAe,kBAAAtC,GAAA,SAAAsC,IAAArP,EAAA,KAAAqP,EAAA,KAAAtQ,IAAA,WAAAS,MAMnB,SAASL,GACd,OAAO,IAAIpD,SAAQ,SAACC,EAASC,GAC3B,IAAMsS,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACjBzS,EAAQuS,EAAO3P,OACjB,EACA2P,EAAOG,QAAU,SAACrS,GAChBJ,EAAOI,EACT,EACAkS,EAAOI,cAAcxP,EACvB,GACF,GACA,CAAAJ,IAAA,mBAAAS,MAQO,SACL+N,EACA2B,EACAtB,GAGAsB,EAAcA,GAAe,GAI7B,IAHA,IAAMI,EAHNtM,UAAArH,OAAA,QAAAS,IAAA4G,UAAA,KAAAA,UAAA,GAG6DuK,EAA7BA,EAAaE,MAAM,KAAK,GAClDI,EAAiBpI,OAAOqI,KAAKwB,GAC7BpB,EAAc,IAAIxS,MAAMmS,EAAelS,QACpCC,EAAI,EAAGA,EAAIiS,EAAelS,OAAQC,IACzCsS,EAAYtS,GAAKiS,EAAeM,WAAWvS,GAE7C,IAAMwS,EAAY,IAAIC,WAAWH,GAC3Be,EAAO,IAAIE,KAAK,CAACf,GAAY,CAAEhF,KAAM8F,IAE3C,OADAtB,EAAWA,GAAY,QAChB,IAAIU,KAAK,CAACW,GAAOrB,EAAU,CAAExE,KAAM8F,GAC5C,GACA,CAAAnQ,IAAA,iBAAAS,MAOO,SACLsP,EACAS,EACA3B,GAEA,OAAO,IAAIU,KAAKQ,EAAmBlB,EAAU,CAAExE,KAAMmG,GACvD,IAAC,CAzDyB,GAAf9Q,EAAA4Q,gBAAeA,EA0D3B,IACYG,EAAmB,WAK9B,OAAAzC,GAHA,SAAAyC,EAAYtT,GAAuB8D,EAAA,KAAAwP,GACjCjU,KAAKkU,MAAQvT,CACf,GACA,EAAA6C,IAAA,YAAAS,MAIO,WACL,IAAMlD,EAAW,IAAIwB,SACrB,GAA0B,WAAtB2I,EAAOlL,KAAKkU,OAAoB,CAClC,IAAIvT,EAAOX,KAAKkU,MAChB,IACE,IAAK,IAAM1Q,KAAOxD,KAAKkU,MACjBlU,KAAKkU,MAAMpN,eAAetD,IAC5BzC,EAAS8C,OAAOL,EAAK7C,EAAK6C,GAGhC,CAAE,MAAO1C,GACP2L,QAAQ3L,MAAM,oBAAsBA,EACtC,CACF,CACA,OAAOC,CACT,GACA,CAAAyC,IAAA,UAAAS,MAIO,WACL,IAAIkQ,EAAwB,CAAC,EAC7B,GAAInU,KAAKkU,iBAAiB3R,SACxB,IACE,IAAM6R,EAAkB,CAAC,EACzBpU,KAAKkU,MAAMvQ,SAAQ,SAACM,EAAOT,GACzB4Q,EAAW5Q,GAAOS,CACpB,IACAkQ,EAAa7Q,OAAAwG,OAAA,GAAQsK,EACvB,CAAE,MAAOtT,GACP2L,QAAQ3L,MAAM,oBAAsBA,EACtC,CAEF,OAAOqT,CACT,GACA,CAAA3Q,IAAA,SAAAS,MAKO,SAAOoQ,GACZ,MAAe,eAAXA,EACErU,KAAKkU,iBAAiB3R,SACjBvC,KAAKwQ,UAEPxQ,KAAKkU,MAEC,iBAAXG,EACErU,KAAKkU,iBAAiB3R,SACjBvC,KAAKkU,MAEPlU,KAAKsU,YAEC,SAAXD,EACKrU,KAAKuU,YADd,CAGF,GAAC,CAAA/Q,IAAA,OAAAS,MACO,WACN,OAAIjE,KAAKkU,iBAAiB3R,SACjBvC,KAAKwQ,UAELxQ,KAAKsU,WAEhB,IAAC,CAxE6B,GAAnBpR,EAAA+Q,oBAAmBA,CA0EjC,CAxQD,CAAiB/Q,IAAW7D,EAAA6D,YAAXA,EAAW,OCnB5BsR,EAAA,UACAC,EAAA,0BAAAD,KFMA,IATA,WAAAtJ,EAAA7L,IAAA,WAAA6L,EAAA5L,GACAA,EAAAD,QAAAD,KAEAG,EAAA,aAAE,EAAF,0DGHImV,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB/T,IAAjBgU,EACH,OAAOA,EAAaxV,QAGrB,IAAIC,EAASoV,EAAyBE,GAAY,CACjDE,GAAIF,EACJG,QAAQ,EACR1V,QAAS,CAAC,GAUX,OANAoV,EAAoBG,GAAUzI,KAAK7M,EAAOD,QAASC,EAAQA,EAAOD,QAASsV,GAG3ErV,EAAOyV,QAAS,EAGTzV,EAAOD,OACf,QCzBAsV,EAAoBK,IAAO1V,IAC1BA,EAAO2V,MAAQ,GACV3V,EAAO4V,WAAU5V,EAAO4V,SAAW,IACjC5V,GCAkBqV,EAAoB","sources":["webpack://@easylibs/tempdata-backend/webpack/universalModuleDefinition","webpack://@easylibs/tempdata-backend/./src/tempdata-backend.ts","webpack://@easylibs/tempdata-backend/../src/fetch-request.ts","webpack://@easylibs/tempdata-backend/@easylibs/transformer/webpack/universalModuleDefinition","webpack://@easylibs/tempdata-backend/@easylibs/transformer/src/transformer.ts","webpack://@easylibs/tempdata-backend/@easylibs/transformer/webpack/startup","webpack://@easylibs/tempdata-backend/webpack/bootstrap","webpack://@easylibs/tempdata-backend/webpack/runtime/node module decorator","webpack://@easylibs/tempdata-backend/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tempdata-backend\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tempdata-backend\"] = factory();\n\telse\n\t\troot[\"tempdata-backend\"] = factory();\n})(self, () => {\nreturn ","import FetchRequest from \"@easylibs/fetch-request\";\r\nimport { Transformer } from \"@easylibs/transformer\";\r\nimport TempData from \"@easylibs/tempdata\";\r\n\r\ndeclare interface Callbacks {\r\n  onPostFetch?: (response?: any, status?:number) => any,\r\n  onPreFetch?: (data?: any) => any,\r\n  onSuccess?: (response: any) => void,\r\n  onError?: (error: Error, status: number) => void,\r\n}\r\n\r\nexport default class TempDataBackend {\r\n  /**\r\n   *\r\n   * @param database - base de données\r\n   * @param uri - L'URL de destination où les données du formulaire seront envoyées.\r\n   */\r\n  constructor(private database: TempData, private uri: string) {}\r\n  /**\r\n   * Persists data to the server.\r\n   *\r\n   * @param callbacks - The callback function to be called after the data is persisted.\r\n   * @returns A promise that resolves when the data is persisted.\r\n   */\r\n  public async persist(callbacks: Callbacks): Promise<void> \r\n  {\r\n    const elements = await this.database.read();\r\n    const promises: any[] | PromiseLike<any[]> = [];\r\n    if (elements instanceof Array && elements.length > 0) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        ((currentIndex) => {\r\n          promises.push(\r\n            new Promise(async (resolve, reject) => {\r\n              try {\r\n                const data = await this.database.readOne(\r\n                  currentIndex,\r\n                  undefined,\r\n                  \"record\"\r\n                );\r\n                if(data){\r\n                  delete data[\"base64String\"] as any;\r\n                  delete data[\"mk\"] as any;\r\n                }\r\n                resolve(data);\r\n              } catch (error) {\r\n                reject(\"Désolé une probleme est survenu: \" + error);\r\n              }\r\n            })\r\n          );\r\n        })(i);\r\n      }\r\n    }\r\n    const formData = this.normalizeArrayField(await Promise.all(promises));\r\n    new FetchRequest({\r\n      uri: this.uri,\r\n      data: formData,\r\n      options: {\r\n        method: \"POST\",\r\n        responseDataType:\"json\",\r\n        requestDataConvert: \"form-data\",\r\n      },\r\n      callbacks:callbacks\r\n    });\r\n  }\r\n  /**\r\n   * Saves form data to the server.\r\n   *\r\n   * @param submiter - The submit button element.\r\n   * @param callbacks - The callback functions to call before, after, on success or error during the fetch request.\r\n   * @param loader - The loader HTML content to display while saving the data.\r\n   */\r\n  public save(submiter: HTMLElement, callbacks?: Callbacks, loader?: string|Function) {\r\n    const form =\r\n      (submiter.closest(\"form\") as HTMLFormElement) ??\r\n      (document.querySelector(\"form\") as HTMLFormElement);\r\n    submiter.addEventListener(\"click\", async (e) => {\r\n      e.preventDefault();\r\n      const isEmpty = await this.database.isItEmpty();\r\n      if (true === isEmpty && !form.checkValidity()) {\r\n        return form.reportValidity();\r\n      }\r\n      const innerSubmiter = this.escape(submiter.innerHTML);\r\n      if (true === isEmpty && form.checkValidity()) {\r\n        const formData = new FormData(form);\r\n        new FetchRequest({\r\n          uri: this.uri,\r\n          data: formData,\r\n          options: {\r\n            method: \"POST\",\r\n            responseDataType:\"json\",\r\n            requestDataConvert: \"form-data\",\r\n          },\r\n          callbacks:{\r\n            onPreFetch(data) {\r\n              if (loader) {\r\n                if(loader instanceof Function){\r\n                loader();}\r\n                else{submiter.innerHTML = loader;}\r\n              }\r\n              callbacks.onPreFetch(data)\r\n            },\r\n            onPostFetch: (response, status)=>callbacks.onPostFetch(response, status),\r\n            onError:(error, status) => callbacks.onError(error, status),\r\n            onSuccess(response:Record<string,any>) {\r\n              submiter.innerHTML = innerSubmiter;\r\n              callbacks.onSuccess(response);\r\n            },\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n      form.setAttribute(\"novalidate\", \"\");\r\n      await this.persist(callbacks);\r\n    });\r\n  }\r\n  /**\r\n   * Normalizes an array field into a FormData object.\r\n   * This method takes an array of data objects and normalizes it into a FormData object. It handles files within the data objects by transforming them into Blobs using a BlobTransformer. The resulting FormData object is returned.\r\n   * @param datas - The array of data objects to be normalized.\r\n   * @returns The normalized FormData object.\r\n   */\r\n  protected normalizeArrayField(datas: Array<any>): FormData {\r\n    const transformer = new Transformer.BlobTransformer();\r\n    let index = 0;\r\n    return datas.reduce((result: FormData, data) => {\r\n      const objectsFormData = Object.keys(data).reduce((formData, key) => {\r\n        const files = data[key] as Array<File>;\r\n        if (Array.isArray(files) && files.length > 0) {\r\n          files.forEach((file) => {\r\n            formData.append(key, transformer.fromFile(file), file.name);\r\n          });\r\n        } else {\r\n          formData.set(key, data[key]);\r\n        }\r\n        return formData;\r\n      }, new FormData());\r\n      objectsFormData.forEach((value, key) => {\r\n        result.append(key, value);\r\n      });\r\n      index++;\r\n      return result;\r\n    }, new FormData());\r\n  }\r\n  private escape(str?: string): string {\r\n    if (!str) {\r\n      return \"\";\r\n    }\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(document.createTextNode(str));\r\n    return div.innerHTML;\r\n  }\r\n}\r\n",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"transformer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"transformer\"] = factory();\n\telse\n\t\troot[\"transformer\"] = factory();\n})(self, () => {\nreturn ","function getMimeType(base64String: string, get: string = \"both\"): string {\r\n  const extension = base64String\r\n    .split(\",\")[0]\r\n    .split(\":\")[1]\r\n    .split(\";\")[0]\r\n    .split(\"/\")[1];\r\n  const fileType = base64String\r\n    .split(\",\")[0]\r\n    .split(\":\")[1]\r\n    .split(\";\")[0]\r\n    .split(\"/\")[0];\r\n\r\n  if (\"type\" === get) {\r\n    return fileType;\r\n  }\r\n  if (\"extension\" === get) {\r\n    return extension;\r\n  }\r\n  return fileType + \"/\" + extension;\r\n}\r\n\r\n\r\nexport namespace Transformer {\r\n  export class Base64Transformer {\r\n    protected base64String: string = \"\";\r\n    /**\r\n     * Convertit une chaîne base64 en objet File.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param fileName - (Optionnel) Le nom du fichier.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public toFile(base64String: string, fileName?: string): File {\r\n      this.base64String = base64String;\r\n      const byteCharacters = window.atob(base64String.split(\",\")[1]);\r\n      const byteArrays: Array<Uint8Array> = [];\r\n      let _fileName = \"\";\r\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\r\n        const slice = byteCharacters.slice(offset, offset + 512);\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n          byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n        const byteArray = new Uint8Array(byteNumbers);\r\n        byteArrays.push(byteArray);\r\n      }\r\n      const extension = getMimeType(base64String, \"extension\");\r\n      const fileType = getMimeType(base64String, \"type\");\r\n      if (fileName) {\r\n        _fileName = fileName;\r\n      } else {\r\n        _fileName = `tranformed_file.${extension}`;\r\n      }\r\n      return new File(byteArrays, _fileName, {\r\n        type: `${fileType}/${extension}`,\r\n      });\r\n    }\r\n    /**\r\n     * Convertit un objet File en chaîne base64.\r\n     * @param file - Le fichier à convertir en base64.\r\n     * @returns La chaîne base64 résultante (sous forme de promesse).\r\n     */\r\n    public fromFile(file: File): Promise<any> {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n    /**\r\n     * Convertit une chaîne base64 en tableau Uint8Array.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @returns Le tableau Uint8Array résultant.\r\n     */\r\n    public toUint8Array(base64String: string): Uint8Array {\r\n      const binaryString = window.atob(base64String.split(\",\")[1]);\r\n      const { length } = binaryString;\r\n      const bytes = new Uint8Array(length);\r\n      for (let i = 0; i < length; i++) {\r\n        bytes[i] = binaryString.charCodeAt(i);\r\n      }\r\n      return bytes;\r\n    }\r\n    /**\r\n     * Convertit un tableau Uint8Array en chaîne base64.\r\n     * @param uint8Array - Le tableau Uint8Array à convertir en base64.\r\n     * @returns La chaîne base64 résultante.\r\n     */\r\n    public fromUint8Array(uint8Array: Uint8Array): string {\r\n      let binaryString = \"\";\r\n      for (let i = 0; i < uint8Array.length; i++) {\r\n        binaryString += String.fromCharCode(uint8Array[i]);\r\n      }\r\n      return window.btoa(binaryString);\r\n    }\r\n    /**\r\n     * Convertit un objet Blob en chaîne base64 ou ArrayBuffer.\r\n     * @param blob - Le Blob à convertir.\r\n     * @returns La chaîne base64 ou ArrayBuffer résultante (sous forme de promesse).\r\n     */\r\n    public async fromBlob(blob: Blob): Promise<string | ArrayBuffer> {\r\n      return new Promise<string | ArrayBuffer>((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = function () {\r\n          const { result } = reader;\r\n          const base64String = result || \"\";\r\n          resolve(base64String);\r\n        };\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    }\r\n  }\r\n  export class BlobTransformer {\r\n    /**\r\n     * Convertit un tableau Uint8Array en objet Blob.\r\n     * @param uint8Array - Le tableau Uint8Array à convertir en Blob.\r\n     * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromUint8Array(uint8Array: Uint8Array, contentType?: string): Blob {\r\n      contentType = contentType ?? \"\";\r\n      return new Blob([uint8Array], { type: contentType });\r\n    }\r\n    /**\r\n     * Crée un Blob à partir d'un objet File.\r\n     * @param file - Le fichier à convertir en Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromFile(file: File): Blob {\r\n      return file.slice(0, file.size, file.type);\r\n    }\r\n    /**\r\n     * Crée un Blob à partir d'une chaîne encodée en base64.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromBase64String(base64String: string, contentType?: string): Blob {\r\n      contentType = contentType || \"\";\r\n      const byteCharacters = window.atob(base64String.split(\",\")[1]);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      return new Blob([byteArray], { type: contentType });\r\n    }\r\n  }\r\n\r\n  export class FileTransformer {\r\n    /**\r\n     * Convertit un fichier en chaîne base64.\r\n     * @param file - Le fichier à convertir en base64.\r\n     * @returns La chaîne base64 résultante (sous forme de promesse).\r\n     */\r\n    public toBase64(file: File): Promise<unknown> {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n    /**\r\n     * Convertit une chaîne base64 en objet File.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param contentType - (Optionnel) Le type de contenu du fichier.\r\n     * @param fileName - (Optionnel) Le nom du fichier.\r\n     * @param formatString - (Optionnel) Indique si la chaîne base64 est formatée.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public fromBase64String(\r\n      base64String: string,\r\n      contentType?: string | null,\r\n      fileName?: string | null,\r\n      formatString: boolean = true\r\n    ): File {\r\n      contentType = contentType || \"\";\r\n      const fileInfo = formatString ? base64String.split(\",\")[1] : base64String;\r\n      const byteCharacters = window.atob(fileInfo);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], { type: contentType });\r\n      fileName = fileName || \"image\";\r\n      return new File([blob], fileName, { type: contentType });\r\n    }\r\n    /**\r\n     * Convertit un tableau Uint8Array en objet File.\r\n     * @param uint8Array - Le tableau Uint8Array.\r\n     * @param mimeType - Le type MIME du fichier.\r\n     * @param fileName - Le nom du fichier.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public fromUint8Array(\r\n      uint8Array: Uint8Array,\r\n      mimeType: string,\r\n      fileName: string\r\n    ): File {\r\n      return new File(uint8Array as any, fileName, { type: mimeType });\r\n    }\r\n  }\r\n  export class FormDataTransformer {\r\n    private _data: object | undefined;\r\n    constructor(data: object | FormData) {\r\n      this._data = data;\r\n    }\r\n    /**\r\n     * Transforme les données en un objet FormData.\r\n     * @returns L'objet FormData résultant.\r\n     */\r\n    public transform(): FormData {\r\n      const formData = new FormData();\r\n      if (typeof this._data === \"object\") {\r\n        let data = this._data as any;\r\n        try {\r\n          for (const key in this._data) {\r\n            if (this._data.hasOwnProperty(key)) {\r\n              formData.append(key, data[key]);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur détectée: \" + error);\r\n        }\r\n      }\r\n      return formData;\r\n    }\r\n    /**\r\n     * Revertit un objet FormData en objet JavaScript.\r\n     * @returns L'objet JavaScript résultant.\r\n     */\r\n    public reverse(): object {\r\n      let elementObject: object = {};\r\n      if (this._data instanceof FormData) {\r\n        try {\r\n          const tempObject: any = {};\r\n          this._data.forEach((value, key) => {\r\n            tempObject[key] = value;\r\n          });\r\n          elementObject = { ...tempObject };\r\n        } catch (error) {\r\n          console.error(\"Erreur détectée: \" + error);\r\n        }\r\n      }\r\n      return elementObject;\r\n    }\r\n    /**\r\n     * Option de transformation spécifique.\r\n     * @param option - L'option de transformation ('onlyobject', 'onlyformdata', 'auto').\r\n     * @returns L'objet ou le FormData résultant en fonction de l'option spécifiée.\r\n     */\r\n    public option(option: string) {\r\n      if (option === \"onlyobject\") {\r\n        if (this._data instanceof FormData) {\r\n          return this.reverse();\r\n        }\r\n        return this._data;\r\n      }\r\n      if (option === \"onlyformdata\") {\r\n        if (this._data instanceof FormData) {\r\n          return this._data;\r\n        }\r\n        return this.transform();\r\n      }\r\n      if (option === \"auto\") {\r\n        return this.auto();\r\n      }\r\n    }\r\n    private auto() {\r\n      if (this._data instanceof FormData) {\r\n        return this.reverse();\r\n      } else {\r\n        return this.transform();\r\n      }\r\n    }\r\n  }\r\n}\r\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/transformer.ts\"](0, __webpack_exports__);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(316);\n"],"names":["root","factory","exports","module","define","amd","self","constructor","database","uri","persist","callbacks","elements","this","read","promises","Array","length","i","currentIndex","push","Promise","resolve","reject","data","readOne","undefined","error","formData","normalizeArrayField","all","options","method","responseDataType","requestDataConvert","save","submiter","loader","form","closest","document","querySelector","addEventListener","e","preventDefault","isEmpty","isItEmpty","checkValidity","reportValidity","innerSubmiter","escape","innerHTML","FormData","onPreFetch","Function","onPostFetch","response","status","onError","onSuccess","setAttribute","datas","transformer","Transformer","BlobTransformer","reduce","result","Object","keys","key","files","isArray","forEach","file","append","fromFile","name","set","value","str","div","createElement","appendChild","createTextNode","FetchRequest","_this","_classCallCheck","count","submitForm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preFetch","run","postFetch","t0","handleError","stop","_callee2","_this$options","_options","finalUri","fetchOptions","_context2","Error","buildGetRequestUrl","includes","body","prepareRequestBody","headers","credentials","mode","cache","integrity","lazyFatching","_callee3","_context3","sent","hasOwnProperty","_ref4","_callee4","_context4","submitter","HTMLButtonElement","removeAttribute","abrupt","_x","_x2","apply","arguments","_ref5","_callee5","_this$options$callbac","_context5","_x3","attachSubmitterEvent","_lazyFatching","_callee7","timeOut","_response","_this2","_context7","fetch","setTimeout","_callee6","_context6","handleResult","_x4","_x5","_handleResult","_callee8","_this$options$callbac2","EXCLUDE_STATUS","_context8","text","json","t1","t2","ok","message","_x6","_x7","_recursion","_callee9","_context9","iteration","assign","_x8","url","URL","window","location","origin","params","URLSearchParams","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","_step$value","_slicedToArray","err","f","_typeof","concat","_i","_Object$entries","_Object$entries$_i","search","toString","_this$options$options","_this$options$options2","convertArrayToFormData","convertPrimaryDataToFormData","convertObjectToFormData","convertArrayToRecord","convertPrimaryDataToRecord","JSON","stringify","prototype","call","record","_ref7","_ref8","get","_this$options$callbac3","console","t","r","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","setPrototypeOf","__proto__","awrap","async","reverse","pop","charAt","slice","rval","handle","complete","finish","delegateYield","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","toPrimitive","String","Number","_toPrimitive","getMimeType","base64String","extension","split","fileType","Base64Transformer","fileName","byteCharacters","atob","byteArrays","_fileName","offset","byteNumbers","charCodeAt","byteArray","Uint8Array","File","reader","FileReader","onloadend","onerror","readAsDataURL","binaryString","bytes","uint8Array","fromCharCode","btoa","blob","contentType","Blob","size","FileTransformer","fileInfo","mimeType","FormDataTransformer","_data","elementObject","tempObject","option","transform","auto","__webpack_exports__","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","nmd","paths","children"],"sourceRoot":""}
{"version":3,"file":"tempdata-backend.min.js","mappings":"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","sources":["webpack://@easylibs/tempdata-backend/webpack/universalModuleDefinition","webpack://@easylibs/tempdata-backend/./src/tempdata-backend.ts","webpack://@easylibs/tempdata-backend/../src/fetch-request.ts","webpack://@easylibs/tempdata-backend/@easylibs/transformer/webpack/universalModuleDefinition","webpack://@easylibs/tempdata-backend/@easylibs/transformer/src/transformer.ts","webpack://@easylibs/tempdata-backend/@easylibs/transformer/webpack/startup","webpack://@easylibs/tempdata-backend/webpack/bootstrap","webpack://@easylibs/tempdata-backend/webpack/runtime/node module decorator","webpack://@easylibs/tempdata-backend/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tempdata-backend\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tempdata-backend\"] = factory();\n\telse\n\t\troot[\"tempdata-backend\"] = factory();\n})(self, () => {\nreturn ","import FetchRequest from \"@easylibs/fetch-request\";\r\nimport { Transformer } from \"@easylibs/transformer\";\r\nimport TempData from \"@easylibs/tempdata\";\r\n\r\nexport default class TempDataBackend {\r\n  private _response: any = null;\r\n  /**\r\n   *\r\n   * @param database - base de données\r\n   * @param uri - L'URL de destination où les données du formulaire seront envoyées.\r\n   */\r\n  constructor(private database: TempData, private uri: string) {}\r\n  /**\r\n   * Persists data to the server.\r\n   *\r\n   * @param redirectURL - The URL to redirect to after the data is persisted.\r\n   * @param callback - The callback function to be called after the data is persisted.\r\n   * @returns A promise that resolves when the data is persisted.\r\n   */\r\n  public async persist(redirectURL?: string,callback: Function = (result: any) => {}): Promise<void> \r\n  {\r\n    const elements = await this.database.read();\r\n    const promises: any[] | PromiseLike<any[]> = [];\r\n    if (elements instanceof Array && elements.length > 0) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        ((currentIndex) => {\r\n          promises.push(\r\n            new Promise(async (resolve, reject) => {\r\n              try {\r\n                const data = await this.database.readOne(\r\n                  currentIndex,\r\n                  \"record\"\r\n                );\r\n                if(data){\r\n                  delete data[\"base64String\"] as any;\r\n                  delete data[\"mk\"] as any;\r\n                }\r\n                resolve(data);\r\n              } catch (error) {\r\n                reject(\"Désolé une probleme est survenu: \" + error);\r\n              }\r\n            })\r\n          );\r\n        })(i);\r\n      }\r\n    }\r\n    const formData = this.normalizeArrayField(await Promise.all(promises));\r\n    new FetchRequest({\r\n      uri: this.uri,\r\n      data: formData,\r\n      options: {\r\n        method: \"POST\",\r\n        responseDataType:\"json\",\r\n        requestDataConvert: \"form-data\",\r\n      },\r\n      callbacks:{\r\n        onSuccess: (response) => {\r\n          this._response = response;\r\n          callback(this._response);\r\n          if (redirectURL) {\r\n            return (window.location.href = redirectURL || \"/\");\r\n          }\r\n        },\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Saves form data to the server.\r\n   *\r\n   * @param data - The data object containing the submiter, callback, redirectUrl, and loader properties.\r\n   * @param data.submiter - The submit button element.\r\n   * @param data.callback - The callback function to be called after the data is saved.\r\n   * @param data.redirectUrl - The URL to redirect to after the data is saved.\r\n   * @param data.loader - The loader HTML content to display while saving the data.\r\n   */\r\n  public save(data: {\r\n    submiter: HTMLElement;\r\n    callback?: Function;\r\n    redirectUrl?: string;\r\n    loader?: string|Function;\r\n    preFetchAction?: Function;\r\n  }) {\r\n    const form =\r\n      (data.submiter.closest(\"form\") as HTMLFormElement) ??\r\n      (document.querySelector(\"form\") as HTMLFormElement);\r\n    data.submiter.addEventListener(\"click\", async (e) => {\r\n      e.preventDefault();\r\n      const isEmpty = await this.database.isItEmpty();\r\n      if (true === isEmpty && !form.checkValidity()) {\r\n        return form.reportValidity();\r\n      }\r\n      const innerSubmiter = this.escape(data.submiter.innerHTML);\r\n      if (data.loader) {\r\n        if(typeof data.loader === 'string'){\r\n        data.submiter.innerHTML = data.loader;}\r\n        else{data.loader();}\r\n      }\r\n      if (true === isEmpty && form.checkValidity()) {\r\n        const formData = new FormData(form);\r\n        if(data.preFetchAction){data.preFetchAction(formData);}\r\n        new FetchRequest({\r\n          uri: this.uri,\r\n          data: formData,\r\n          options: {\r\n            method: \"POST\",\r\n            responseDataType:\"json\",\r\n            requestDataConvert: \"form-data\",\r\n          },\r\n          callbacks:{\r\n            onSuccess(response:Record<string,any>) {\r\n              data.submiter.innerHTML = innerSubmiter;\r\n              if(data.callback)data.callback(response);\r\n              if (data.redirectUrl) {\r\n                return (window.location.href = data.redirectUrl);\r\n              }\r\n            },\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n      form.setAttribute(\"novalidate\", \"\");\r\n      await this.persist(data.redirectUrl, (response: any) => {\r\n        data.submiter.innerHTML = innerSubmiter;\r\n        data.callback(response);\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Normalizes an array field into a FormData object.\r\n   * This method takes an array of data objects and normalizes it into a FormData object. It handles files within the data objects by transforming them into Blobs using a BlobTransformer. The resulting FormData object is returned.\r\n   * @param datas - The array of data objects to be normalized.\r\n   * @returns The normalized FormData object.\r\n   */\r\n  protected normalizeArrayField(datas: Array<any>): FormData {\r\n    const transformer = new Transformer.BlobTransformer();\r\n    let index = 0;\r\n    return datas.reduce((result: FormData, data) => {\r\n      const objectsFormData = Object.keys(data).reduce((formData, key) => {\r\n        const files = data[key] as Array<File>;\r\n        if (Array.isArray(files) && files.length > 0) {\r\n          files.forEach((file) => {\r\n            formData.append(key, transformer.fromFile(file), file.name);\r\n          });\r\n        } else {\r\n          formData.set(key, data[key]);\r\n        }\r\n        return formData;\r\n      }, new FormData());\r\n      objectsFormData.forEach((value, key) => {\r\n        result.append(key, value);\r\n      });\r\n      index++;\r\n      return result;\r\n    }, new FormData());\r\n  }\r\n  private escape(str?: string): string {\r\n    if (!str) {\r\n      return \"\";\r\n    }\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(document.createTextNode(str));\r\n    return div.innerHTML;\r\n  }\r\n  /**\r\n   * Retourne la réponse du serveur.\r\n   */\r\n  public get response(): any {\r\n    return this._response;\r\n  }\r\n}\r\n",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"transformer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"transformer\"] = factory();\n\telse\n\t\troot[\"transformer\"] = factory();\n})(self, () => {\nreturn ","function getMimeType(base64String: string, get: string = \"both\"): string {\r\n  const extension = base64String\r\n    .split(\",\")[0]\r\n    .split(\":\")[1]\r\n    .split(\";\")[0]\r\n    .split(\"/\")[1];\r\n  const fileType = base64String\r\n    .split(\",\")[0]\r\n    .split(\":\")[1]\r\n    .split(\";\")[0]\r\n    .split(\"/\")[0];\r\n\r\n  if (\"type\" === get) {\r\n    return fileType;\r\n  }\r\n  if (\"extension\" === get) {\r\n    return extension;\r\n  }\r\n  return fileType + \"/\" + extension;\r\n}\r\n\r\n\r\nexport namespace Transformer {\r\n  export class Base64Transformer {\r\n    protected base64String: string = \"\";\r\n    /**\r\n     * Convertit une chaîne base64 en objet File.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param fileName - (Optionnel) Le nom du fichier.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public toFile(base64String: string, fileName?: string): File {\r\n      this.base64String = base64String;\r\n      const byteCharacters = window.atob(base64String.split(\",\")[1]);\r\n      const byteArrays: Array<Uint8Array> = [];\r\n      let _fileName = \"\";\r\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\r\n        const slice = byteCharacters.slice(offset, offset + 512);\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n          byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n        const byteArray = new Uint8Array(byteNumbers);\r\n        byteArrays.push(byteArray);\r\n      }\r\n      const extension = getMimeType(base64String, \"extension\");\r\n      const fileType = getMimeType(base64String, \"type\");\r\n      if (fileName) {\r\n        _fileName = fileName;\r\n      } else {\r\n        _fileName = `tranformed_file.${extension}`;\r\n      }\r\n      return new File(byteArrays, _fileName, {\r\n        type: `${fileType}/${extension}`,\r\n      });\r\n    }\r\n    /**\r\n     * Convertit un objet File en chaîne base64.\r\n     * @param file - Le fichier à convertir en base64.\r\n     * @returns La chaîne base64 résultante (sous forme de promesse).\r\n     */\r\n    public fromFile(file: File): Promise<any> {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n    /**\r\n     * Convertit une chaîne base64 en tableau Uint8Array.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @returns Le tableau Uint8Array résultant.\r\n     */\r\n    public toUint8Array(base64String: string): Uint8Array {\r\n      const binaryString = window.atob(base64String.split(\",\")[1]);\r\n      const { length } = binaryString;\r\n      const bytes = new Uint8Array(length);\r\n      for (let i = 0; i < length; i++) {\r\n        bytes[i] = binaryString.charCodeAt(i);\r\n      }\r\n      return bytes;\r\n    }\r\n    /**\r\n     * Convertit un tableau Uint8Array en chaîne base64.\r\n     * @param uint8Array - Le tableau Uint8Array à convertir en base64.\r\n     * @returns La chaîne base64 résultante.\r\n     */\r\n    public fromUint8Array(uint8Array: Uint8Array): string {\r\n      let binaryString = \"\";\r\n      for (let i = 0; i < uint8Array.length; i++) {\r\n        binaryString += String.fromCharCode(uint8Array[i]);\r\n      }\r\n      return window.btoa(binaryString);\r\n    }\r\n    /**\r\n     * Convertit un objet Blob en chaîne base64 ou ArrayBuffer.\r\n     * @param blob - Le Blob à convertir.\r\n     * @returns La chaîne base64 ou ArrayBuffer résultante (sous forme de promesse).\r\n     */\r\n    public async fromBlob(blob: Blob): Promise<string | ArrayBuffer> {\r\n      return new Promise<string | ArrayBuffer>((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = function () {\r\n          const { result } = reader;\r\n          const base64String = result || \"\";\r\n          resolve(base64String);\r\n        };\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    }\r\n  }\r\n  export class BlobTransformer {\r\n    /**\r\n     * Convertit un tableau Uint8Array en objet Blob.\r\n     * @param uint8Array - Le tableau Uint8Array à convertir en Blob.\r\n     * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromUint8Array(uint8Array: Uint8Array, contentType?: string): Blob {\r\n      contentType = contentType ?? \"\";\r\n      return new Blob([uint8Array], { type: contentType });\r\n    }\r\n    /**\r\n     * Crée un Blob à partir d'un objet File.\r\n     * @param file - Le fichier à convertir en Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromFile(file: File): Blob {\r\n      return file.slice(0, file.size, file.type);\r\n    }\r\n    /**\r\n     * Crée un Blob à partir d'une chaîne encodée en base64.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n     * @returns Le Blob résultant.\r\n     */\r\n    public fromBase64String(base64String: string, contentType?: string): Blob {\r\n      contentType = contentType || \"\";\r\n      const byteCharacters = window.atob(base64String.split(\",\")[1]);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      return new Blob([byteArray], { type: contentType });\r\n    }\r\n  }\r\n\r\n  export class FileTransformer {\r\n    /**\r\n     * Convertit un fichier en chaîne base64.\r\n     * @param file - Le fichier à convertir en base64.\r\n     * @returns La chaîne base64 résultante (sous forme de promesse).\r\n     */\r\n    public toBase64(file: File): Promise<unknown> {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n    /**\r\n     * Convertit une chaîne base64 en objet File.\r\n     * @param base64String - La chaîne encodée en base64.\r\n     * @param contentType - (Optionnel) Le type de contenu du fichier.\r\n     * @param fileName - (Optionnel) Le nom du fichier.\r\n     * @param formatString - (Optionnel) Indique si la chaîne base64 est formatée.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public fromBase64String(\r\n      base64String: string,\r\n      contentType?: string | null,\r\n      fileName?: string | null,\r\n      formatString: boolean = true\r\n    ): File {\r\n      contentType = contentType || \"\";\r\n      const fileInfo = formatString ? base64String.split(\",\")[1] : base64String;\r\n      const byteCharacters = window.atob(fileInfo);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], { type: contentType });\r\n      fileName = fileName || \"image\";\r\n      return new File([blob], fileName, { type: contentType });\r\n    }\r\n    /**\r\n     * Convertit un tableau Uint8Array en objet File.\r\n     * @param uint8Array - Le tableau Uint8Array.\r\n     * @param mimeType - Le type MIME du fichier.\r\n     * @param fileName - Le nom du fichier.\r\n     * @returns Le fichier résultant.\r\n     */\r\n    public fromUint8Array(\r\n      uint8Array: Uint8Array,\r\n      mimeType: string,\r\n      fileName: string\r\n    ): File {\r\n      return new File(uint8Array as any, fileName, { type: mimeType });\r\n    }\r\n  }\r\n  export class FormDataTransformer {\r\n    private _data: object | undefined;\r\n    constructor(data: object | FormData) {\r\n      this._data = data;\r\n    }\r\n    /**\r\n     * Transforme les données en un objet FormData.\r\n     * @returns L'objet FormData résultant.\r\n     */\r\n    public transform(): FormData {\r\n      const formData = new FormData();\r\n      if (typeof this._data === \"object\") {\r\n        let data = this._data as any;\r\n        try {\r\n          for (const key in this._data) {\r\n            if (this._data.hasOwnProperty(key)) {\r\n              formData.append(key, data[key]);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur détectée: \" + error);\r\n        }\r\n      }\r\n      return formData;\r\n    }\r\n    /**\r\n     * Revertit un objet FormData en objet JavaScript.\r\n     * @returns L'objet JavaScript résultant.\r\n     */\r\n    public reverse(): object {\r\n      let elementObject: object = {};\r\n      if (this._data instanceof FormData) {\r\n        try {\r\n          const tempObject: any = {};\r\n          this._data.forEach((value, key) => {\r\n            tempObject[key] = value;\r\n          });\r\n          elementObject = { ...tempObject };\r\n        } catch (error) {\r\n          console.error(\"Erreur détectée: \" + error);\r\n        }\r\n      }\r\n      return elementObject;\r\n    }\r\n    /**\r\n     * Option de transformation spécifique.\r\n     * @param option - L'option de transformation ('onlyobject', 'onlyformdata', 'auto').\r\n     * @returns L'objet ou le FormData résultant en fonction de l'option spécifiée.\r\n     */\r\n    public option(option: string) {\r\n      if (option === \"onlyobject\") {\r\n        if (this._data instanceof FormData) {\r\n          return this.reverse();\r\n        }\r\n        return this._data;\r\n      }\r\n      if (option === \"onlyformdata\") {\r\n        if (this._data instanceof FormData) {\r\n          return this._data;\r\n        }\r\n        return this.transform();\r\n      }\r\n      if (option === \"auto\") {\r\n        return this.auto();\r\n      }\r\n    }\r\n    private auto() {\r\n      if (this._data instanceof FormData) {\r\n        return this.reverse();\r\n      } else {\r\n        return this.transform();\r\n      }\r\n    }\r\n  }\r\n}\r\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/transformer.ts\"](0, __webpack_exports__);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(316);\n"],"names":["root","factory","exports","module","define","amd","self","constructor","database","uri","_response","persist","redirectURL","callback","result","elements","this","read","promises","Array","length","i","currentIndex","push","Promise","resolve","reject","data","readOne","error","formData","normalizeArrayField","all","options","method","responseDataType","requestDataConvert","callbacks","onSuccess","response","window","location","href","save","form","submiter","closest","document","querySelector","addEventListener","e","preventDefault","isEmpty","isItEmpty","checkValidity","reportValidity","innerSubmiter","escape","innerHTML","loader","FormData","preFetchAction","redirectUrl","setAttribute","datas","transformer","Transformer","BlobTransformer","reduce","Object","keys","key","files","isArray","forEach","file","append","fromFile","name","set","value","str","div","createElement","appendChild","createTextNode","FetchRequest","_this","_classCallCheck","count","submitForm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","onPreFetch","preFetch","run","onPostFetch","postFetch","status","t0","handleError","stop","_callee2","_this$options","_options","finalUri","fetchOptions","_context2","Error","buildGetRequestUrl","includes","body","prepareRequestBody","headers","credentials","mode","cache","integrity","lazyFatching","_callee3","_context3","sent","hasOwnProperty","_ref4","_callee4","_context4","submitter","HTMLButtonElement","removeAttribute","abrupt","undefined","_x","_x2","apply","arguments","attachSubmitterEvent","_lazyFatching","_callee6","timeOut","_this2","_context6","fetch","setTimeout","_callee5","_context5","handleResult","_x3","_x4","_handleResult","_callee7","_this$options$callbac","_this$options$callbac2","EXCLUDE_STATUS","_context7","text","json","t1","t2","ok","onError","_x5","_x6","_recursion","_callee8","_context8","iteration","assign","_x7","url","URL","origin","params","URLSearchParams","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","_step$value","_slicedToArray","err","f","_typeof","concat","_i","_Object$entries","_Object$entries$_i","search","toString","_this$options$options","_this$options$options2","convertArrayToFormData","convertPrimaryDataToFormData","convertObjectToFormData","convertArrayToRecord","convertPrimaryDataToRecord","JSON","stringify","prototype","call","record","_ref6","_ref7","get","_this$options$callbac3","message","console","t","r","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","setPrototypeOf","__proto__","awrap","async","reverse","pop","charAt","slice","rval","handle","complete","finish","delegateYield","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","toPrimitive","String","Number","_toPrimitive","getMimeType","base64String","extension","split","fileType","Base64Transformer","fileName","byteCharacters","atob","byteArrays","_fileName","offset","byteNumbers","charCodeAt","byteArray","Uint8Array","File","reader","FileReader","onloadend","onerror","readAsDataURL","binaryString","bytes","uint8Array","fromCharCode","btoa","blob","contentType","Blob","size","FileTransformer","fileInfo","mimeType","FormDataTransformer","_data","elementObject","tempObject","option","transform","auto","__webpack_exports__","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","nmd","paths","children"],"sourceRoot":""}
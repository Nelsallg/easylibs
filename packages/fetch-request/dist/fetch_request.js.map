{"version":3,"file":"fetch_request.js","mappings":"wZA8BA,gBAGI,WAAAA,CAAYC,GAQF,KAAAC,SAAW,IAAY,EAAD,gCAC5B,GAA0C,mBAAhCC,KAAKF,QAAQG,eAA+B,CAClD,IAAIC,QAAaF,KAAKF,QAAQG,iBAC3BC,IACCF,KAAKF,QAAQI,KAAOA,EAAKA,KAEjC,CACJ,IACU,KAAAC,UAAY,IAAY,EAAD,gCAC7B,IACI,IAAIH,KAAKF,QACL,MAAM,IAAIM,MAAM,mCAEpB,IAAIJ,KAAKF,QAAQO,IACb,MAAM,IAAID,MAAM,yBAEpB,IAAIJ,KAAKF,QAAQA,UAAYE,KAAKF,QAAQA,QAAQQ,OAC9C,MAAM,IAAIF,MAAM,sCAEpB,MAAMG,QAAiBC,MAAMR,KAAKF,QAAQO,IAAK,CAC3CC,OAAQN,KAAKF,QAAQA,QAAQQ,OAC7BG,KAAMT,KAAKU,UACXC,QAAS,CACL,mBAAoB,oBAGtBC,QAAqBL,EAASM,OAIpC,GAHAb,KAAKc,UAAYF,EACdZ,KAAKF,QAAQiB,iBACff,KAAKF,QAAQiB,gBAAgBH,GAC3BZ,KAAKF,QAAQkB,UACZ,OAAOhB,KAAKF,QAAQkB,UAAUJ,EAEtC,CAAE,MAAOK,GACL,GAAGjB,KAAKF,QAAQoB,QACZ,OAAOlB,KAAKF,QAAQoB,QAAQD,EAGpC,CACJ,IACU,KAAAE,UAAY,IAAY,EAAD,gCAG7B,OAFGnB,KAAKF,QAAQsB,oBAAoBC,mBACnCrB,KAAKF,QAAQsB,SAASE,gBAAgB,YAChCtB,KAAKF,QAAQiB,gBAAkBf,KAAKF,QAAQiB,uBAAoBQ,CAC3E,IACU,KAAAC,WAAa,IAAY,EAAD,gCAC9B,IACOxB,KAAKF,QAAQG,uBAAsBD,KAAKD,kBACrCC,KAAKG,YACRH,KAAKF,QAAQiB,wBAAuBf,KAAKmB,YAChD,CAAC,MAAMF,GAEP,CACJ,IACU,KAAAQ,eAAkBvB,IACxB,MAAMwB,EAAW,IAAIC,SACrB,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQ7B,GACtCwB,EAASM,OAAOJ,EAAKC,QAAAA,EAAS,IAElC,OAAOH,CAAQ,EAET,KAAAO,WAAc/B,GACbgC,KAAKC,UAAU,CAAEjC,KAAMA,IArE9BF,KAAKF,QAAUA,EACZA,EAAQsB,SACPtB,EAAQsB,SAASgB,iBAAiB,QAASpC,KAAKwB,YAEhDxB,KAAKwB,YAEb,CAiEA,aAAcd,GACV,MAAM2B,EAAcnC,GAAgCA,aAAgByB,SAC9DW,EAAWpC,GAA6BqC,MAAMD,QAAQpC,GACtDsC,EAAYtC,GAA8C,iBAATA,GAAqB4B,OAAOW,KAAKvC,GAAMwC,OAAS,EAEvG,GAAG1C,KAAKF,QAAQA,QAAQ,CACpB,MAAM6C,EAAmB3C,KAAKF,QAAQA,QAAQ6C,iBAC9C,GAAGA,EACC,OAAQA,GACJ,IAAK,YACD,GAAIN,EAAWrC,KAAKF,QAAQI,MACxB,OAAOF,KAAKF,QAAQI,KACjB,GAAIoC,EAAQtC,KAAKF,QAAQI,MAC5B,OAAOF,KAAKiC,WAAWjC,KAAKF,QAAQI,MACjC,GAAIsC,EAASxC,KAAKF,QAAQI,MAC7B,OAAOF,KAAKyB,eAAezB,KAAKF,QAAQI,MAE5C,MACJ,IAAK,iBACD,GAAImC,EAAWrC,KAAKF,QAAQI,OAASoC,EAAQtC,KAAKF,QAAQI,OAASsC,EAASxC,KAAKF,QAAQI,MACrF,OAAOF,KAAKiC,YAAWK,EAAQtC,KAAKF,QAAQI,MAAQF,KAAKF,QAAQI,OAErE,MACJ,QACI,MAAME,MAAM,aAAauC,wBAGrC,CACR,CACA,YAAWpC,GAEP,OAAOP,KAAKc,SAChB,E,ICrIgB,KAAK,EADC,CAAC,E","sources":["webpack://@easylibs/fetch-request/./src/fetch-request.ts","webpack://@easylibs/fetch-request/webpack/startup"],"sourcesContent":["declare type FetchRequestType = {\r\n    uri: string,\r\n    data?: Object|FormData|null,\r\n    submiter?: HTMLElement|null,\r\n    postFetchAction?: (result?: any) => void,\r\n    preFetchAction?: Function,\r\n    onSuccess?: (response:any) => any,\r\n    onError?: (error: unknown) => any,\r\n    options?: {\r\n        method?: 'GET' | 'POST',\r\n        headers?: Object,\r\n        body?: any,\r\n        credentials?: \"omit\" | \"same-origin\",\r\n        mode?: \"cors\" | \"no-cors\" | \"same-origin\",\r\n        cache?: \"default\" | \"reload\" | \"no-cache\" | \"force-cache\" | \"only-if-cached\",\r\n        onProgressUpdate?: (progressEvent: ProgressEvent) => void,\r\n        responseHandler?: Function,\r\n        errorResponseHandler?: Function,\r\n        timeout?: number,\r\n        fetchOptions?: RequestInit,\r\n        isBinaryFileDownload?: boolean,\r\n        contentType?: string,\r\n        acceptDataFormat?: \"form-data\" | \"classic-object\" | \"array\",\r\n    }\r\n}\r\n/**\r\n * Cette classe est une classe utilitaire conçue pour faciliter l'envoi de requêtes Fetch dans une application web. \r\n * Elle offre une interface simple pour effectuer des requêtes HTTP \r\n * et gérer les actions avant et après l'envoi de la requête.\r\n */\r\nexport default class FetchRequest{\r\n    protected options: FetchRequestType;\r\n    protected _response: any;\r\n    constructor(options: FetchRequestType) {\r\n        this.options = options;\r\n        if(options.submiter){\r\n            options.submiter.addEventListener('click', this.submitForm);\r\n        }else{\r\n            this.submitForm()\r\n        }\r\n    }\r\n    protected preFetch = async () => {\r\n        if(typeof this.options.preFetchAction === 'function') {\r\n            let data = await this.options.preFetchAction();\r\n            if(data){\r\n                this.options.data = data.data;\r\n            }\r\n        }\r\n    }\r\n    protected fetchData = async () => {\r\n        try {\r\n            if(!this.options){\r\n                throw new Error(`Missing Options for the request`)\r\n            }\r\n            if(!this.options.uri){\r\n                throw new Error(\"L'URI est obligatoire\");\r\n            }\r\n            if(!this.options.options || !this.options.options.method){\r\n                throw new Error(\"La méthode d'appel est obligatoire\");\r\n            }\r\n            const response = await fetch(this.options.uri, {\r\n                method: this.options.options.method ,\r\n                body: this._formData,\r\n                headers: {\r\n                    'X-Requested-With': 'XMLHttpRequest'\r\n                }\r\n            });\r\n            const dataResponse = await response.json();\r\n            this._response = dataResponse;\r\n            if(this.options.postFetchAction)\r\n            {this.options.postFetchAction(dataResponse);}\r\n            if(this.options.onSuccess){\r\n                return this.options.onSuccess(dataResponse);\r\n            }\r\n        } catch (error) {\r\n            if(this.options.onError){\r\n                return this.options.onError(error);\r\n            }\r\n            console.error(error);\r\n        }\r\n    }\r\n    protected postFetch = async () => {\r\n        if(this.options.submiter instanceof HTMLButtonElement)\r\n        {this.options.submiter.removeAttribute('disabled');}\r\n        return this.options.postFetchAction ? this.options.postFetchAction() : undefined;\r\n    }\r\n    protected submitForm = async () => {\r\n        try{\r\n            if(this.options.preFetchAction){await this.preFetch();}\r\n            await this.fetchData();\r\n            if(this.options.postFetchAction){await this.postFetch();}\r\n        }catch(error){\r\n            console.error('Erreur lors de l\\'envoi du formulaire : ', error);\r\n        }\r\n    };\r\n    protected createFormData = (data: object) => {\r\n        const formData = new FormData();\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value ?? \"\");\r\n        }\r\n        return formData;\r\n    }\r\n    protected createJSON = (data: any[]|Object) => {\r\n        return JSON.stringify({ data: data });\r\n    }\r\n    protected get _formData() {\r\n        const isFormData = (data: any): data is FormData => data instanceof FormData;\r\n        const isArray = (data: any): data is any[] => Array.isArray(data);\r\n        const isObject = (data: any): data is object => typeof data === 'object' && Object.keys(data).length > 0;\r\n\r\n        if(this.options.options){\r\n            const acceptDataFormat = this.options.options.acceptDataFormat;\r\n            if(acceptDataFormat){\r\n                switch (acceptDataFormat) {\r\n                    case \"form-data\":\r\n                        if (isFormData(this.options.data)) {\r\n                            return this.options.data;\r\n                        } else if (isArray(this.options.data)) {\r\n                            return this.createJSON(this.options.data);\r\n                        } else if (isObject(this.options.data)) {\r\n                            return this.createFormData(this.options.data);\r\n                        }\r\n                        break;\r\n                    case \"classic-object\":\r\n                        if (isFormData(this.options.data) || isArray(this.options.data) || isObject(this.options.data)) {\r\n                            return this.createJSON(isArray(this.options.data) ? this.options.data : this.options.data);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw Error(`Le format ${acceptDataFormat} n'est pas supporté`);\r\n                }\r\n            }\r\n            }\r\n    }\r\n    public get response():any\r\n    {\r\n        return this._response;\r\n    }\r\n}\r\n\r\n\r\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[505](0, __webpack_exports__);\n"],"names":["constructor","options","preFetch","this","preFetchAction","data","fetchData","Error","uri","method","response","fetch","body","_formData","headers","dataResponse","json","_response","postFetchAction","onSuccess","error","onError","postFetch","submiter","HTMLButtonElement","removeAttribute","undefined","submitForm","createFormData","formData","FormData","key","value","Object","entries","append","createJSON","JSON","stringify","addEventListener","isFormData","isArray","Array","isObject","keys","length","acceptDataFormat"],"sourceRoot":""}
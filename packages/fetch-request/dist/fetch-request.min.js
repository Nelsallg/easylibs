!function(t,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define("fetch-request",[],o):"object"==typeof exports?exports["fetch-request"]=o():t["fetch-request"]=o()}(self,(()=>(()=>{"use strict";var t={};return{505:function(t,o){var i=this&&this.__awaiter||function(t,o,i,s){return new(i||(i=Promise))((function(e,n){function r(t){try{h(s.next(t))}catch(t){n(t)}}function a(t){try{h(s.throw(t))}catch(t){n(t)}}function h(t){var o;t.done?e(t.value):(o=t.value,o instanceof i?o:new i((function(t){t(o)}))).then(r,a)}h((s=s.apply(t,o||[])).next())}))};Object.defineProperty(o,"__esModule",{value:!0});o.default=class{constructor(t){this.fetchData=()=>i(this,void 0,void 0,(function*(){try{if(!this.options)throw new Error("Missing Options for the request");if(!this.options.uri)throw new Error("URI is required");if(!this.options.options||!this.options.options.method)throw new Error("The calling method is required");let t=null;if(this.options.data&&"GET"===this.options.options.method){if(t=new URL(this.options.uri),this.options.data instanceof FormData)throw new Error("The data format must be an object:key->value");t.search=new URLSearchParams(this.options.data).toString()}const o=yield fetch(null!=t?t:this.options.uri,{method:this.options.options.method,body:this._formData,headers:{"X-Requested-With":"XMLHttpRequest"}}),i=yield o.json();if(this._response=i,this.options.onPostFetch&&this.options.onPostFetch(i),this.options.onSuccess&&200===o.status)return this.options.onSuccess(i)}catch(t){if(this.options.onError&&200!==this._response.status)return this.options.onError(t,this._response.status);console.error(t)}})),this.preFetch=()=>i(this,void 0,void 0,(function*(){if("function"==typeof this.options.onPreFetch){let t=yield this.options.onPreFetch(this.options.data);t&&(this.options.data=t.data)}})),this.postFetch=()=>i(this,void 0,void 0,(function*(){return this.options.submiter instanceof HTMLButtonElement&&this.options.submiter.removeAttribute("disabled"),this.options.onPostFetch?this.options.onPostFetch():void 0})),this.submitForm=()=>i(this,void 0,void 0,(function*(){try{this.options.onPreFetch&&(yield this.preFetch()),yield this.fetchData(),this.options.onPostFetch&&(yield this.postFetch())}catch(t){console.error("Error executing query : ",t)}})),this.createFormData=t=>{const o=new FormData;for(const[i,s]of Object.entries(t))o.append(i,null!=s?s:"");return o},this.createJSON=t=>JSON.stringify({data:t}),this.options=t,t.submiter?t.submiter.addEventListener("click",this.submitForm):this.submitForm()}get _formData(){const t=t=>t instanceof FormData,o=t=>Array.isArray(t),i=t=>"object"==typeof t&&Object.keys(t).length>0;if(this.options.options){const s=this.options.options.acceptDataFormat;if(s)switch(s){case"form-data":if(t(this.options.data))return this.options.data;if(o(this.options.data))return this.createJSON(this.options.data);if(i(this.options.data))return this.createFormData(this.options.data);break;case"classic-object":if(t(this.options.data)||o(this.options.data)||i(this.options.data))return this.createJSON((o(this.options.data),this.options.data));break;default:throw Error(`The ${s} format is not supported`)}}}get response(){return this._response}}}}[505](0,t),t})()));
//# sourceMappingURL=fetch-request.min.js.map
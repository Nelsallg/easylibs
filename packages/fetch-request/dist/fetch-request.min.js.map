{"version":3,"file":"fetch-request.min.js","mappings":"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","sources":["webpack://@easylibs/fetch-request/webpack/universalModuleDefinition","webpack://@easylibs/fetch-request/webpack/bootstrap","webpack://@easylibs/fetch-request/webpack/runtime/define property getters","webpack://@easylibs/fetch-request/webpack/runtime/hasOwnProperty shorthand","webpack://@easylibs/fetch-request/webpack/runtime/make namespace object","webpack://@easylibs/fetch-request/./src/fetch-request.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fetch-request\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fetch-request\"] = factory();\n\telse\n\t\troot[\"fetch-request\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","declare type HttpMethod = 'GET' | 'POST';\r\ndeclare type Headers = Record<string, string>;\r\n\r\ndeclare interface FetchRequestOptions {\r\n    method: HttpMethod,\r\n    headers?: Headers,\r\n    credentials?: \"omit\" | \"same-origin\" | \"include\",\r\n    mode?: \"cors\" | \"no-cors\" | \"same-origin\",\r\n    cache?: \"default\" | \"force-cache\" | \"no-cache\" | \"no-store\" | \"only-if-cached\" | \"reload\",\r\n    integrity?: string,\r\n    timeOut?: number,\r\n    contentType?: string,\r\n    acceptDataFormat?: \"form-data\" | \"classic-object\" | \"array\",\r\n    responseType: 'json' | 'text',\r\n}\r\n\r\ndeclare interface FetchRequestCallbacks {\r\n    onPostFetch?: (response?: any) => void,\r\n    onPreFetch?: (that?: any) => Promise<any>,\r\n    onSuccess?: (response: any) => void,\r\n    onError?: (error: Error, status: number) => void\r\n}\r\n\r\ndeclare type FetchRequestType = {\r\n    uri: string,\r\n    data?: Record<string, string> | FormData | null,\r\n    submitter?: HTMLElement | null,\r\n    options?: FetchRequestOptions,\r\n    callbacks?: FetchRequestCallbacks\r\n}\r\n/**\r\n  * This class is a utility class designed to make it easier to send Fetch requests in a web application.\r\n  * It offers a simple interface for making HTTP requests\r\n  * and manage actions before and after sending the request.\r\n  */\r\nexport default class FetchRequest{\r\n    private options: FetchRequestType;\r\n    private response: any;\r\n    constructor(options: FetchRequestType) {\r\n        this.options = options;\r\n        this.attachSubmitterEvent();\r\n    }\r\n    private attachSubmitterEvent() {\r\n        this.options.submitter ? this.options.submitter.addEventListener('click', this.submitForm) : this.submitForm();  \r\n    }\r\n    private async submitForm(){\r\n        try{\r\n            if(this.options.callbacks.onPreFetch){await this.preFetch();}\r\n            await this.run();\r\n            if(this.options.callbacks.onPostFetch){await this.postFetch();}\r\n        }catch(error){\r\n            this.handleError(error, undefined,'Error executing query : ');\r\n        }\r\n    }\r\n    private async run(){\r\n        let response:Response|null = null;\r\n        try {\r\n            const { uri, data, options } = this.options;\r\n            if (!uri) throw new Error(\"URI is required\");\r\n            let finalUri = uri;\r\n            let body = null;\r\n            if (options && options.method === \"GET\" && data) {\r\n                finalUri = this.buildGetRequestUrl(uri, data);\r\n            } else if (data) {\r\n                body = this.prepareRequestBody(data);\r\n            }\r\n            const fetchOptions: RequestInit = {\r\n                method: options?.method || 'GET',\r\n                headers: options?.headers,\r\n                body: body,\r\n                credentials: options?.credentials,\r\n                mode: options?.mode,\r\n                cache: options?.cache,\r\n                integrity: options?.integrity,\r\n            };\r\n\r\n            response = await fetch(finalUri, fetchOptions);\r\n            this.response = this.options.options.responseType && this.options.options.responseType === \"text\" ? await response.text() : await response.json();\r\n\r\n            if (this.options.callbacks?.onSuccess && response.ok) {\r\n                this.options.callbacks.onSuccess(this.response);\r\n            }\r\n            \r\n        } catch (error) {\r\n            this.handleError(error, response ? response.status : 0);\r\n        }\r\n    }\r\n    private async preFetch (){\r\n        if(typeof this.options.callbacks.onPreFetch === 'function') {\r\n            let data = await this.options.callbacks.onPreFetch(this.options.data);\r\n            if(data){\r\n                this.options.data = data.data;\r\n            }\r\n        }\r\n    }\r\n    private async postFetch (){\r\n        if(this.options.submitter instanceof HTMLButtonElement)\r\n        {this.options.submitter.removeAttribute('disabled');}\r\n        return this.options.callbacks.onPostFetch ? this.options.callbacks.onPostFetch() : undefined;\r\n    }\r\n    private buildGetRequestUrl(uri: string, data: Record<string, string> | FormData): string {\r\n        const url = new URL(uri, window.location.origin);\r\n        const params = new URLSearchParams();\r\n        if (data instanceof FormData) {\r\n            for (let [key, value] of data.entries()) {\r\n                if (typeof value === 'string') {\r\n                    params.append(key, value);\r\n                }\r\n                // If needed, handle File type values differently\r\n            }\r\n        } else {\r\n            for (let [key, value] of Object.entries(data)) {\r\n                params.append(key, value);\r\n            }\r\n        }\r\n        url.search = params.toString();\r\n        return url.toString();\r\n    }\r\n    private prepareRequestBody(data: Record<string, string> | FormData): FormData | Record<string, string> | string {\r\n        if (this.options.options?.acceptDataFormat === \"form-data\" && !(data instanceof FormData)) {\r\n            return this.convertObjectToFormData(data);\r\n        } else if (this.options.options?.acceptDataFormat === \"classic-object\") {\r\n            return JSON.stringify(data);\r\n        }\r\n        return data;\r\n    }\r\n    private convertObjectToFormData(data: Record<string, string>): FormData {\r\n        const formData = new FormData();\r\n        Object.entries(data).forEach(([key, value]) => formData.append(key, value));\r\n        return formData;\r\n    }\r\n    private handleError(error: any, status?: number, message:string='Fetch Request Error: ') {\r\n        console.error(message, error);\r\n        if (this.options.callbacks?.onError) {\r\n            this.options.callbacks.onError(error, status || 0);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_regeneratorRuntime","e","t","r","n","i","a","iterator","c","asyncIterator","u","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","args","arguments","apply","err","undefined","_defineProperties","target","props","descriptor","_toPropertyKey","toPrimitive","String","Number","_toPrimitive","FetchRequest","options","instance","Constructor","_classCallCheck","this","attachSubmitterEvent","protoProps","staticProps","_postFetch","_preFetch","_run","_submitForm","submitter","addEventListener","submitForm","_callee","_context","callbacks","onPreFetch","preFetch","run","onPostFetch","postFetch","t0","handleError","_callee2","response","_this$options$callbac","_this$options","uri","data","finalUri","body","fetchOptions","_context2","buildGetRequestUrl","prepareRequestBody","headers","credentials","mode","cache","integrity","fetch","responseType","text","json","onSuccess","ok","t1","status","_callee3","_context3","_callee4","_context4","HTMLButtonElement","removeAttribute","url","URL","window","location","origin","params","URLSearchParams","FormData","_step","_iterator","_createForOfIteratorHelper","entries","_step$value","_slicedToArray","append","_i","_Object$entries","_Object$entries$_i","search","toString","_this$options$options","_this$options$options2","acceptDataFormat","JSON","stringify","convertObjectToFormData","formData","_ref","_ref2","_this$options$callbac2","message","console","onError"],"sourceRoot":""}
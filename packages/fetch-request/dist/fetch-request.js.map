{"version":3,"file":"fetch-request.js","mappings":"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","sources":["webpack://@easylibs/fetch-request/webpack/universalModuleDefinition","webpack://@easylibs/fetch-request/webpack/bootstrap","webpack://@easylibs/fetch-request/webpack/runtime/define property getters","webpack://@easylibs/fetch-request/webpack/runtime/hasOwnProperty shorthand","webpack://@easylibs/fetch-request/webpack/runtime/make namespace object","webpack://@easylibs/fetch-request/./src/fetch-request.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fetch-request\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fetch-request\"] = factory();\n\telse\n\t\troot[\"fetch-request\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","declare type HttpMethod = 'GET' | 'POST';\r\ndeclare type Headers = Record<string, string>;\r\n\r\ndeclare interface FetchRequestOptions {\r\n    method: HttpMethod,\r\n    headers?: Headers,\r\n    credentials?: \"omit\" | \"same-origin\" | \"include\",\r\n    mode?: \"cors\" | \"no-cors\" | \"same-origin\",\r\n    cache?: \"default\" | \"force-cache\" | \"no-cache\" | \"no-store\" | \"only-if-cached\" | \"reload\",\r\n    integrity?: string,\r\n    timeOut?: number,\r\n    contentType?: string,\r\n    acceptDataFormat?: \"form-data\" | \"classic-object\" | \"array\",\r\n    responseType: 'json' | 'text',\r\n}\r\n\r\ndeclare interface FetchRequestCallbacks {\r\n    onPostFetch?: (response?: any) => void,\r\n    onPreFetch?: (that?: any) => Promise<any>,\r\n    onSuccess?: (response: any) => void,\r\n    onError?: (error: Error, status: number) => void\r\n}\r\n\r\ndeclare type FetchRequestType = {\r\n    uri: string,\r\n    data?: Record<string, string> | FormData | null,\r\n    submitter?: HTMLElement | null,\r\n    options?: FetchRequestOptions,\r\n    callbacks?: FetchRequestCallbacks\r\n}\r\n/**\r\n  * This class is a utility class designed to make it easier to send Fetch requests in a web application.\r\n  * It offers a simple interface for making HTTP requests\r\n  * and manage actions before and after sending the request.\r\n  */\r\nexport default class FetchRequest{\r\n    private options: FetchRequestType;\r\n    private response: any;\r\n    constructor(options: FetchRequestType) {\r\n        this.options = options;\r\n        this.attachSubmitterEvent();\r\n    }\r\n    private attachSubmitterEvent() {\r\n        this.options.submitter ? this.options.submitter.addEventListener('click', this.submitForm) : this.submitForm();  \r\n    }\r\n    private async submitForm(){\r\n        try{\r\n            if(this.options.callbacks.onPreFetch){await this.preFetch();}\r\n            await this.run();\r\n            if(this.options.callbacks.onPostFetch){await this.postFetch();}\r\n        }catch(error){\r\n            this.handleError(error, undefined,'Error executing query : ');\r\n        }\r\n    }\r\n    private async run(){\r\n        let response:Response|null = null;\r\n        try {\r\n            const { uri, data, options } = this.options;\r\n            if (!uri) throw new Error(\"URI is required\");\r\n            let finalUri = uri;\r\n            let body = null;\r\n            if (options && options.method === \"GET\" && data) {\r\n                finalUri = this.buildGetRequestUrl(uri, data);\r\n            } else if (data) {\r\n                body = this.prepareRequestBody(data);\r\n            }\r\n            const fetchOptions: RequestInit = {\r\n                method: options?.method || 'GET',\r\n                headers: options?.headers,\r\n                body: body,\r\n                credentials: options?.credentials,\r\n                mode: options?.mode,\r\n                cache: options?.cache,\r\n                integrity: options?.integrity,\r\n            };\r\n\r\n            response = await fetch(finalUri, fetchOptions);\r\n            this.response = this.options.options.responseType && this.options.options.responseType === \"text\" ? await response.text() : await response.json();\r\n\r\n            if (this.options.callbacks?.onSuccess && response.ok) {\r\n                this.options.callbacks.onSuccess(this.response);\r\n            }\r\n            \r\n        } catch (error) {\r\n            this.handleError(error, response ? response.status : 0);\r\n        }\r\n    }\r\n    private async preFetch (){\r\n        if(typeof this.options.callbacks.onPreFetch === 'function') {\r\n            let data = await this.options.callbacks.onPreFetch(this.options.data);\r\n            if(data){\r\n                this.options.data = data.data;\r\n            }\r\n        }\r\n    }\r\n    private async postFetch (){\r\n        if(this.options.submitter instanceof HTMLButtonElement)\r\n        {this.options.submitter.removeAttribute('disabled');}\r\n        return this.options.callbacks.onPostFetch ? this.options.callbacks.onPostFetch() : undefined;\r\n    }\r\n    private buildGetRequestUrl(uri: string, data: Record<string, string> | FormData): string {\r\n        const url = new URL(uri, window.location.origin);\r\n        const params = new URLSearchParams();\r\n        if (data instanceof FormData) {\r\n            for (let [key, value] of data.entries()) {\r\n                if (typeof value === 'string') {\r\n                    params.append(key, value);\r\n                }\r\n                // If needed, handle File type values differently\r\n            }\r\n        } else {\r\n            for (let [key, value] of Object.entries(data)) {\r\n                params.append(key, value);\r\n            }\r\n        }\r\n        url.search = params.toString();\r\n        return url.toString();\r\n    }\r\n    private prepareRequestBody(data: Record<string, string> | FormData): FormData | Record<string, string> | string {\r\n        if (this.options.options?.acceptDataFormat === \"form-data\" && !(data instanceof FormData)) {\r\n            return this.convertObjectToFormData(data);\r\n        } else if (this.options.options?.acceptDataFormat === \"classic-object\") {\r\n            return JSON.stringify(data);\r\n        }\r\n        return data;\r\n    }\r\n    private convertObjectToFormData(data: Record<string, string>): FormData {\r\n        const formData = new FormData();\r\n        Object.entries(data).forEach(([key, value]) => formData.append(key, value));\r\n        return formData;\r\n    }\r\n    private handleError(error: any, status?: number, message:string='Fetch Request Error: ') {\r\n        console.error(message, error);\r\n        if (this.options.callbacks?.onError) {\r\n            this.options.callbacks.onError(error, status || 0);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","FetchRequest","options","attachSubmitterEvent","submitter","addEventListener","submitForm","_submitForm","_callee","_callee$","_context","callbacks","onPreFetch","preFetch","run","onPostFetch","postFetch","t0","handleError","_run","_callee2","response","_this$options$callbac","_this$options","uri","data","finalUri","body","fetchOptions","_callee2$","_context2","buildGetRequestUrl","prepareRequestBody","headers","credentials","mode","cache","integrity","fetch","responseType","text","json","onSuccess","ok","t1","status","_preFetch","_callee3","_callee3$","_context3","_postFetch","_callee4","_callee4$","_context4","HTMLButtonElement","removeAttribute","url","URL","window","location","origin","params","URLSearchParams","FormData","_iterator","_createForOfIteratorHelper","entries","_step","_step$value","_slicedToArray","append","_i","_Object$entries","_Object$entries$_i","search","toString","_this$options$options","_this$options$options2","acceptDataFormat","convertObjectToFormData","JSON","stringify","formData","_ref","_ref2","_this$options$callbac2","message","console","onError","default"],"sourceRoot":""}
{"version":3,"file":"fetch-request.js","mappings":"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","sources":["webpack://@easylibs/fetch-request/webpack/universalModuleDefinition","webpack://@easylibs/fetch-request/webpack/bootstrap","webpack://@easylibs/fetch-request/webpack/runtime/define property getters","webpack://@easylibs/fetch-request/webpack/runtime/hasOwnProperty shorthand","webpack://@easylibs/fetch-request/webpack/runtime/make namespace object","webpack://@easylibs/fetch-request/./src/fetch-request.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fetch-request\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fetch-request\"] = factory();\n\telse\n\t\troot[\"fetch-request\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","declare type HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD' | 'OPTIONS';\r\ndeclare type Headers = Record<string, string>;\r\n\r\ndeclare interface FetchRequestOptions {\r\n    method?: HttpMethod,\r\n    headers?: Headers,\r\n    credentials?: \"omit\" | \"same-origin\" | \"include\",\r\n    mode?: \"cors\" | \"no-cors\" | \"same-origin\",\r\n    cache?: \"default\" | \"force-cache\" | \"no-cache\" | \"no-store\" | \"only-if-cached\" | \"reload\",\r\n    integrity?: string,\r\n    timeOut?: number,\r\n    contentType?: string,\r\n    acceptDataFormat?: \"form-data\" | \"classic-object\" | \"array\",\r\n    responseType?: 'json' | 'text',\r\n}\r\n\r\ndeclare interface FetchRequestCallbacks {\r\n    onPostFetch?: (response?: any) => any,\r\n    onPreFetch?: (data?: any) => any,\r\n    onSuccess?: (response: any) => void,\r\n    onError?: (error: Error, status: number) => void\r\n}\r\n\r\ndeclare type FetchRequestType = {\r\n    uri: string,\r\n    data?: Record<any, any> | FormData | null,\r\n    submitter?: HTMLElement | null,\r\n    options?: FetchRequestOptions,\r\n    callbacks?: FetchRequestCallbacks\r\n}\r\n/**\r\n  * This class is a utility class designed to make it easier to send Fetch requests in a web application.\r\n  * It offers a simple interface for making HTTP requests\r\n  * and manage actions before and after sending the request.\r\n  */\r\nexport default class FetchRequest{\r\n    private options: FetchRequestType;\r\n    private response: any;\r\n    constructor(options: FetchRequestType) {\r\n        this.options = options;\r\n        this.attachSubmitterEvent();\r\n    }\r\n    private attachSubmitterEvent() {\r\n        this.options.submitter ? this.options.submitter.addEventListener('click', this.submitForm) : this.submitForm();  \r\n    }\r\n    private submitForm = async () => {\r\n        try{\r\n            if(this.options.callbacks && this.options.callbacks.onPreFetch){await this.preFetch();}\r\n            await this.run();\r\n            if(this.options.callbacks && this.options.callbacks.onPostFetch){await this.postFetch();}\r\n        }catch(error){\r\n            this.handleError(error, undefined,'Error executing query : ');\r\n        }\r\n    }\r\n    private run = async () =>{\r\n        let response:Response|null = null;\r\n        try {\r\n            const { uri, data, options } = this.options;\r\n            if (!uri) throw new Error(\"URI is required\");\r\n            let finalUri = uri;\r\n            let body = null;\r\n            const method = options?.method || 'GET';\r\n            if (method === \"GET\" && data) {\r\n                finalUri = this.buildGetRequestUrl(uri, data);\r\n            } \r\n            else if (method !== \"GET\" && method !== \"HEAD\" && method !== \"OPTIONS\" && data) {\r\n                body = this.prepareRequestBody(data);\r\n            }\r\n            const fetchOptions: RequestInit = {\r\n                method: method,\r\n                headers: options?.headers,\r\n                body: body,\r\n                credentials: options?.credentials,\r\n                mode: options?.mode,\r\n                cache: options?.cache,\r\n                integrity: options?.integrity,\r\n            };\r\n            if (method === \"GET\" || method === \"HEAD\" || method === \"OPTIONS\") {\r\n                delete fetchOptions.body;\r\n            }\r\n            response = await fetch(finalUri, fetchOptions);\r\n            if(options){\r\n                const responseType = options.responseType;\r\n                if(responseType){\r\n                    this.response = responseType === \"text\" ? await response.text() : await response.json();\r\n                }\r\n            }\r\n\r\n            if (this.options.callbacks?.onSuccess && response.ok) {\r\n                this.options.callbacks.onSuccess(this.response);\r\n            }\r\n            \r\n        } catch (error) {\r\n            this.handleError(error, response ? response.status : 0);\r\n        }\r\n    }\r\n    private preFetch = async () =>{\r\n        if(typeof this.options.callbacks.onPreFetch === 'function') {\r\n            let data = await this.options.callbacks.onPreFetch(this.options.data);\r\n            if(data){\r\n                this.options.data = data.hasOwnProperty('data') ? data.data : data;\r\n            }\r\n        }\r\n    }\r\n    private postFetch = async () =>{\r\n        if(this.options.submitter instanceof HTMLButtonElement)\r\n        {this.options.submitter.removeAttribute('disabled');}\r\n        return this.options.callbacks.onPostFetch ? this.options.callbacks.onPostFetch() : undefined;\r\n    }\r\n    private buildGetRequestUrl(uri: string, data: Record<any, any> | FormData): string {\r\n        const url = new URL(uri, window.location.origin);\r\n        const params = new URLSearchParams();\r\n        if (data instanceof FormData) {\r\n            for (let [key, value] of data.entries()) {\r\n                if (typeof value === 'string') {\r\n                    params.append(key, value);\r\n                }\r\n            }\r\n        } else {\r\n            for (let [key, value] of Object.entries(data)) {\r\n                params.append(key, value);\r\n            }\r\n        }\r\n        url.search = params.toString();\r\n        return url.toString();\r\n    }\r\n    private prepareRequestBody(data: Record<any, any> | FormData): FormData | Record<any, any> | string {\r\n        if (this.options.options?.acceptDataFormat === \"form-data\" && !(data instanceof FormData)) {\r\n            return this.convertObjectToFormData(data);\r\n        } else if (this.options.options?.acceptDataFormat === \"classic-object\") {\r\n            return JSON.stringify(data);\r\n        }\r\n        return data;\r\n    }\r\n    private convertObjectToFormData(data: Record<any, any>): FormData {\r\n        const formData = new FormData();\r\n        Object.entries(data).forEach(([key, value]) => formData.append(key, value));\r\n        return formData;\r\n    }\r\n    private handleError(error: any, status?: number, message:string='Fetch Request Error: ') {\r\n        console.error(message, error);\r\n        if (this.options.callbacks?.onError) {\r\n            this.options.callbacks.onError(error, status || 0);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_defineProperty","obj","_toPrimitive","String","toPrimitive","Number","FetchRequest","options","_this","_callee","_callee$","_context","callbacks","onPreFetch","preFetch","run","onPostFetch","postFetch","t0","handleError","_callee2","response","_this$options$callbac","_this$options","uri","_data","finalUri","body","fetchOptions","responseType","_callee2$","_context2","data","buildGetRequestUrl","prepareRequestBody","headers","credentials","mode","cache","integrity","fetch","text","json","onSuccess","ok","t1","status","_callee3","_data2","_callee3$","_context3","_callee4","_callee4$","_context4","submitter","HTMLButtonElement","removeAttribute","attachSubmitterEvent","addEventListener","submitForm","url","URL","window","location","origin","params","URLSearchParams","FormData","_iterator","_createForOfIteratorHelper","entries","_step","_step$value","_slicedToArray","append","_i","_Object$entries","_Object$entries$_i","search","toString","_this$options$options","_this$options$options2","acceptDataFormat","convertObjectToFormData","JSON","stringify","formData","_ref5","_ref6","_this$options$callbac2","message","console","onError","default"],"sourceRoot":""}
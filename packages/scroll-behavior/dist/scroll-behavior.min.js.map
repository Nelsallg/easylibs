{"version":3,"file":"scroll-behavior.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,kBAAmB,GAAIH,GACJ,iBAAZC,QACdA,QAAQ,mBAAqBD,IAE7BD,EAAK,mBAAqBC,GAC3B,CATD,CASGK,MAAM,I,iGCTT,MAAqBC,EAWV,UAAOC,GACVC,OAAOC,iBAAiB,YAAaC,KAAKC,iBAC1CH,OAAOC,iBAAiB,QAASC,KAAKE,aACtCJ,OAAOC,iBAAiB,UAAWC,KAAKG,cAC5C,CAEO,qBAAOC,CAAeC,EAAsBC,EAAqB,EAACC,EAAaC,KAAd,GAAqCC,G,QACzG,IAAIC,EAAU,EACVC,EAAU,EAed,OAdIF,IACJC,EAAkB,QAAR,EAAAD,EAAOG,SAAC,QAAI,EACtBD,EAAkB,QAAR,EAAAF,EAAOI,SAAC,QAAI,GAGtBR,EAAQN,iBAAiB,UAAU,SAAUe,GAC7C,OAAId,KAAKe,UAAY,GAAMf,KAAKe,UAAYf,KAAKgB,aAAgBL,GAAWX,KAAKiB,aACtEX,GAAS,EAAM,KAEtBN,KAAKkB,WAAa,GAAMlB,KAAKkB,WAAalB,KAAKmB,YAAeT,GAAWV,KAAKoB,YACvEd,GAAS,EAAM,UAD1B,CAGA,IAEOA,GAAS,EACpB,CAOQ,sBAAOL,CAAgBoB,GACR,IAAjBA,EAAMC,SACRtB,KAAKuB,qBAAsB,EAC3BvB,KAAKwB,cAAgBH,EAAMI,QAC3BzB,KAAK0B,iBAAmB5B,OAAO6B,QAC/BC,SAAS7B,iBAAiB,YAAaC,KAAK6B,iBAC5CD,SAAS7B,iBAAiB,UAAWC,KAAK8B,eAE9C,CAMQ,sBAAOD,CAAgBR,GAC7B,GAAIrB,KAAKuB,oBAAqB,CAC5B,MAAMQ,EAASV,EAAMI,QAAUzB,KAAKwB,cACpC1B,OAAOkC,SAAS,EAAGhC,KAAK0B,iBAAmBK,EAC7C,CACF,CAMQ,oBAAOD,CAAcT,GACN,IAAjBA,EAAMC,SACRtB,KAAKuB,qBAAsB,EAC3BK,SAASK,oBAAoB,YAAajC,KAAK6B,iBAC/CD,SAASK,oBAAoB,UAAWjC,KAAK8B,eAEjD,CAQQ,kBAAO5B,CAAYmB,GACrBrB,KAAKuB,0BACOW,IAAVb,IACEA,EAAMU,OAAS,EACjBjC,OAAOqC,SAAS,EAAG,KACVd,EAAMU,OAAS,GACxBjC,OAAOqC,SAAS,GAAI,KAI5B,CASQ,oBAAOhC,CAAckB,QACba,IAAVb,GACErB,KAAKuB,qBAAqC,cAAdF,EAAMe,KACpCtC,OAAOqC,SAAS,EAAG,IAGzB,EAzGe,EAAAX,cAAgB,EAChB,EAAAE,iBAAmB,EACnB,EAAAH,qBAAsB,E,UAHpB3B,C","sources":["webpack://@easylibs/scroll-behavior/webpack/universalModuleDefinition","webpack://@easylibs/scroll-behavior/./src/scroll-behavior.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"scroll-behavior\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scroll-behavior\"] = factory();\n\telse\n\t\troot[\"scroll-behavior\"] = factory();\n})(self, () => {\nreturn ","export default class ScrollBehavior {\r\n    private static initialMouseY = 0;\r\n    private static initialScrollTop = 0;\r\n    private static isRightClickPressed = false;\r\n    /**\r\n    * Cette fonction active les fonctionnalités de défilement et de glissement sur la page. \r\n    * Elle permet à l'utilisateur d'interagir avec la page en utilisant la souris, \r\n    * la molette de la souris et le clavier pour faire défiler le contenu. \r\n    * En appelant cette fonction, \r\n    * l'utilisateur peut profiter d'une expérience de navigation plus interactive et personnalisée.\r\n    */\r\n    public static run(): void {\r\n        window.addEventListener('mousedown', this.handleMouseDown);\r\n        window.addEventListener('wheel', this.handleWheel);\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    public static isEndScrolling(element: HTMLElement, callback: Function = (is: boolean, scroll: string) => {}, margin?: { x: number, y: number }): boolean {\r\n        let marginX = 0;\r\n        let marginY = 0;\r\n        if (margin) {\r\n        marginX = margin.x ?? 0;\r\n        marginY = margin.y ?? 0;\r\n        }\r\n\r\n        element.addEventListener('scroll', function (e) {\r\n        if (this.scrollTop > 0 && (this.scrollTop + this.clientHeight) + marginY >= this.scrollHeight) {\r\n            return callback(true, 'y');\r\n        }\r\n        if (this.scrollLeft > 0 && (this.scrollLeft + this.clientWidth) + marginX >= this.scrollWidth) {\r\n            return callback(true, 'x');\r\n        }\r\n        });\r\n\r\n        return callback(false);\r\n    }\r\n    /**\r\n     * Gère l'événement de clic de souris enfoncé (mousedown) pour activer le défilement personnalisé.\r\n     * Enregistre la position initiale de la souris et active \r\n     * les écouteurs d'événements de mouvement de souris et de relâchement de clic.\r\n     * @param event - L'événement de clic de souris enfoncé.\r\n     */\r\n    private static handleMouseDown(event: MouseEvent): void {\r\n      if (event.button === 2) {\r\n        this.isRightClickPressed = true;\r\n        this.initialMouseY = event.clientY;\r\n        this.initialScrollTop = window.scrollY;\r\n        document.addEventListener('mousemove', this.handleMouseMove);\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n      }\r\n    }\r\n    /**\r\n     * Gère l'événement de mouvement de souris (mousemove) \r\n     * pour effectuer le défilement en fonction du mouvement de la souris.\r\n     * @param event - L'événement de mouvement de souris.\r\n     */\r\n    private static handleMouseMove(event: MouseEvent): void {\r\n      if (this.isRightClickPressed) {\r\n        const deltaY = event.clientY - this.initialMouseY;\r\n        window.scrollTo(0, this.initialScrollTop - deltaY);\r\n      }\r\n    }\r\n    /**\r\n     * Gère l'événement de relâchement de clic de souris (mouseup) pour désactiver le défilement personnalisé.\r\n     * Nettoie les écouteurs d'événements de mouvement de souris et de relâchement de clic.\r\n     * @param event - L'événement de relâchement de clic de souris.\r\n     */\r\n    private static handleMouseUp(event: MouseEvent): void {\r\n      if (event.button === 2) {\r\n        this.isRightClickPressed = false;\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n      }\r\n    }\r\n    /**\r\n     * Cette fonction gère les événements de défilement de la molette de la souris sur la page. \r\n     * Lorsque l'utilisateur fait tourner la molette de la souris vers le haut ou vers le bas, \r\n     * cette fonction permet de faire défiler la page dans la direction correspondante. \r\n     * Cela offre une alternative pratique à la barre de défilement traditionnelle pour naviguer sur la page.\r\n     * @param event\r\n     */\r\n    private static handleWheel(event?: WheelEvent): void {\r\n      if (this.isRightClickPressed) {\r\n        if (event !== undefined) {\r\n          if (event.deltaY > 0) {\r\n            window.scrollBy(0, 100);\r\n          } else if (event.deltaY < 0) {\r\n            window.scrollBy(0, -100);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Cette fonction gère les événements de pression d'une touche du clavier. \r\n     * Lorsque l'utilisateur enfonce la touche \"ArrowDown\" (flèche vers le bas), \r\n     * cette fonction permet de faire défiler la page vers le bas. \r\n     * Elle offre une méthode simple pour naviguer rapidement \r\n     * à travers le contenu de la page en utilisant uniquement le clavier.\r\n     * @param event \r\n     */\r\n    private static handleKeyDown(event?: KeyboardEvent): void {\r\n      if (event !== undefined) {\r\n        if (this.isRightClickPressed && event.key === 'ArrowDown') {\r\n          window.scrollBy(0, 100);\r\n        }\r\n      }\r\n    }\r\n}\r\n  "],"names":["root","factory","exports","module","define","amd","self","ScrollBehavior","run","window","addEventListener","this","handleMouseDown","handleWheel","handleKeyDown","isEndScrolling","element","callback","is","scroll","margin","marginX","marginY","x","y","e","scrollTop","clientHeight","scrollHeight","scrollLeft","clientWidth","scrollWidth","event","button","isRightClickPressed","initialMouseY","clientY","initialScrollTop","scrollY","document","handleMouseMove","handleMouseUp","deltaY","scrollTo","removeEventListener","undefined","scrollBy","key"],"sourceRoot":""}
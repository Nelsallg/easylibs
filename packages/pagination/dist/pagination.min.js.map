{"version":3,"file":"pagination.min.js","mappings":"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","sources":["webpack://@easylibs/pagination/webpack/universalModuleDefinition","webpack://@easylibs/pagination/./src/pagination.ts","webpack://@easylibs/pagination/@easylibs/fetch-request/webpack/universalModuleDefinition","webpack://@easylibs/pagination/@easylibs/fetch-request/webpack/startup","webpack://@easylibs/pagination/@easylibs/fetch-request/src/fetch-request.ts","webpack://@easylibs/pagination/@easylibs/scroll-behavior/webpack/universalModuleDefinition","webpack://@easylibs/pagination/@easylibs/scroll-behavior/src/scroll-behavior.ts","webpack://@easylibs/pagination/@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/pagination/@easylibs/utils/src/utils.ts","webpack://@easylibs/pagination/webpack/bootstrap","webpack://@easylibs/pagination/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pagination\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pagination\"] = factory();\n\telse\n\t\troot[\"pagination\"] = factory();\n})(self, () => {\nreturn ","import FetchRequest from \"@easylibs/fetch-request\";\r\nimport Utils from \"@easylibs/utils\";\r\nimport ScrollBehavior from \"@easylibs/scroll-behavior\";\r\n\r\ninterface PaginatorOptions {\r\n    parentElement: HTMLElement | string;\r\n    skeletonLoading: string;\r\n    callback: (response: any, element: HTMLElement) => void;\r\n    csrfToken?: boolean;\r\n    margin?: { x: number; y: number };\r\n}\r\n\r\nexport function paginator(options: PaginatorOptions): void {\r\n    const {\r\n        parentElement,\r\n        skeletonLoading,\r\n        callback,\r\n        csrfToken = false,\r\n        margin,\r\n    } = options;\r\n\r\n    const element = Utils.$$(parentElement) as HTMLElement;\r\n    let lastRequestSuccessfully = true;\r\n\r\n    ScrollBehavior.isEndScrolling(element, (is: boolean, scroll: string) => {\r\n        if (element && is) {\r\n            const nextPageNumber = element.dataset.nextPageNumber;\r\n            const uri = element.dataset.uri as string;\r\n\r\n            if (\r\n                nextPageNumber &&\r\n                nextPageNumber !== \"null\" &&\r\n                lastRequestSuccessfully\r\n            ) {\r\n                const onPreFetch = async function () {\r\n                    if (scroll === \"y\") {\r\n                        let cartProcess = cardProcess();\r\n                        let skeletonLoadingContainer = null;\r\n                        let time = 3;\r\n\r\n                        if (\r\n                            cartProcess.length !== undefined &&\r\n                            cartProcess.length < 3\r\n                        ) {\r\n                            skeletonLoadingContainer = cartProcess.element;\r\n                            time = 3 - cartProcess.length;\r\n                        } else {\r\n                            skeletonLoadingContainer = cardProcess();\r\n                        }\r\n\r\n                        if (skeletonLoadingContainer) {\r\n                            if (skeletonLoadingContainer instanceof Element) {\r\n                                for (let i = 0; i < time; i++) {\r\n                                    skeletonLoadingContainer.appendChild(\r\n                                        Utils.textToHTMLElement(skeletonLoading) as Node\r\n                                    );\r\n                                }\r\n                            } else if (\r\n                                typeof skeletonLoadingContainer === \"object\"\r\n                            ) {\r\n                                for (let i = 0; i < time; i++) {\r\n                                    skeletonLoadingContainer.element.appendChild(\r\n                                        Utils.textToHTMLElement(skeletonLoading) as Node\r\n                                    );\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (scroll === \"x\") {\r\n                        element.appendChild(\r\n                            Utils.textToHTMLElement(skeletonLoading) as Node\r\n                        );\r\n                    }\r\n\r\n                    return (lastRequestSuccessfully = false);\r\n                };\r\n\r\n                const onPostFetch = function () {\r\n                    const { response } = request;\r\n                    return response;\r\n                };\r\n\r\n                const request = new FetchRequest({\r\n                    uri,\r\n                    data: {\r\n                        next_page_number: nextPageNumber,\r\n                        _csrf_token: csrfToken,\r\n                    },\r\n                    onPreFetch,\r\n                    onPostFetch,\r\n                    options: {\r\n                        method: \"POST\",\r\n                        acceptDataFormat: \"form-data\",\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    }, margin);\r\n}\r\n\r\nfunction getLastRowCardChild() {\r\n    const parent = document.querySelector(\r\n        \".product_card_container\"\r\n    ) as HTMLElement;\r\n    return parent.querySelector(\".row_card_parent:last-child\");\r\n}\r\n\r\nexport function cardProcess() {\r\n    const lastChild = getLastRowCardChild();\r\n\r\n    if (!lastChild) {\r\n        return { element: createRowCardParent() };\r\n    }\r\n\r\n    const rows = lastChild.querySelectorAll(\".row_card_child\");\r\n\r\n    if (rows.length < 3) {\r\n        return { element: lastChild, length: rows.length };\r\n    }\r\n\r\n    return { element: createRowCardParent() };\r\n}\r\n\r\nfunction createRowCardParent() {\r\n    const div = document.createElement(\"div\");\r\n    div.className = \"row row_card_parent\";\r\n    document.querySelector(\".product_card_container\")?.appendChild(div);\r\n    return div;\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fetch-request\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fetch-request\"] = factory();\n\telse\n\t\troot[\"fetch-request\"] = factory();\n})(self, () => {\nreturn ","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/fetch-request.ts\"](0, __webpack_exports__);\n","declare type FetchRequestType = {\r\n    uri: string,\r\n    data?: Object|FormData|null,\r\n    submiter?: HTMLElement|null,\r\n    options?: {\r\n        method?: 'GET' | 'POST',\r\n        headers?: Object,\r\n        body?: any,\r\n        credentials?: \"omit\" | \"same-origin\",\r\n        mode?: \"cors\" | \"no-cors\" | \"same-origin\",\r\n        cache?: \"default\" | \"reload\" | \"no-cache\" | \"force-cache\" | \"only-if-cached\",\r\n        timeOut?: number,\r\n        fetchOptions?: RequestInit,\r\n        isBinaryFileDownload?: boolean,\r\n        contentType?: string,\r\n        acceptDataFormat?: \"form-data\" | \"classic-object\" | \"array\",\r\n    }\r\n    onPostFetch?: (response?:any) => any,\r\n    onPreFetch?: (that?:any) => any,\r\n    onSuccess?: (response:any) => any,\r\n    onError?: (error: unknown, status:number) => any\r\n}\r\n/**\r\n * Cette classe est une classe utilitaire conçue pour faciliter l'envoi de requêtes Fetch dans une application web. \r\n * Elle offre une interface simple pour effectuer des requêtes HTTP \r\n * et gérer les actions avant et après l'envoi de la requête.\r\n */\r\nexport default class FetchRequest{\r\n    private options: FetchRequestType;\r\n    private _response: any;\r\n    constructor(options: FetchRequestType) {\r\n        this.options = options;\r\n        if(options.submiter){\r\n            options.submiter.addEventListener('click', this.submitForm);\r\n        }else{\r\n            this.submitForm()\r\n        }\r\n    }\r\n    private fetchData = async () => {\r\n        try {\r\n            if(!this.options){\r\n                throw new Error(`Missing Options for the request`)\r\n            }\r\n            if(!this.options.uri){\r\n                throw new Error(\"URI is required\");\r\n            }\r\n            if(!this.options.options || !this.options.options.method){\r\n                throw new Error(\"The calling method is required\");\r\n            }\r\n            const response = await fetch(this.options.uri, {\r\n                method: this.options.options.method ,\r\n                body: this._formData,\r\n                headers: {\r\n                    'X-Requested-With': 'XMLHttpRequest'\r\n                }\r\n            });\r\n            const dataResponse = await response.json();\r\n            this._response = dataResponse;\r\n            if(this.options.onPostFetch)\r\n            {this.options.onPostFetch(dataResponse);}\r\n            if(this.options.onSuccess && response.status === 200){\r\n                return this.options.onSuccess(dataResponse);\r\n            }\r\n            \r\n        } catch (error) {\r\n            if(this.options.onError && this._response.status !== 200){\r\n                return this.options.onError(error, this._response.status);\r\n            }\r\n            console.error(error);\r\n        }\r\n    }\r\n    private preFetch = async () => {\r\n        if(typeof this.options.onPreFetch === 'function') {\r\n            let data = await this.options.onPreFetch(this.options.data);\r\n            if(data){\r\n                this.options.data = data.data;\r\n            }\r\n        }\r\n    }\r\n    private postFetch = async () => {\r\n        if(this.options.submiter instanceof HTMLButtonElement)\r\n        {this.options.submiter.removeAttribute('disabled');}\r\n        return this.options.onPostFetch ? this.options.onPostFetch() : undefined;\r\n    }\r\n    private submitForm = async () => {\r\n        try{\r\n            if(this.options.onPreFetch){await this.preFetch();}\r\n            await this.fetchData();\r\n            if(this.options.onPostFetch){await this.postFetch();}\r\n        }catch(error){\r\n            console.error('Error executing query : ', error);\r\n        }\r\n    };\r\n    private createFormData = (data: object) => {\r\n        const formData = new FormData();\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value ?? \"\");\r\n        }\r\n        return formData;\r\n    }\r\n    private createJSON = (data: any[]|Object) => {\r\n        return JSON.stringify({ data: data });\r\n    }\r\n    private get _formData() {\r\n        const isFormData = (data: any): data is FormData => data instanceof FormData;\r\n        const isArray = (data: any): data is any[] => Array.isArray(data);\r\n        const isObject = (data: any): data is object => typeof data === 'object' && Object.keys(data).length > 0;\r\n\r\n        if(this.options.options){\r\n            const acceptDataFormat = this.options.options.acceptDataFormat;\r\n            if(acceptDataFormat){\r\n                switch (acceptDataFormat) {\r\n                    case \"form-data\":\r\n                        if (isFormData(this.options.data)) {\r\n                            return this.options.data;\r\n                        } else if (isArray(this.options.data)) {\r\n                            return this.createJSON(this.options.data);\r\n                        } else if (isObject(this.options.data)) {\r\n                            return this.createFormData(this.options.data);\r\n                        }\r\n                        break;\r\n                    case \"classic-object\":\r\n                        if (isFormData(this.options.data) || isArray(this.options.data) || isObject(this.options.data)) {\r\n                            return this.createJSON(isArray(this.options.data) ? this.options.data : this.options.data);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw Error(`The ${acceptDataFormat} format is not supported`);\r\n                }\r\n            }\r\n            }\r\n    }\r\n    public get response():any\r\n    {\r\n        return this._response;\r\n    }\r\n}\r\n\r\n\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"scroll-behavior\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scroll-behavior\"] = factory();\n\telse\n\t\troot[\"scroll-behavior\"] = factory();\n})(self, () => {\nreturn ","export default class ScrollBehavior {\r\n    private static initialMouseY = 0;\r\n    private static initialScrollTop = 0;\r\n    private static isRightClickPressed = false;\r\n    /**\r\n    * Cette fonction active les fonctionnalités de défilement et de glissement sur la page. \r\n    * Elle permet à l'utilisateur d'interagir avec la page en utilisant la souris, \r\n    * la molette de la souris et le clavier pour faire défiler le contenu. \r\n    * En appelant cette fonction, \r\n    * l'utilisateur peut profiter d'une expérience de navigation plus interactive et personnalisée.\r\n    */\r\n    public static run(): void {\r\n        window.addEventListener('mousedown', this.handleMouseDown);\r\n        window.addEventListener('wheel', this.handleWheel);\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    public static isEndScrolling(element: HTMLElement, callback: Function = (is: boolean, scroll: string) => {}, margin?: { x: number, y: number }): boolean {\r\n        let marginX = 0;\r\n        let marginY = 0;\r\n        if (margin) {\r\n        marginX = margin.x ?? 0;\r\n        marginY = margin.y ?? 0;\r\n        }\r\n\r\n        element.addEventListener('scroll', function (e) {\r\n        if (this.scrollTop > 0 && (this.scrollTop + this.clientHeight) + marginY >= this.scrollHeight) {\r\n            return callback(true, 'y');\r\n        }\r\n        if (this.scrollLeft > 0 && (this.scrollLeft + this.clientWidth) + marginX >= this.scrollWidth) {\r\n            return callback(true, 'x');\r\n        }\r\n        });\r\n\r\n        return callback(false);\r\n    }\r\n    /**\r\n     * Gère l'événement de clic de souris enfoncé (mousedown) pour activer le défilement personnalisé.\r\n     * Enregistre la position initiale de la souris et active \r\n     * les écouteurs d'événements de mouvement de souris et de relâchement de clic.\r\n     * @param event - L'événement de clic de souris enfoncé.\r\n     */\r\n    private static handleMouseDown(event: MouseEvent): void {\r\n      if (event.button === 2) {\r\n        this.isRightClickPressed = true;\r\n        this.initialMouseY = event.clientY;\r\n        this.initialScrollTop = window.scrollY;\r\n        document.addEventListener('mousemove', this.handleMouseMove);\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n      }\r\n    }\r\n    /**\r\n     * Gère l'événement de mouvement de souris (mousemove) \r\n     * pour effectuer le défilement en fonction du mouvement de la souris.\r\n     * @param event - L'événement de mouvement de souris.\r\n     */\r\n    private static handleMouseMove(event: MouseEvent): void {\r\n      if (this.isRightClickPressed) {\r\n        const deltaY = event.clientY - this.initialMouseY;\r\n        window.scrollTo(0, this.initialScrollTop - deltaY);\r\n      }\r\n    }\r\n    /**\r\n     * Gère l'événement de relâchement de clic de souris (mouseup) pour désactiver le défilement personnalisé.\r\n     * Nettoie les écouteurs d'événements de mouvement de souris et de relâchement de clic.\r\n     * @param event - L'événement de relâchement de clic de souris.\r\n     */\r\n    private static handleMouseUp(event: MouseEvent): void {\r\n      if (event.button === 2) {\r\n        this.isRightClickPressed = false;\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n      }\r\n    }\r\n    /**\r\n     * Cette fonction gère les événements de défilement de la molette de la souris sur la page. \r\n     * Lorsque l'utilisateur fait tourner la molette de la souris vers le haut ou vers le bas, \r\n     * cette fonction permet de faire défiler la page dans la direction correspondante. \r\n     * Cela offre une alternative pratique à la barre de défilement traditionnelle pour naviguer sur la page.\r\n     * @param event\r\n     */\r\n    private static handleWheel(event?: WheelEvent): void {\r\n      if (this.isRightClickPressed) {\r\n        if (event !== undefined) {\r\n          if (event.deltaY > 0) {\r\n            window.scrollBy(0, 100);\r\n          } else if (event.deltaY < 0) {\r\n            window.scrollBy(0, -100);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Cette fonction gère les événements de pression d'une touche du clavier. \r\n     * Lorsque l'utilisateur enfonce la touche \"ArrowDown\" (flèche vers le bas), \r\n     * cette fonction permet de faire défiler la page vers le bas. \r\n     * Elle offre une méthode simple pour naviguer rapidement \r\n     * à travers le contenu de la page en utilisant uniquement le clavier.\r\n     * @param event \r\n     */\r\n    private static handleKeyDown(event?: KeyboardEvent): void {\r\n      if (event !== undefined) {\r\n        if (this.isRightClickPressed && event.key === 'ArrowDown') {\r\n          window.scrollBy(0, 100);\r\n        }\r\n      }\r\n    }\r\n}\r\n  ","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","declare type RegexType = 'email' | 'phone-number' | 'number' | 'strong-password' | 'url' | 'default-text' | 'fr-text' | 'en-text' | 'tr-text';\r\nexport default class Utils{\r\n    /**\r\n     * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n     * @param audioPath Le chemin de la source audio.\r\n     * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n     * @returns L'élément audio créé.\r\n     */\r\n    public static setAudio(audioPath:string, classname=null) {\r\n        const audio = document.createElement('audio');\r\n        if(classname != null){audio.classList.add(classname);}\r\n        const source = document.createElement('source');\r\n        source.src = this.resolvePath(audioPath);\r\n        source.type = \"audio/mpeg\";\r\n        audio.appendChild(source);\r\n        return audio;\r\n    }\r\n    public static textToHTMLElement(textHtml:string, targetName=\"div\", children:boolean = false):Element|HTMLCollection|null\r\n    {\r\n        const target = document.createElement(`${targetName}`);\r\n        target.innerHTML = textHtml;\r\n        if(true === children){return target.children;}\r\n        return target.firstElementChild\r\n    }\r\n    /**\r\n     * retourne un élément du dom\r\n     */\r\n    public static $$(element:Element|HTMLCollection|string){\r\n        if (element instanceof HTMLElement || element instanceof HTMLCollection) {\r\n            return element;\r\n        }else if(typeof element === 'string') {\r\n            const collection = document.querySelectorAll(`${element}`);\r\n            const el = document.querySelector(`${element}`);\r\n            if (collection !== null && collection.length>1) {\r\n                return collection;\r\n            }\r\n            if(el !== null){\r\n                return el; \r\n            }\r\n        }else {throw new Error(\"Type of element is not supported\");}\r\n    }\r\n    /**\r\n     * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n     * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n     * @param nodeList Un objet NodeList ou un élément HTML. \r\n     * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n     * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n     * @returns \r\n     */\r\n    public static processNodes(nodeList: any, callback = (node: any, index?:number) => {}){\r\n        if(nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n        return Array.from(nodeList).forEach((node,i) => {\r\n            callback(node,i);\r\n        });\r\n        }\r\n        if(null !== nodeList && undefined !== nodeList)\r\n        {return callback(nodeList);}\r\n    }\r\n    \r\n\r\n    /**\r\n     * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n     * @param type Le type d'expression régulière demandé.\r\n     * @returns L'expression régulière correspondante.\r\n     */\r\n    public static getRegexp(type: RegexType): RegExp {\r\n        switch (type) {\r\n            case 'email':\r\n            return new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i);\r\n            case 'phone-number':\r\n            return new RegExp(/^(0|\\\\+[1-9]{1,3})[0-9 ]+$/);\r\n            case 'number':\r\n            return new RegExp(/^[0-9]+$/);\r\n            case 'strong-password':\r\n            return new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/);\r\n            case 'url':\r\n            return new RegExp(/^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?$/);\r\n            case 'default-text':\r\n            return new RegExp(/^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/);\r\n            case 'fr-text':\r\n            return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n            case 'en-text':\r\n            return  new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n            case 'tr-text':\r\n            return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n            default:\r\n            throw new Error('Type d\\'expression régulière non pris en charge.');\r\n        }\r\n    }\r\n    /**\r\n     * Résout le chemin d'une ressource en fonction de l'environnement d'exécution.\r\n     * @param path Le chemin de la ressource.\r\n     * @returns Le chemin résolu de la ressource.\r\n     */\r\n    public static resolvePath(path:string){\r\n        const PROJECT_NAME = window.location.pathname.split(\"/\")[1];\r\n        const ORIGIN = window.location.origin;\r\n        const PORT = window.location.port;\r\n        const HOST = window.location.host;\r\n        let _stylesheetsoutdir_;\r\n\r\n        if (HOST == \"localhost\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${PROJECT_NAME}/${path}`;\r\n        } else if (HOST !== \"localhost\" && PORT !== \"\") {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        } else {\r\n            return _stylesheetsoutdir_ = ORIGIN + `/${path}`;\r\n        }\r\n    }\r\n    /**\r\n     * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement. \r\n     * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n     * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n     * @returns Un élément HTML représentant une zone interdite.\r\n     */\r\n    private static forbiddener(tag:string='td', backgroundColor?:string){\r\n        let forbiddenTag = document.createElement(tag)\r\n        forbiddenTag.setAttribute('class','forbidden')\r\n        const style = {\r\n            position:'absolute',\r\n            width: '100%',\r\n            height:'100%',\r\n            opacity: '.7',\r\n            zIndex: '10',\r\n            backgroundColor: backgroundColor ? backgroundColor : '#FFFFFF',\r\n        }\r\n        Object.assign(forbiddenTag.style, style)\r\n        return forbiddenTag as HTMLElement;\r\n    }\r\n    /**\r\n     * Réduit une chaîne de texte.\r\n     * @param text La chaîne de texte à réduire.\r\n     * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n     * @returns La chaîne de texte réduite.\r\n     */\r\n    public static reduceText(text: string, maxLength: number = 14): string {\r\n        text = typeof text === \"string\" ? text.trim() : \"\";\r\n        if (text.length > maxLength) {\r\n          return `${text.substring(0, maxLength)}...`;\r\n        }\r\n        return text;\r\n    }\r\n    /**\r\n     * Changes the input text type to a number type and performs additional processing\r\n     * based on the specified parameters.\r\n     * \r\n     * @param attr - The CSS selector for the input elements to be processed.\r\n     * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n     * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n     * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n     */\r\n    public static changeInputTextTypeToNumberType(attr: string,limit?: number | null,priceType: boolean = false,decimal?: number) {\r\n        this.processNodes(this.$$(attr), function (element) {\r\n          let input = element as HTMLInputElement;\r\n          if (input) {\r\n            input.addEventListener(\"input\", function () {\r\n              const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n              if (decimal) {\r\n                const getValue = input.value.replace(regExp, \"\");\r\n                input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n              } else {\r\n                input.value = input.value.replace(regExp, \"\");\r\n              }\r\n              if (limit && parseInt(input.value) > limit) {\r\n                input.value = `${limit}`;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }\r\n    /**\r\n     * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n     * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n     * and the background color for the forbidden tag.\r\n     * \r\n     * @param tag - The tag of the element to be disabled (default: \"td\").\r\n     * @param target - The target element to be disabled (default: undefined).\r\n     * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n     * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n     */\r\n    public static disablor(tag = \"td\",target?: HTMLElement,trigger?: HTMLElement,backgroundColor?: string) {\r\n        const buttons = document.querySelectorAll(\r\n        \"[disablor],[self-disablor]\"\r\n        );\r\n        try {\r\n        if (!trigger && !buttons) {\r\n            throw new Error(\r\n            \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n        }\r\n        this.processNodes(buttons, (button: HTMLElement) => {\r\n            button.addEventListener(\"click\", () => {\r\n            const self = button.hasAttribute(\"self-disablor\");\r\n            let item = self ? button : (button.closest(\"[disablor]\") as HTMLElement);\r\n    \r\n            if (!target && !item) {\r\n                throw new Error(\r\n                \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n                );\r\n            }\r\n            if (item) {\r\n                item.style.position = \"relative\";\r\n                item.insertBefore(this.forbiddener(tag, backgroundColor), item.firstChild);\r\n                if (item instanceof HTMLButtonElement) {\r\n                item.setAttribute(\"disabled\", \"true\");\r\n                }\r\n            }\r\n            });\r\n        });\r\n        } catch (error) {\r\n            console.error(\"Une erreur s'est produit: \", error);\r\n        }\r\n    }\r\n    /**\r\n     * Adds an asterisk indicator to labels associated with required form fields.\r\n     * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n     * of the 'required-field' attribute. The function utilizes the processNodes method\r\n     * to iterate through the matched labels and append the asterisk.\r\n     */\r\n    public static setAsteriskToRequiredField() {\r\n        const asterisk = `<svg class=\"required-svg\">\r\n        <use xlink:href=\"../asset/icon.svg#asterisk\"></use>\r\n        </svg>`;\r\n        const labels = document.querySelectorAll(\"label[required-field]\");\r\n        if (labels) {\r\n            this.processNodes(labels, (node: HTMLLabelElement) => {\r\n                const rang = document.createRange();\r\n                const fragment = rang.createContextualFragment(asterisk);\r\n                node.appendChild(fragment);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * This method checks if the object contains a key with the given substring.\r\n     * @param object The object to be searched.\r\n     * @param substring The substring to search for.\r\n     * @param getKey An optional parameter to determine the type of return value.\r\n     *               If true, the method will return the key as a string.\r\n     *               If false or not provided, the method will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static hasKeyWithNameSubstring(object: any,substring: string,getKey?: boolean) {\r\n        for (let key in object) {\r\n          if (key.includes(substring)) {\r\n            if (undefined === getKey || false === getKey) {\r\n              return object[key];\r\n            }\r\n            if (true === getKey) {\r\n              return key;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * This method searches for an object's property by its key or short key.\r\n     * @param object The object to be searched.\r\n     * @param keyOrShortKey The key or short key to search for.\r\n     * @param key An optional parameter to determine the type of return value.\r\n     *            If true, the function will return the key as a string.\r\n     *            If false or not provided, the function will return the value corresponding to the key.\r\n     * @returns The value or key of the first matching property if found, otherwise false.\r\n     */\r\n    public static findObjectDataByKeyName(object: any,keyOrShorKey: string,key?: boolean) {\r\n        Object.keys(object).forEach((key) => {\r\n          if (key.includes(keyOrShorKey)) {\r\n            return object[key];\r\n          }\r\n        });\r\n        return false;\r\n    }\r\n\r\n    public static findChar(string: string, limit: number, returnBool:boolean = false) {\r\n        for (let i = 0; i <= limit; i++) {\r\n          const index = string.indexOf(i.toString());\r\n          if (index !== -1) {\r\n            return returnBool ? true : i.toString();\r\n          }\r\n        }\r\n        return returnBool ? false : null;\r\n      }\r\n      \r\n    public static findComputedStyle(\r\n        element: HTMLElement,\r\n        property: string | Array<string>\r\n      ) {\r\n        const styles = window.getComputedStyle(element);\r\n        const propertiesObject: any = {};\r\n        try {\r\n          if (!element) {\r\n            throw new Error(\"Element not found\");\r\n          }\r\n          if (!property) {\r\n            throw new Error(\"Property is required\");\r\n          }\r\n          if (Array.isArray(property) && property.length > 0) {\r\n            property.forEach((props) => {\r\n              propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n            });\r\n            return propertiesObject;\r\n          }\r\n          if (typeof property === \"string\") {\r\n            return styles.getPropertyValue(`${property}`);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n    /**\r\n     * A function to escape special characters in a string using the DOM API.\r\n     * \r\n     * @param str - The input string to be escaped.\r\n     * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n     */\r\n    public static escape(str?: string): string {\r\n        if (!str) {\r\n          return \"\";\r\n        }\r\n        const div = document.createElement(\"div\");\r\n        div.appendChild(document.createTextNode(str));\r\n        return div.innerHTML;\r\n    }\r\n    /**\r\n     * This function takes an HTMLElement and a target string.\r\n     * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n     * If no such element is found, it returns null.\r\n     * @param referent - The starting point of the search.\r\n     * @param target - The CSS selector used to find the desired element.\r\n     * @returns The first Element with a matching target, or null if no such element is found.\r\n     */\r\n    public static findHTMLElementBy(referent: HTMLElement,target: string): Element | null {\r\n        let currentElement = referent as Element | null;\r\n        if (currentElement) {\r\n          while ((currentElement = currentElement.previousElementSibling)) {\r\n            const charCounterSpan = currentElement.querySelector(target);\r\n            if (charCounterSpan) {\r\n              return charCounterSpan;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n     * If no attributes are provided, it returns an empty string.\r\n     * @param attributes - An object containing HTML attributes.\r\n     * @returns A string representing the attributes.\r\n     */\r\n    public static formatHTMLAttributes(attributes: any) {\r\n        let attrs = \"\";\r\n        if (attributes) {\r\n          for (const [key, value] of Object.entries(attributes)) {\r\n            if (key) {\r\n              attrs += `${key}='${value}'`;\r\n            }\r\n          }\r\n        }\r\n        return attrs.trim();\r\n    }\r\n      \r\n  \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(216);\n"],"names":["root","factory","exports","module","define","amd","self","cardProcess","lastChild","document","querySelector","element","createRowCardParent","rows","querySelectorAll","length","div","createElement","className","appendChild","options","parentElement","skeletonLoading","callback","csrfToken","margin","$$","lastRequestSuccessfully","isEndScrolling","is","scroll","nextPageNumber","dataset","uri","onPreFetch","cartProcess","skeletonLoadingContainer","time","undefined","Element","i","textToHTMLElement","onPostFetch","response","request","data","next_page_number","_csrf_token","method","acceptDataFormat","__webpack_exports__","constructor","fetchData","__awaiter","this","Error","fetch","body","_formData","headers","dataResponse","json","_response","onSuccess","status","error","onError","console","preFetch","postFetch","submiter","HTMLButtonElement","removeAttribute","submitForm","createFormData","formData","FormData","key","value","Object","entries","append","createJSON","JSON","stringify","addEventListener","isFormData","isArray","Array","isObject","keys","ScrollBehavior","run","window","handleMouseDown","handleWheel","handleKeyDown","marginX","marginY","_a","x","_b","y","e","scrollTop","clientHeight","scrollHeight","scrollLeft","clientWidth","scrollWidth","event","button","isRightClickPressed","initialMouseY","clientY","initialScrollTop","scrollY","handleMouseMove","handleMouseUp","deltaY","scrollTo","removeEventListener","scrollBy","setAudio","audioPath","classname","audio","classList","add","source","src","resolvePath","type","textHtml","targetName","children","target","innerHTML","firstElementChild","HTMLElement","HTMLCollection","collection","el","processNodes","nodeList","node","index","NodeList","from","forEach","getRegexp","RegExp","path","PROJECT_NAME","location","pathname","split","ORIGIN","origin","HOST","port","host","forbiddener","tag","backgroundColor","forbiddenTag","setAttribute","style","position","width","height","opacity","zIndex","assign","reduceText","text","maxLength","trim","substring","changeInputTextTypeToNumberType","attr","limit","priceType","decimal","input","regExp","getValue","replace","parseFloat","toFixed","parseInt","disablor","trigger","buttons","item","hasAttribute","closest","insertBefore","firstChild","setAsteriskToRequiredField","labels","fragment","createRange","createContextualFragment","hasKeyWithNameSubstring","object","getKey","includes","findObjectDataByKeyName","keyOrShorKey","findChar","string","returnBool","indexOf","toString","findComputedStyle","property","styles","getComputedStyle","propertiesObject","props","getPropertyValue","escape","str","createTextNode","findHTMLElementBy","referent","currentElement","previousElementSibling","charCounterSpan","formatHTMLAttributes","attributes","attrs","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}
{"version":3,"file":"iflash.js","mappings":"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","sources":["webpack://@easylibs/flash/webpack/universalModuleDefinition","webpack://@easylibs/flash/./src/scripts/icon.ts","webpack://@easylibs/flash/webpack/bootstrap","webpack://@easylibs/flash/./src/scripts/iflash.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"iflash\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"iflash\"] = factory();\n\telse\n\t\troot[\"iflash\"] = factory();\n})(self, () => {\nreturn ","/**\r\n * Renvoie une représentation SVG sous forme de chaîne de caractères.\r\n *\r\n * @param iconName - Le nom de l'icône à utiliser. Les noms valides sont : \"success\", \"error\", \"warning\", \"info\" et \"close-modal\".\r\n * @param iconPath - Le chemin vers le fichier SVG contenant les icônes.\r\n * @param attributes - Les attributs supplémentaires à ajouter à l'élément SVG (facultatif).\r\n * @returns La représentation SVG sous forme de chaîne de caractères.\r\n */\r\nexport function SVG(iconName?:string,iconPath?:string,attributes?:string):string {\r\n    let name = [\"success\",\"error\",\"warning\",\"info\",'close-modal'];\r\n    let content = \"\";\r\n    if(undefined !== iconName && name.indexOf(iconName)>=0){\r\n        content = `<svg ${attributes}><use xlink:href=\"${iconPath}#${iconName}\" id=\"flash-close-button\"></use></svg>`\r\n    }else{\r\n        content = iconName as string;\r\n    }\r\n    return content;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import Flash from \"../flash\";\r\nimport { SVG } from \"./icon\";\r\n\r\nexport declare type FlashOptions = {\r\n  message: string,\r\n  type: string,\r\n  flashbox?: HTMLElement,\r\n  container?: HTMLElement,\r\n  duration?: number | string,\r\n  title?: string,\r\n  icon?: string,\r\n  closeButton?: string | boolean\r\n};\r\n\r\nexport interface FlashInterface {\r\n  addFlash(params:FlashOptions): Flash;\r\n  flashHTMLModel(params:FlashOptions): flashHTMLModel | Node;\r\n}\r\n\r\nexport class flashHTMLModel {\r\n  public static title: string | boolean;\r\n  public static icon: string | boolean;\r\n  public static message: string;\r\n  public static type?: string;\r\n  [x: string]: any;\r\n  static closeButton: string | boolean = true;\r\n  protected message:string;\r\n  protected title:string|boolean;\r\n  protected icon:string|boolean;\r\n  protected type?:string;\r\n  protected static hasHeader:boolean = true;\r\n  protected static hasFlashIcon:boolean = false;\r\n  \r\n  constructor(message:string,title:string|boolean,icon:string|boolean,type?:string) {\r\n    this.message = message;\r\n    this.title = title;\r\n    this.icon = icon;\r\n    this.type = type;\r\n  }\r\n\r\n  public static parent(): string {\r\n    let title = flashHTMLModel.setTitle(this.title);\r\n    let icon = flashHTMLModel.setIcon(this.icon);\r\n    let type = flashHTMLModel.setType(this.type);\r\n    if((false === title || undefined === title) && false === flashHTMLModel.closeButton){\r\n    flashHTMLModel.hasHeader = false;}\r\n    if(undefined !== type || \"\" !== icon){\r\n      flashHTMLModel.hasFlashIcon = true;}\r\n    return `${flashHTMLModel.hasHeader?\"<span class='flash-header'>\":\"\"}\r\n                ${typeof title == \"string\"?\"<h6>\"+title+\"</h6>\":\"\"}\r\n                ${flashHTMLModel.closeButton?SVG('close-modal','iconPath'):\"\"}\r\n            ${flashHTMLModel.hasHeader?\"</span>\":\"\"}\r\n            <span class=\"flash-content\">\r\n                ${flashHTMLModel.hasFlashIcon?\"<h6>\"+icon+\"</h6>\":\"\"}\r\n                <h6 class=\"flash-message\">\r\n                    ${this.message}\r\n                </h6>\r\n            </span>`;\r\n  }\r\n\r\n  public getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  public static setMessage(message?: string): string {\r\n    if(undefined !== message){\r\n      return this.message = message;\r\n    }\r\n    return flashHTMLModel.message;\r\n  }\r\n\r\n\r\n  public getType(): string {\r\n    return this.type??\"\";\r\n  }\r\n\r\n  public static setType(type?: string): string|undefined {\r\n    if(undefined !== type){\r\n      return this.type = type;\r\n    }\r\n    return flashHTMLModel.type;\r\n  }\r\n\r\n\r\n  public getTitle(): string|boolean {\r\n    return this.title??\"\";\r\n  }\r\n\r\n  protected static setTitle(title: string|boolean): string|boolean {\r\n    if(undefined === title || true === title){\r\n      return this.title = flashHTMLModel.type as string\r\n    }\r\n    if(typeof title == \"string\"){\r\n      return this.title = title;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n\r\n  public getIcon(): string|boolean{\r\n    return this.icon??\"\";\r\n  }\r\n\r\n  protected static setIcon(icon:string|boolean): string{\r\n    if(true === icon && undefined === flashHTMLModel.type){\r\n      return this.icon = SVG(\"success\",'iconPath');\r\n    }\r\n    if(true === icon && undefined !== flashHTMLModel.type){\r\n      return this.icon = SVG(flashHTMLModel.type,'iconPath');\r\n    }\r\n    if(typeof icon == \"string\"){\r\n      return this.icon = SVG(icon,'iconPath');\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}
{"version":3,"file":"flash.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,QAAS,GAAIH,GACM,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,GACjB,CATD,CASGK,MAAM,I,yMCTT,kBAEA,OACA,kBACA,MAAMC,EAKF,YAAmBC,GAFT,KAAAC,WAAiC,CAAC,EAGxCC,KAAKD,WAAa,CAAC,EAChBF,EAAqBI,gBAAgBC,OAAO,GAC3CL,EAAqBI,gBAAgBE,SAAQC,IACtCN,GAAWA,EAAQO,eAAeD,IACjCE,OAAOC,OAAOP,KAAKD,WAAW,CAAC,CAACK,GAAKN,EAAQM,IACjD,GAGZ,CACO,aAAAI,GACH,OAAOR,KAAKD,UAChB,EAfO,EAAAE,gBAAiC,GAkB5CJ,EAAqBI,gBAAkB,CACrC,UAAU,OAAO,WAAW,QAAQ,cACpC,YAAY,OAAO,QAGrB,MAAqBQ,EAQZ,UAAOC,CAAIZ,EAAuBa,GAEvC,IAAIC,EACJ,OAAQd,GACN,KAAK,KACL,UAAKe,EACH,MAAMC,EAAWC,SAASC,cAAc,SACxC,IACE,IAAIF,EACF,MAAM,IAAIG,MAAM,qDAElB,MAAMC,EAAU,UAAMC,OAAOL,EAASM,aAAa,YAC7CC,EAAOC,QAAQR,EAASM,aAAa,SACrCG,EAAWC,SAASV,EAASM,aAAa,aAC1CK,EAAOX,EAASM,aAAa,QAC7BM,EAAQZ,EAASM,aAAa,SAC9BO,EAAcL,QAAQR,EAASM,aAAa,gBAC5CQ,EAAON,QAAQR,EAASM,aAAa,SACrCS,EAAWf,EAASM,aAAa,YACvCX,EAAMqB,SAAWC,MAAMP,SAASQ,OAAOH,UAAchB,EAAYW,SAASK,GAC1EjB,EAAQ,CAACM,UAAQG,OAAKE,WAASE,OAAKC,QAAMC,cAAYC,OACxD,CAAE,MAAOK,GACPC,QAAQD,MAAMA,EAChB,CACA,MACF,QACErB,EAAQd,EAGZ,IAAIC,EAAa,IAAIF,EAAqBe,GAAOJ,gBAC7C2B,EAAQ1B,EAAM2B,OAAOrC,EAAqB,SAAEA,EAAiB,MAKjE,OAJAU,EAAM4B,QAAUzB,EAChBH,EAAM4B,QAAQvB,SAAWqB,EACzB1B,EAAM4B,QAAQ1B,UAAYA,EAC1BF,EAAM6B,MACC,IAAItC,IACb,CAOQ,gBAAasC,GAEnB,GAAG7B,EAAM4B,QAAQ,CACf,MAAM,UAAC1B,EAAS,SAACG,EAAQ,KAACc,GAAQnB,EAAM4B,QAClCE,QAAkB9B,EAAMoB,WAC9Bf,EAAS0B,UAAUC,MAAMC,KAAKH,IACjB,IAAI,UAAO,CAACI,MAAM7B,EAASH,YAAUiB,SAC3CgB,MACT,CACA,OAAO,IAAI5C,IACb,CAMQ,qBAAa6B,GAEnB,MAAMA,EAAYpB,EAAMqB,SAClB/B,EAAaU,EAAM4B,QACzB,IAAIQ,EACD9C,EAAWsB,MAAQtB,EAAW0B,OAC/BoB,QAAYpC,EAAMoC,IAAI9C,EAAW0B,OAEnC,MAAMJ,EAAOwB,EAAM,0BAA0BA,EAAIC,QAAQ,IAAI,WAAa,GACpEpB,EAAS3B,EAAW2B,OAAS,KAAO3B,EAAW2B,MAAS,0BAA0B3B,EAAW2B,YAAc,GAC3GqB,GAAW,IAASzB,QAAQvB,EAAW4B,aAAc,iDAAiD,GACtGqB,EAAS,KAAMtB,GAAS,KAAMqB,EAAS,8BAA8BrB,IAAQqB,WAAgB,GACnG,IAAIR,EACJ,IAAIV,GAAYoB,OAAOC,UAAUrB,GAC/B,GACO,IADCA,EAEFU,EAAY,GAAGQ,kDACT1B,+CACyBtB,EAAWmB,wCAIxCqB,EAAY,GAAGS,oFAED3B,gDACgBtB,EAAWmB,kDAI7C,GAAsB,iBAAZW,EACd,OAAOpB,EAAM0C,cAActB,EAAS9B,GAEtC,OAAO,UAAMqD,kBAAkBb,EAAU,OAAM,EACjD,CACQ,0BAAaY,CAActB,EAAkB/B,GACnD,MAAMuD,EAAS,aACf,IAAIC,EAAUzB,EAAS0B,SAASF,GAC5BG,EAAW,GACXC,EAAO,GACX,IAAK,IAAIC,KAASJ,EAAS,CACzB,IAAIlD,EAAMsD,EAAM,GACJ,SAARtD,IAAmC,IAAjBN,EAAQM,IAAiB,SAAUN,IACvD0D,EAASG,KAAKlD,EAAMoC,IAAI/C,EAAc,OACtC2D,EAAKE,KAAKD,EAAM,IAEpB,CACA,IAAIE,QAAgBC,QAAQC,IAAIN,GAChCC,EAAKtD,SAAQ,CAACC,EAAK2D,KACjBlC,EAAWA,EAASiB,QAAQ1C,EAAKwD,EAAQG,GAAO,IAElDlC,EAAWA,EAASiB,QAAQO,GAAQ,CAACK,EAAOtD,IACvCA,KAAON,QAA4Be,IAAjBf,EAAQM,GACpBN,EAAQM,GAEVsD,IAET,IACE,OAAO,UAAMN,kBAAkBvB,EAAU,OAAO,EAClD,CAAE,MAAOmC,GACP,MAAM,IAAI/C,MAAM,kDAClB,CACF,CASQ,aAAOmB,CAAOb,EAAkBE,GAEtC,IAAIwC,EAAelD,SAASC,cAAc,SACtCa,EAAW,KACZoC,GACFA,EAAaC,SAGdzC,EADCZ,MAAaY,EACP,aAAaA,EACb,GAGPI,EADCoB,OAAOC,UAAUlD,KAAK8B,UACZ9B,KAAK8B,SACL,KAEP9B,KAAK8B,WAASD,EAAW,GAE7B,IAAIf,EAAWC,SAASoD,cAAc,SAOtC,OANArD,EAASsD,KAAO,QAChBtD,EAASuD,aAAa,QAAQ,aAAa5C,UACxCZ,IAAcU,GAAYA,EAAW,GACvCT,EAASuD,aAAa,WAAY,GAAG9C,KACnCM,GAASf,EAASuD,aAAa,WAAW,GAAGxC,KAEzCf,CACT,CAOQ,gBAAa+B,CAAIyB,GAEvB,QAAIzD,IAAcyD,IADN,CAAC,UAAW,SAAU,UAAW,QACbC,SAASD,GAevC,OAAOA,EAdP,IACE,MAAME,EAAYC,eAAeC,QAAQJ,GACzC,GAAGE,EAAU,OAAOA,EACpB,MAAMG,EAAU,8FAA8FL,QACxGM,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAG5B,OAFIH,EAASI,IAAI9C,QAAQD,MAAM,4CAA6C6C,GAC5EL,eAAeQ,QAAQX,EAAMQ,GACtBA,CACT,CAAE,MAAOd,GAEP,OADA9B,QAAQgD,KAAK,yCAA0ClB,GAChD,EACT,CAIJ,EA5LF,W,wGC7BA,MAAMmB,EAAkB,SAAUnB,GAC9BA,EAAEmB,iBACJ,EAkBA,SAASC,EACPC,EACAC,EACAC,GAEA,GAAIA,EAAW,CACb,MAAMC,EAAYD,EAAU9D,MAAQ,OAC9BgE,EAAgBF,EAAUG,UAAY,OACtC,mBAAEC,GAAuBJ,GAC3B,IAASD,GACXD,EAAQO,UAAU1B,OAAO,GAAGsB,SAAiBC,KAC7CJ,EAAQO,UAAUlF,IAAI,GAAG8E,QAAgBC,MACrC,IAASE,GACXE,YAAW,KACTR,EAAQO,UAAU1B,OAAO,GAAGsB,QAAgBC,IAAgB,GAC3D,OAGLJ,EAAQO,UAAU1B,OAAO,GAAGsB,QAAgBC,KAC5CJ,EAAQO,UAAUlF,IAAI,GAAG8E,SAAiBC,MACtC,IAASE,GACXE,YAAW,KACTR,EAAQO,UAAU1B,OAAO,GAAGsB,SAAiBC,IAAgB,GAC5D,KAGT,CACF,CAQA,SAAgBK,EAAgChG,GAC9C,MAAMwF,EAAcxF,EAAQwF,cAAe,GACrC,UAAEC,GAAczF,EAChBiG,EAAWjG,EAAQuF,QACnBW,EAAiBD,aAAoBE,iBAAcpF,EAAYkF,GAAUC,eACzEX,EAAUU,aAAoBE,YAAcF,EAAWA,GAAUV,QACnEA,IACFD,EAAgBY,GAAkBX,EAASC,EAAaC,GACpD,OAASzF,EAAQoG,eACfrF,IAAcf,EAAQoG,QACxBb,EAAQc,MAAMD,QAAUpG,EAAQoG,QAEhCb,EAAQc,MAAMD,QAAU,SAIhC,CAUA,SAAgBE,EAAiCtG,GAC/C,MAAM,UAAEyF,GAAczF,EAChBiG,EAAWjG,EAAQuF,QACnBW,EACJD,aAAoBE,iBAAcpF,EAAYkF,GAAUC,eACpDX,EACJU,aAAoBE,YAAcF,EAAWA,GAAUV,QACnDC,EAAcxF,EAAQwF,cAAe,GACrC,QAAEY,EAAO,MAAEG,EAAK,YAAE1E,GAAgB7B,EACpCuF,QAAWxE,IAAcyE,IACvBY,GACEvE,GACFA,EAAY2E,iBAAiB,SAAS,WACpClB,EAAgBY,GAAkBX,EAASC,EAAaC,GACxDM,YAAW,KACTR,EAAQc,MAAMD,QAAU,MAAM,GAC7BG,GAAS,EAEd,IAEFjB,EAAgBY,GAAkBX,EAASC,EAAaC,GACxDM,YAAW,KACTR,EAAQc,MAAMD,QAAU,MAAM,GAC7BG,GAAS,KAER1E,GACFA,EAAY2E,iBAAiB,SAAS,WACpClB,EAAgBY,GAAkBX,EAASC,EAAaC,GACxDM,YAAW,KACTR,EAAQnB,QAAQ,GACfmC,GAAS,EAEd,IAEFjB,EAAgBY,GAAkBX,EAASC,EAAaC,GACxDM,YAAW,KACTR,EAAQnB,QAAQ,GACfpE,EAAQuG,OAAS,IAG1B,CAlEA,YA0BA,aAqDA,sBAAmDvG,GACjD,IAAIyG,GAAc,EAClB,MAAM,QAAElB,EAAO,WAAEmB,EAAU,YAAE7E,EAAW,UAAE4D,GAAczF,EAClDoG,EAAUpG,EAAQoG,SAAW,SAC7B,mBAAEO,GAAuB3G,EACzBuG,EAAQvG,EAAQuG,OAAS,IAC/B,IAkBE,GAjBIG,GACFA,EAAWF,iBAAiB,SAAS,YAC/B,IAAUC,GACZA,GAAc,EACdT,EAAQ,CAAET,QAASA,EAASE,UAAWA,EAAWW,QAASA,MAE3DK,GAAc,EACdH,EAAS,CACPf,QAASA,EACTE,UAAWA,EACXW,QAASA,EACTG,MAAOA,IAGb,SAGExF,IAAcc,IAAgB4E,EAAa,CAU7C,GATA5E,EAAY2E,iBAAiB,SAAS,WACpCC,GAAc,EACdH,EAAS,CACPf,QAASA,EACTE,UAAWA,EACXW,QAASA,EACTG,MAAOA,GAEX,IACII,IAAmD,IAA7BA,EAAmBC,MAAgB,CAC3D,MAAMC,EAAcF,EAAmBrG,IACvCW,SAASuF,iBAAiB,SAAS,SAAUM,GAC3C,MAAMC,EAAcD,EAAME,QAExBN,IACA7E,GACC6E,EAAWO,SAASF,IACpBlF,EAAYoF,SAASF,IACrBF,EAAYI,SAASF,KAEtBN,GAAc,EACdH,EAAS,CACPf,QAASA,EACTE,UAAWA,EACXW,QAASA,EACTG,MAAOA,IAGb,IACAM,EAAYL,iBAAiB,QAASnB,EACxC,CACA,MACF,CACA,QAAItE,IAAcc,IAAgB4E,GAAeE,EAC/C,QACE5F,IAAc4F,EAAmBrG,MACjC,IAASqG,EAAmBC,MAC5B,CAEqBT,YADrB,MAEMF,EACJV,aAAmBY,YAAcZ,EAAUA,GAASA,QACtDtE,SAASuF,iBAAiB,SAAS,SAAUM,GAC3C,MAAMC,EAAcD,EAAME,OAExBN,GACAT,IACCS,EAAWO,SAASF,KACpBd,EAASgB,SAASF,KAEnBN,GAAc,EACdH,EAAS,CACPf,QAASA,EACTE,UAAWA,EACXW,QAASA,EACTG,MAAOA,IAGb,IACIN,GACFA,EAASO,iBAAiB,QAASnB,EAEvC,KAAO,CACL,MAAMwB,EAAcF,EAAmBrG,IACvCW,SAASuF,iBAAiB,SAAS,SAAUM,GAC3C,MAAMC,EAAcD,EAAME,QAExBN,GACCA,EAAWO,SAASF,IACpBF,EAAYI,SAASF,KAEtBN,GAAc,EACdH,EAAS,CACPf,QAASA,EACTE,UAAWA,EACXW,QAASA,EACTG,MAAOA,IAGb,IACAM,EAAYL,iBAAiB,QAASnB,EACxC,CAEJ,CAAE,MAAOlD,GACP,MAAM,IAAIhB,MAAM,iCAClB,CACF,C,2JCrPF,kBACA,SASA,gBAkBE,WAAA+F,CAAYlH,GAeL,KAAAmH,MAAQ,KACK,IAAIC,UAAtB,MACMvE,EAAQ3C,KAAK2C,MACnBA,EAAM0B,aAAa,cAAe,SAClC,IAAA+B,UAAS,CACPf,QAAQ1C,EACRuD,aAAQrF,EACRwF,MAAM,IACN1E,YAAY3B,KAAK2B,YACjB4D,UAAUvF,KAAKuF,WACf,EAuCI,KAAA4B,UAAY,KACfnH,KAAKuB,SAAW,GACjBsE,YAAW,KACT7F,KAAKiH,OAAO,GACXjH,KAAKuB,SACV,EApEAvB,KAAK2C,MAAQ7C,EAAQ6C,MACrB3C,KAAK4B,MAAO9B,EAAQ8B,KAAO,MAC3B5B,KAAKoH,OAAS5F,SAASxB,KAAK2C,MAAMvB,aAAa,WAAa,IAAK,IACjEpB,KAAKuB,SAAWC,SAASxB,KAAK2C,MAAMvB,aAAa,aAAa,IAAK,IACnEpB,KAAK2C,MAAM0B,aAAa,cAAe,QACvCrE,KAAKW,UAAYb,EAAQa,UACzBX,KAAKuF,UAAazF,EAAQyF,UAAYzF,EAAQyF,UAAY,CAAC9D,KAAK,QAAQiE,SAAS,OACjF1F,KAAK2B,YACL3B,KAAKwG,WACLxG,KAAKmH,WACP,CAmBO,IAAAvE,GACL,GAAG5C,KAAK4B,KAAM,CACZ,MAAMyF,EAAU,gGACVzF,EAAO,UAAM0F,SAASD,GAC7BzF,EAAKwF,OAASpH,KAAKoH,OACnBxF,EAAK2F,MACN,CACA,MAAM5E,EAAQ3C,KAAK2C,OACnB,IAAAmD,SAAQ,CACNT,QAAQ1C,EACRuD,QAAQ,OACRX,UAAUvF,KAAKuF,YAEjB,MAAM5E,EAAYX,KAAKW,UACjB6G,EAAgBzG,SAASC,cAAc,SAC1CwG,GAAczG,SAAS0G,KAAKC,YAAYF,QACxC3G,IAAcF,GACfA,EAAUgH,aAAahF,EAAOhC,EAAUiH,YACxC5H,KAAK6H,gBAAgB7H,KAAK2C,SAE1B5B,SAAS0G,KAAKE,aAAahF,EAAO5B,SAAS0G,KAAKG,YAChD5H,KAAK6H,gBAAgB7H,KAAK2C,QAG5BA,EAAM0B,aAAa,cAAe,SAClCrE,KAAK2B,YAAcgB,EAAM3B,cAAc,uBACnChB,KAAK2B,cACP3B,KAAK2B,YAAcgB,EAAM3B,cAAc,cAEzChB,KAAK2B,aAAa2E,iBAAiB,QAAStG,KAAKiH,MACnD,CAeQ,eAAAY,CAAgBlF,GACtB5B,SAASuF,iBAAiB,oBAAoB,WAC5C3D,EAAMmF,gBAAgB,WACtBnF,EAAMmF,gBAAgB,YACtBnF,EAAMmF,gBAAgB,QACtBnF,EAAMmF,gBAAgB,QACtBnF,EAAMmF,gBAAgB,UACtBnF,EAAMmF,gBAAgB,aACtBnF,EAAMmF,gBAAgB,cACxB,GACF,E,wyDCjGmBC,EAAK,kB,EAAA,SAAAA,K,4FAAAC,CAAA,KAAAD,EAAA,E,EAAA,EAAA3H,IAAA,WAAAsG,MAOjB,SAAgBuB,GAAmC,IAAhBC,EAASC,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,GAAAA,UAAA,GAAG,KAC9CC,EAAQrH,SAASoD,cAAc,SACpB,MAAb+D,GACFE,EAAMxC,UAAUlF,IAAIwH,GAEtB,IAAMG,EAAStH,SAASoD,cAAc,UAItC,OAHAkE,EAAOC,IAAML,EACbI,EAAO5G,KAAO,aACd2G,EAAMG,YAAYF,GACXD,CACT,GACA,CAAAhI,IAAA,oBAAAsG,MAWO,SACL8B,GAEyB,IADzBC,EAAUN,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,GAAAA,UAAA,GAAG,MACbO,EAAAP,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,IAAAA,UAAA,GAEMrB,EAAS/F,SAASoD,cAAa,GAAAwE,OAAIF,IAEzC,OADA3B,EAAO8B,UAAYJ,GACf,IAASE,EACJ5B,EAAO4B,SAET5B,EAAO+B,iBAChB,GACA,CAAAzI,IAAA,KAAAsG,MAGO,SAAUrB,GACf,GAAuB,iBAAZA,EACT,OAAOA,EACF,GAAuB,iBAAZA,EAAsB,CACtC,IAAMyD,EAAa/H,SAASgI,iBAAgB,GAAAJ,OAAItD,IAC1C2D,EAAKjI,SAASC,cAAa,GAAA2H,OAAItD,IACrC,GAAmB,OAAfyD,GAAuBA,EAAW5I,OAAS,EAC7C,OAAO4I,EAET,GAAW,OAAPE,EACF,OAAOA,CAEX,CACF,GACA,CAAA5I,IAAA,eAAAsG,MAQO,SACLuC,GAC4C,IAA5CC,EAAAf,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,GAAAA,UAAA,GAAW,SAACgB,EAAWpF,GAAoB,EAE3C,OAAIkF,aAAoBG,UAAY3G,MAAM4G,QAAQJ,GACzCxG,MAAMC,KAAKuG,GAAU9I,SAAQ,SAACgJ,EAAMG,GACzCJ,EAASC,EAAMG,EACjB,IAEE,MAASL,EACJC,EAASD,QADlB,CAGF,GACA,CAAA7I,IAAA,YAAAsG,MAKO,SAAiBjF,GACtB,OAAQA,GACN,IAAK,QACH,OAAO,IAAI8H,OACT,0JAEJ,IAAK,eACH,OAAO,IAAIA,OAAO,mCACpB,IAAK,SACH,OAAO,IAAIA,OAAO,0BACpB,IAAK,kBACH,OAAO,IAAIA,OACT,kEAEJ,IAAK,eACH,OAAO,IAAIA,OAAO,kBAAmB,KACvC,IAAK,aACH,OAAO,IAAIA,OAAO,4CAA6C,KACjE,IAAK,SACH,OAAO,IAAIA,OACT,wFACA,KAEJ,IAAK,WACH,OAAO,IAAIA,OACT,4FACA,KAEJ,IAAK,WACH,OAAO,IAAIA,OAAO,+BAAgC,KACpD,IAAK,YACH,OAAO,IAAIA,OAAO,6BAA8B,KAClD,IAAK,eACH,OAAO,IAAIA,OAAO,kCAAmC,KACvD,IAAK,eACH,OAAO,IAAIA,OACT,kFAEJ,IAAK,UACH,OAAO,IAAIA,OAAO,qCACpB,IAAK,UACH,OAAO,IAAIA,OAAO,uBACpB,IAAK,UACH,OAAO,IAAIA,OAAO,8BACpB,QACE,MAAM,IAAItI,MAAM,mDAEtB,GACA,CAAAb,IAAA,cAAAsG,MAMQ,WAA+D,IAA5C8C,EAAArB,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,GAAAA,UAAA,GAAc,KAAMsB,EAAwBtB,UAAAjI,OAAA,EAAAiI,UAAA,QAAAtH,EACjE6I,EAAe3I,SAASoD,cAAcqF,GAC1CE,EAAarF,aAAa,QAAS,aACnC,IAAM8B,EAAQ,CACZT,SAAU,WACViE,MAAO,OACPC,OAAQ,OACRC,QAAS,KACTC,OAAQ,KACRL,gBAAiBA,GAAoC,WAGvD,OADAnJ,OAAOC,OAAOmJ,EAAavD,MAAOA,GAC3BuD,CACT,GACA,CAAAtJ,IAAA,gBAAAsG,MAMO,SAAqB3B,GAAoC,IAAtBgF,EAAA5B,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,GAAAA,UAAA,GAAoB,GAE5D,OADApD,EAAuB,iBAATA,EAAoBA,EAAKiF,OAAS,IACvC9J,OAAS6J,EAChB,GAAApB,OAAU5D,EAAKkF,UAAU,EAAGF,GAAU,OAEjChF,CACT,GACA,CAAA3E,IAAA,kCAAAsG,MASO,SACLwD,EACAC,GAEgB,IADhBC,EAAAjC,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,IAAAA,UAAA,GACAkC,EAAgBlC,UAAAjI,OAAA,EAAAiI,UAAA,QAAAtH,EAEhB,KAAKyJ,aAAa,KAAKC,GAAGL,IAAO,SAAU7E,GACzC,IAAImF,EAAQnF,EACRmF,GACFA,EAAMlE,iBAAiB,SAAS,WAC9B,IAAMmE,EAASL,EAAY,wBAA0B,SACrD,GAAIC,EAAS,CACX,IAAMK,EAAWF,EAAM9D,MAAM5D,QAAQ2H,EAAQ,IAC7CD,EAAM9D,MAAK,GAAAiC,OAAMgC,WAAWD,GAAUE,QAAQP,GAChD,MACEG,EAAM9D,MAAQ8D,EAAM9D,MAAM5D,QAAQ2H,EAAQ,IAExCN,GAAS3I,SAASgJ,EAAM9D,OAASyD,IACnCK,EAAM9D,MAAK,GAAAiC,OAAMwB,GAErB,GAEJ,GACF,GACA,CAAA/J,IAAA,WAAAsG,MAUO,WAImB,IAAAmE,EAAA,KAHxBrB,EAAGrB,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,GAAAA,UAAA,GAAG,KACNrB,EAAoBqB,UAAAjI,OAAA,EAAAiI,UAAA,QAAAtH,EACpBiK,EAAqB3C,UAAAjI,OAAA,EAAAiI,UAAA,QAAAtH,EACrB4I,EAAwBtB,UAAAjI,OAAA,EAAAiI,UAAA,QAAAtH,EAElBkK,EAAUhK,SAASgI,iBAAiB,8BAC1C,IACE,IAAK+B,IAAYC,EACf,MAAM,IAAI9J,MACR,6FAGJ,KAAKqJ,aAAaS,GAAS,SAAChI,GAC1BA,EAAOuD,iBAAiB,SAAS,WAC/B,IACI0E,EADSjI,EAAOkI,aAAa,iBAE7BlI,EACCA,EAAOmI,QAAQ,cAEpB,IAAKpE,IAAWkE,EACd,MAAM,IAAI/J,MACR,gHAGA+J,IACFA,EAAK7E,MAAMT,SAAW,WACtBsF,EAAKrD,aACHkD,EAAKM,YAAY3B,EAAKC,GACtBuB,EAAKpD,YAEHoD,aAAgBI,mBAClBJ,EAAK3G,aAAa,WAAY,QAGpC,GACF,GACF,CAAE,MAAOpC,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,CACF,GACA,CAAA7B,IAAA,6BAAAsG,MAMO,WAEH,IAAM2E,EAAU,wBAChB,IAAKtK,SAASuK,eAAeD,GAAU,CACrC,IAAMlF,EAAQpF,SAASoD,cAAc,SACrCgC,EAAMoF,GAAKF,EACXtK,SAASyK,KAAKjD,YAAYpC,GAC1BA,EAAMsF,MAAMC,WAAU,iLAOnB,EACL,CACa3K,SAASgI,iBAAiB,yBAClC5I,SAAQ,SAACwL,GACdA,EAAMxF,MAAMD,QAAU,OACtByF,EAAMxF,MAAMyF,WAAa,QAC3B,GACF,GAEA,CAAAxL,IAAA,0BAAAsG,MASO,SACLmF,EACA5B,EACA6B,GAEA,IAAK,IAAI1L,KAAOyL,EACd,GAAIzL,EAAImE,SAAS0F,GAAY,CAC3B,QAAIpJ,IAAciL,IAAU,IAAUA,EACpC,OAAOD,EAAOzL,GAEhB,IAAI,IAAS0L,EACX,OAAO1L,CAEX,CAEF,OAAO,CACT,GACA,CAAAA,IAAA,0BAAAsG,MASO,SACLmF,EACAE,EACA3L,GAOA,OALAE,OAAOmD,KAAKoI,GAAQ1L,SAAQ,SAACC,GAC3B,GAAIA,EAAImE,SAASwH,GACf,OAAOF,EAAOzL,EAElB,KACO,CACT,GACA,CAAAA,IAAA,WAAAsG,MAQO,SACLsF,EACA7B,GAGA,IAF2B,IAA3B8B,EAAA9D,UAAAjI,OAAA,QAAAW,IAAAsH,UAAA,IAAAA,UAAA,GAESmB,EAAI,EAAGA,GAAKa,EAAOb,IAE1B,IAAe,IADD0C,EAAOE,QAAQ5C,EAAE6C,YAE7B,QAAOF,GAAoB3C,EAAE6C,WAGjC,OAAOF,GAAqB,IAC9B,GAAC,CAAA7L,IAAA,oBAAAsG,MAEM,SACLrB,EACA+G,GAEA,IAAMC,EAASC,OAAOC,iBAAiBlH,GACjCmH,EAAwB,GAC9B,IACE,IAAKnH,EACH,MAAM,IAAIpE,MAAM,qBAElB,IAAKmL,EACH,MAAM,IAAInL,MAAM,wBAElB,GAAIwB,MAAM4G,QAAQ+C,IAAaA,EAASlM,OAAS,EAI/C,OAHAkM,EAASjM,SAAQ,SAACsM,GAChBD,EAAgB,GAAA7D,OAAI8D,IAAWJ,EAAOK,iBAAgB,GAAA/D,OAAI8D,GAC5D,IACOD,EAET,GAAwB,iBAAbJ,EACT,OAAOC,EAAOK,iBAAgB,GAAA/D,OAAIyD,GAEtC,CAAE,MAAOnK,GACPC,QAAQD,MAAMA,EAChB,CACF,GACA,CAAA7B,IAAA,SAAAsG,MAMO,SAAciG,GACnB,IAAKA,EACH,MAAO,GAET,IAAMC,EAAM7L,SAASoD,cAAc,OAEnC,OADAyI,EAAIrE,YAAYxH,SAAS8L,eAAeF,IACjCC,EAAIhE,SACb,GACA,CAAAxI,IAAA,oBAAAsG,MAQO,SACLoG,EACAhG,GAEA,IAAIiG,EAAiBD,EACrB,GAAIC,EACF,KAAQA,EAAiBA,EAAeC,wBAAyB,CAC/D,IAAMC,EAAkBF,EAAe/L,cAAc8F,GACrD,GAAImG,EACF,OAAOA,CAEX,CAEF,OAAO,IACT,GACA,CAAA7M,IAAA,uBAAAsG,MAMO,SAA4BwG,GACjC,IAAIC,EAAQ,GACZ,GAAID,EACF,QAAAE,EAAA,EAAAC,EAA2B/M,OAAOgN,QAAQJ,GAAWE,EAAAC,EAAAnN,OAAAkN,IAAE,CAAlD,IAAAG,EAAAC,EAAAH,EAAAD,GAAA,GAAOhN,EAAGmN,EAAA,GAAE7G,EAAK6G,EAAA,GAChBnN,IACF+M,GAAK,GAAAxE,OAAOvI,EAAG,MAAAuI,OAAKjC,EAAK,KAE7B,CAEF,OAAOyG,EAAMnD,MACf,GACA,CAAA5J,IAAA,mBAAAsG,MAKO,SAAwB+G,GAE3B,IAAIC,EAAQ,KAAKnD,GAAGkD,GACjBC,aAAiBC,mBAChBD,EAAMpH,iBAAiB,UAAU,SAACM,GAC9B,IAAIgH,EAAa7M,SAASoD,cAAc,UACpC0J,EAAa9M,SAASoD,cAAc,UAExC,GAAG,OAASyC,EAAME,QAAUF,EAAME,kBAAkB6G,kBAAkB,CAClEE,EAAWC,YAAclH,EAAME,OAAOhH,QAAQ8G,EAAME,OAAOiH,eAAehJ,KAC1E6I,EAAWzH,MAAM6H,SAAO,8GAIxBJ,EAAWrF,YAAYsF,GACvBjH,EAAME,OAAOmH,MAAML,GAEnB,IAAMM,EAAkBN,EAAWO,wBAAwBxE,MAC3DzH,QAAQkM,IAAI,CAACR,WAAAA,IACbhH,EAAME,OAAOX,MAAMwD,MAAK,GAAAhB,OAAMuF,EAAe,MAC7CN,EAAW1J,QACf,CACJ,IACAwJ,EAAMW,cAAc,IAAIC,MAAM,YAE9BpM,QAAQD,MAAM,2CAEtB,K,EA3cwB,O,yFA2cvB,CA3cuB,GAA1BzC,EAAAA,QAAAuI,C,GCfIwG,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB5N,IAAjB6N,EACH,OAAOA,EAAalP,QAGrB,IAAIC,EAAS8O,EAAyBE,GAAY,CAGjDjP,QAAS,CAAC,GAOX,OAHAmP,EAAoBF,GAAUG,KAAKnP,EAAOD,QAASC,EAAQA,EAAOD,QAASgP,GAGpE/O,EAAOD,OACf,C,OCrBAgP,EAAoBK,EAAKrP,IACH,oBAAXsP,QAA0BA,OAAOC,aAC1CzO,OAAO0O,eAAexP,EAASsP,OAAOC,YAAa,CAAErI,MAAO,WAE7DpG,OAAO0O,eAAexP,EAAS,aAAc,CAAEkH,OAAO,GAAO,ECFpC8H,EAAoB,I","sources":["webpack://@easylibs/flash/webpack/universalModuleDefinition","webpack://@easylibs/flash/./src/flash.ts","webpack://@easylibs/flash/./src/scripts/animation.ts","webpack://@easylibs/flash/./src/scripts/runner.ts","webpack://@easylibs/flash/../src/utils.ts","webpack://@easylibs/flash/webpack/bootstrap","webpack://@easylibs/flash/webpack/runtime/make namespace object","webpack://@easylibs/flash/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"flash\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flash\"] = factory();\n\telse\n\t\troot[\"flash\"] = factory();\n})(self, () => {\nreturn ","import Runner from \"./scripts/runner\";\r\nimport { FlashOptions, FlashType } from \"./scripts/types\";\r\nimport \"./assets/scss/flash.scss\";\r\nimport Utils from \"@easylibs/utils\";\r\nclass FormatParamsToObject\r\n{\r\n    static ACCEPTED_PARAMS: Array<string> = [];\r\n    protected properties: Record<string,any> = {};\r\n\r\n    public constructor(options:Record<string,any>){\r\n        this.properties = {};\r\n        if(FormatParamsToObject.ACCEPTED_PARAMS.length>0){\r\n            FormatParamsToObject.ACCEPTED_PARAMS.forEach(key => {\r\n                if(options && options.hasOwnProperty(key)){\r\n                    Object.assign(this.properties,{[key]:options[key]})\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public getProperties(): Record<string,any>{\r\n        return this.properties;\r\n    }\r\n}\r\n\r\nFormatParamsToObject.ACCEPTED_PARAMS = [\r\n  \"message\",\"type\",\"duration\",\"title\",\"closeButton\",\r\n  \"container\",\"icon\",\"tone\"\r\n];\r\n\r\nexport default class Flash{\r\n  private static OPTIONS:FlashOptions;\r\n  public static TEMPLATE:string|number;\r\n  /**\r\n  * Adds a Flash message with the specified options.\r\n  * @param options\r\n  * @returns - The instance of the Flash class.\r\n  */\r\n  public static add(options?:FlashOptions, container?:HTMLElement): Flash\r\n  {\r\n    let datas:FlashOptions;\r\n    switch (options) {\r\n      case null:\r\n      case undefined:\r\n        const flashBox = document.querySelector(\"flash\") as HTMLElement;\r\n        try {\r\n          if(!flashBox){\r\n            throw new Error('No <flash></flash> element found in your template');\r\n          }\r\n          const message = Utils.escape(flashBox.getAttribute(\"message\"));\r\n          const icon = Boolean(flashBox.getAttribute(\"icon\"));\r\n          const duration = parseInt(flashBox.getAttribute(\"duration\"));\r\n          const type = flashBox.getAttribute(\"type\") as FlashType;\r\n          const title = flashBox.getAttribute(\"title\");\r\n          const closeButton = Boolean(flashBox.getAttribute(\"closeButton\"));\r\n          const tone = Boolean(flashBox.getAttribute(\"tone\"));\r\n          const template = flashBox.getAttribute(\"template\");\r\n          Flash.TEMPLATE = isNaN(parseInt(String(template))) ? undefined : parseInt(template);\r\n          datas = {message,icon,duration,type,title,closeButton,tone}\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n        break;\r\n      default:\r\n        datas = options;\r\n        break;\r\n    }\r\n    let properties = new FormatParamsToObject(datas).getProperties();\r\n    let flash = Flash.create(properties['duration'],properties['type']);\r\n    Flash.OPTIONS = datas;\r\n    Flash.OPTIONS.flashBox = flash;\r\n    Flash.OPTIONS.container = container;\r\n    Flash.run();\r\n    return new this;\r\n  }\r\n  /**\r\n   * Displays a Flash message with the specified options.\r\n   * @param options - The Flash message options.\r\n   * @param container - The container in which to display the Flash message (optional).\r\n   * @returns - The instance of the Flash class.\r\n   */\r\n  private static async run(): Promise<Flash>\r\n  {\r\n    if(Flash.OPTIONS){\r\n      const {container,flashBox,tone} = Flash.OPTIONS;\r\n      const _template = await Flash.template();\r\n      flashBox.append(...Array.from(_template));\r\n      let runner = new Runner({modal:flashBox,container,tone});\r\n      runner.open();\r\n    }\r\n    return new this;\r\n  }\r\n  /**\r\n   * Returns the HTML template for the Flash message.\r\n   * @param properties - Flash message properties.\r\n   * @returns - The HTML template for the Flash message.\r\n   */\r\n  private static async template(): Promise<HTMLCollection>\r\n  {\r\n    const template =  Flash.TEMPLATE;\r\n    const properties = Flash.OPTIONS;\r\n    let svg:string;\r\n    if(properties.icon && properties.type){\r\n      svg = await Flash.svg(properties.type)\r\n    }\r\n    const icon = svg ? `<h6 class=\"flash-icon\">${svg.replace('\"',\"\")}</h6>` : \"\";\r\n    const title = (properties.title && \"\" !== properties.title) ? `<p class=\"flash-title\">${properties.title}</p>` : \"\";\r\n    const button =  (true === Boolean(properties.closeButton))?`<div aria-label=\"Close message\" _close_></div>`:\"\";\r\n    const header = ''!== title || ''!== button ? `<span class=\"flash-header\">${title}${button}</span>`:\"\";\r\n    let _template: string;\r\n    if(!template || Number.isInteger(template)){\r\n      switch (template) {\r\n        case 2:\r\n            _template = `${button}<span class=\"flash-content\">\r\n                ${icon}\r\n                <p class=\"flash-message\">${properties.message}</p>\r\n            </span>`;\r\n            break;\r\n        default:\r\n              _template = `${header}\r\n                      <span class=\"flash-content\">\r\n                          ${icon}\r\n                          <p class=\"text\">${properties.message}</p>\r\n                      </span>`;\r\n              break;\r\n      }\r\n    }else if(typeof template == \"string\"){\r\n      return Flash.parseTemplate(template,properties);\r\n    }\r\n    return Utils.textToHTMLElement(_template,\"div\",true) as HTMLCollection;\r\n  }\r\n  private static async parseTemplate(template: string, options: FlashOptions): Promise<HTMLCollection> {\r\n    const regexp = /{{(.*?)}}/g;\r\n    let matches = template.matchAll(regexp);\r\n    let promises = []; // Collecter les promesses\r\n    let keys = [];\r\n    for (let match of matches) {\r\n      let key = match[1];\r\n      if (key === \"icon\" && options[key] === true && 'type' in options) {\r\n        promises.push(Flash.svg(options['type']));\r\n        keys.push(match[0]); // Stocker la chaîne à remplacer\r\n      }\r\n    }\r\n    let results = await Promise.all(promises); // Attendre les résultats des promesses\r\n    keys.forEach((key, index) => { // Appliquer les résultats dans le template\r\n      template = template.replace(key, results[index]);\r\n    });\r\n    template = template.replace(regexp, (match, key) => { // Remplacement synchrone pour les autres clés\r\n      if(key in options && options[key] !== undefined) {\r\n        return options[key];\r\n      };\r\n      return match;\r\n    });\r\n    try {\r\n      return Utils.textToHTMLElement(template, \"div\", true) as HTMLCollection;\r\n    } catch (e) {\r\n      throw new Error(\"Impossible de parser le modèle de notification.\");\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Crée un élément Flash avec les options spécifiées.\r\n   * @param duration - La durée d'affichage du message Flash (facultatif).\r\n   * @param type - Le type de message Flash (facultatif).\r\n   * @returns - L'élément Flash créé.\r\n   * @private\r\n   */\r\n  private static create(duration?:number, type?:string):HTMLElement\r\n  {\r\n    let lastFlashBox = document.querySelector('flash') as HTMLElement;\r\n    let template = null;\r\n    if(lastFlashBox)\r\n    {lastFlashBox.remove();}\r\n\r\n    (undefined != type)?\r\n    type = \"flashtype-\"+type:\r\n    type = \"\";\r\n\r\n    (Number.isInteger(this.TEMPLATE))?\r\n    template = this.TEMPLATE:\r\n    template = null;\r\n\r\n    if(!this.TEMPLATE)template = 1;\r\n    \r\n    let flashBox = document.createElement('flash');\r\n    flashBox.role = \"alert\"\r\n    flashBox.setAttribute('class',`flash-box ${type}`)\r\n    if(undefined !== duration && duration > 0)\r\n    {flashBox.setAttribute('duration', `${duration}`);}\r\n    if(template)flashBox.setAttribute('template',`${template}`);\r\n\r\n    return flashBox;\r\n  }\r\n  /**\r\n   * Returns an SVG representation as a string.\r\n   *\r\n   * @param name - The name of the icon to use.\r\n   * @returns The SVG representation as a string.\r\n   */\r\n  private static async svg(name: string): Promise<string> {\r\n    let names = [\"success\", \"danger\", \"warning\", \"info\"];\r\n    if (undefined !== name && names.includes(name)) {\r\n      try {\r\n        const flashIcon = sessionStorage.getItem(name);\r\n        if(flashIcon)return flashIcon;\r\n        const svgUrl =  `https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/flash/dist/assets/icons/${name}.svg`;\r\n        const response = await fetch(svgUrl);\r\n        const data = await response.text();\r\n        if(!response.ok){console.error(\"Erreur lors du chargement du fichier SVG:\", data);}\r\n        sessionStorage.setItem(name, data);\r\n        return data;\r\n      } catch (e) {\r\n        console.warn(\"Erreur lors de l'importation de l'icon\", e);\r\n        return \"\";\r\n      }\r\n    } else {\r\n      return name;\r\n    }\r\n  }\r\n}\r\n\r\n","const stopPropagation = function (e: Event) {\r\n    e.stopPropagation();\r\n  };\r\n  export declare type AnimeOptions = {\r\n    duration?: number; // Durée en millisecondes par défaut à 10\r\n    openButton?: HTMLElement;\r\n    element?: HTMLElement | { element: HTMLElement; animateElement: HTMLElement };\r\n    display?: string | null;\r\n    animation?: { type: string; position: string; clearAfterApplying?: boolean };\r\n    closeButton?: HTMLElement;\r\n    dispatchCloseEvent?: { key?: any; value: boolean };\r\n    delay?: number;\r\n    fromInToOut?: boolean;\r\n  };\r\n  /**\r\n   * Effectue une animation de commutation sur un élément HTML spécifié.\r\n   * @param element - L'élément HTML sur lequel l'animation doit être appliquée.\r\n   * @param fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa.\r\n   * @param animation - Les informations sur le type et la position de l'animation (facultatif).\r\n   */\r\n  function switchAnimation(\r\n    element: HTMLElement,\r\n    fromInToOut: boolean,\r\n    animation?: { type: string; position: string; clearAfterApplying?: boolean }\r\n  ) {\r\n    if (animation) {\r\n      const animeType = animation.type ?? \"fade\";\r\n      const animePosition = animation.position ?? \"top\";\r\n      const { clearAfterApplying } = animation;\r\n      if (true === fromInToOut) {\r\n        element.classList.remove(`${animeType}-out-${animePosition}`);\r\n        element.classList.add(`${animeType}-in-${animePosition}`);\r\n        if (true === clearAfterApplying) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-in-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        element.classList.remove(`${animeType}-in-${animePosition}`);\r\n        element.classList.add(`${animeType}-out-${animePosition}`);\r\n        if (true === clearAfterApplying) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-out-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Effectue une animation d'entrée sur un élément HTML spécifié.\r\n   * @param options.element - L'élément HTML sur lequel l'animation d'entrée doit être appliquée.\r\n   * @param options.animation - Les informations sur le type et la position de l'animation (facultatif).\r\n   * @param options.display - La valeur de la propriété CSS \"display\" à appliquer à l'élément après l'animation (facultatif).\r\n   * @param options.fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa lors de l'utilisation de la fonction `switchAnimation`.\r\n   */\r\n  export function animeIn<T extends AnimeOptions>(options: T) {\r\n    const fromInToOut = options.fromInToOut ?? true;\r\n    const { animation } = options;\r\n    const _element = options.element;\r\n    const animateElement = _element instanceof HTMLElement ? undefined : _element?.animateElement;\r\n    const element = _element instanceof HTMLElement ? _element : _element?.element;\r\n    if (element) {\r\n      switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n      if (null !== options.display) {\r\n        if (undefined !== options.display) {\r\n          element.style.display = options.display;\r\n        } else {\r\n          element.style.display = \"block\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Effectue une animation de sortie sur un élément HTML spécifié, puis le masque ou le supprime.\r\n   * @param options.element - L'élément HTML sur lequel l'animation d'entrée ou de sortie doit être appliquée.\r\n   * @param options.display - La valeur de la propriété CSS \"display\" à appliquer à l'élément lors de l'animation (facultatif).\r\n   * @param options.animation - Les informations sur le type et la position de l'animation (facultatif).\r\n   * @param options.delay - Le délai en millisecondes avant de masquer ou de supprimer l'élément (facultatif).\r\n   * @param options.closeButton - Le bouton de fermeture lié à l'élément (facultatif).\r\n   * @param options.fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa.\r\n   */\r\n  export function animeOut<T extends AnimeOptions>(options: T) {\r\n    const { animation } = options;\r\n    const _element = options.element;\r\n    const animateElement =\r\n      _element instanceof HTMLElement ? undefined : _element?.animateElement;\r\n    const element =\r\n      _element instanceof HTMLElement ? _element : _element?.element;\r\n    const fromInToOut = options.fromInToOut ?? false;\r\n    const { display, delay, closeButton } = options;\r\n    if (element && undefined !== fromInToOut) {\r\n      if (display) {\r\n        if (closeButton) {\r\n          closeButton.addEventListener(\"click\", function () {\r\n            switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n            setTimeout(() => {\r\n              element.style.display = \"none\";\r\n            }, delay || 0);\r\n            return;\r\n          });\r\n        }\r\n        switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n        setTimeout(() => {\r\n          element.style.display = \"none\";\r\n        }, delay || 0);\r\n      } else {\r\n        if (closeButton) {\r\n          closeButton.addEventListener(\"click\", function () {\r\n            switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n            setTimeout(() => {\r\n              element.remove();\r\n            }, delay || 0);\r\n            return;\r\n          });\r\n        }\r\n        switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n        setTimeout(() => {\r\n          element.remove();\r\n        }, options.delay || 0);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Effectue une animation d'entrée ou de sortie sur un élément HTML spécifié en réponse aux événements du bouton d'ouverture et de fermeture.\r\n   * @param options.openButton - Le bouton d'ouverture lié à l'élément.\r\n   * @param options.element - L'élément HTML sur lequel l'animation d'entrée ou de sortie doit être appliquée.\r\n   * @param options.display - La valeur de la propriété CSS \"display\" à appliquer à l'élément lors de l'animation (facultatif).\r\n   * @param options.animation - Les informations sur le type et la position de l'animation (facultatif).\r\n   * @param options.closeButton - Le bouton de fermeture lié à l'élément (facultatif).\r\n   * @param options.dispatchCloseEvent - L'événement de fermeture à dispatcher (facultatif).\r\n   * @param options.dispatchCloseEvent.key - La clé de l'événement de fermeture.\r\n   * @param options.dispatchCloseEvent.value - La valeur associée à l'événement de fermeture.\r\n   * @param options.delay - Le délai en millisecondes avant de masquer ou de supprimer l'élément (facultatif).\r\n   */\r\n  export function animeInOut<T extends AnimeOptions>(options: T) {\r\n    let modalIsOpen = false;\r\n    const { element, openButton, closeButton, animation } = options;\r\n    const display = options.display ?? \"block\";\r\n    const { dispatchCloseEvent } = options;\r\n    const delay = options.delay ?? 350;\r\n    try {\r\n      if (openButton) {\r\n        openButton.addEventListener(\"click\", function () {\r\n          if (false === modalIsOpen) {\r\n            modalIsOpen = true;\r\n            animeIn({ element: element, animation: animation, display: display });\r\n          } else {\r\n            modalIsOpen = false;\r\n            animeOut({\r\n              element: element,\r\n              animation: animation,\r\n              display: display,\r\n              delay: delay,\r\n            });\r\n          }\r\n        });\r\n      }\r\n  \r\n      if (undefined !== closeButton && !modalIsOpen) {\r\n        closeButton.addEventListener(\"click\", function () {\r\n          modalIsOpen = false;\r\n          animeOut({\r\n            element: element,\r\n            animation: animation,\r\n            display: display,\r\n            delay: delay,\r\n          });\r\n        });\r\n        if (dispatchCloseEvent && dispatchCloseEvent.value === true) {\r\n          const dispElement = dispatchCloseEvent.key as HTMLElement;\r\n          document.addEventListener(\"click\", function (event: MouseEvent) {\r\n            const eventTarget = event.target as Node;\r\n            if (\r\n              openButton &&\r\n              closeButton &&\r\n              !openButton.contains(eventTarget) &&\r\n              !closeButton.contains(eventTarget) &&\r\n              !dispElement.contains(eventTarget)\r\n            ) {\r\n              modalIsOpen = false;\r\n              animeOut({\r\n                element: element,\r\n                animation: animation,\r\n                display: display,\r\n                delay: delay,\r\n              });\r\n            }\r\n          });\r\n          dispElement.addEventListener(\"click\", stopPropagation);\r\n        }\r\n        return;\r\n      }\r\n      if (undefined === closeButton && !modalIsOpen && dispatchCloseEvent) {\r\n        if (\r\n          undefined === dispatchCloseEvent.key &&\r\n          true === dispatchCloseEvent.value\r\n        ) {\r\n          const animateElement =\r\n            element instanceof HTMLElement ? undefined : element?.animateElement;\r\n          const _element =\r\n            element instanceof HTMLElement ? element : element?.element;\r\n          document.addEventListener(\"click\", function (event: MouseEvent) {\r\n            const eventTarget = event.target as Node;\r\n            if (\r\n              openButton &&\r\n              _element &&\r\n              !openButton.contains(eventTarget) &&\r\n              !_element.contains(eventTarget)\r\n            ) {\r\n              modalIsOpen = false;\r\n              animeOut({\r\n                element: element,\r\n                animation: animation,\r\n                display: display,\r\n                delay: delay,\r\n              });\r\n            }\r\n          });\r\n          if (_element) {\r\n            _element.addEventListener(\"click\", stopPropagation);\r\n          }\r\n        } else {\r\n          const dispElement = dispatchCloseEvent.key as HTMLElement;\r\n          document.addEventListener(\"click\", function (event: MouseEvent) {\r\n            const eventTarget = event.target as Node;\r\n            if (\r\n              openButton &&\r\n              !openButton.contains(eventTarget) &&\r\n              !dispElement.contains(eventTarget)\r\n            ) {\r\n              modalIsOpen = false;\r\n              animeOut({\r\n                element: element,\r\n                animation: animation,\r\n                display: display,\r\n                delay: delay,\r\n              });\r\n            }\r\n          });\r\n          dispElement.addEventListener(\"click\", stopPropagation);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      throw new Error(\"HTMLElement null or undefined.\");\r\n    }\r\n  }\r\n  ","import Utils from \"@easylibs/utils\";\r\nimport { animeIn, animeOut } from \"./animation\";\r\n\r\ndeclare type RunnerOptions = {\r\n  modal?: HTMLElement\r\n  container?: HTMLElement,\r\n  animation?:{type:string,position:string},\r\n  tone?:boolean\r\n};\r\n\r\nexport default class Runner{\r\n  private modal: Element;\r\n  private tone: boolean | null;\r\n  private volume: number;\r\n  private duration: number;\r\n  private titre?: string;\r\n  private container?: HTMLElement;\r\n  private animation:{type:string,position:string};\r\n  private closeButton?:HTMLElement;\r\n  private openButton?:HTMLElement;\r\n  /**\r\n   * Cette classe  encapsule la logique liée à la manipulation des modals, \r\n   * y compris leur ouverture, leur fermeture, la gestion de l'audio, de la durée et de l'animation. \r\n   * Elle fournit une interface simple pour interagir avec les modals\r\n   * @param modal L'élément modal à manipuler.\r\n   * @param container Le conteneur dans lequel insérer la modal (optionnel).\r\n   * @param animation Les options d'animation de la modal (optionnel).\r\n   */\r\n  constructor(options:RunnerOptions) {\r\n    this.modal = options.modal;\r\n    this.tone = options.tone ? null : null;\r\n    this.volume = parseInt(this.modal.getAttribute('volume') || '1', 10);\r\n    this.duration = parseInt(this.modal.getAttribute('duration')||\"0\", 10);\r\n    this.modal.setAttribute('aria-hidden', 'true');\r\n    this.container = options.container;\r\n    this.animation =  options.animation ? options.animation : {type:'slide',position:'top'};\r\n    this.closeButton;\r\n    this.openButton;\r\n    this.autoClose();\r\n  }\r\n  /**\r\n   * Méthode pour fermer la modal.\r\n   */\r\n  public close = (): void => {\r\n    const animation = new Animation();\r\n    const modal = this.modal;\r\n    modal.setAttribute('aria-hidden', 'true');\r\n    animeOut({\r\n      element:modal as HTMLElement,\r\n      display:undefined,\r\n      delay:350,\r\n      closeButton:this.closeButton,\r\n      animation:this.animation\r\n    });\r\n  };\r\n  /**\r\n   * Méthode pour ouvrir la modal.\r\n   */\r\n  public open(){\r\n    if(this.tone) {\r\n      const toneUrl = \"https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/flash/dist/assets/tone.ogg\";\r\n      const tone = Utils.setAudio(toneUrl);\r\n     tone.volume = this.volume;\r\n     tone.play();\r\n    }\r\n    const modal = this.modal;\r\n    animeIn({\r\n      element:modal as HTMLElement,\r\n      display:'flex',\r\n      animation:this.animation\r\n    });\r\n    const container = this.container;\r\n    const existingFlash = document.querySelector('flash');\r\n    if(existingFlash)document.body.removeChild(existingFlash);\r\n    if(undefined !== container){\r\n      container.insertBefore(modal, container.firstChild);\r\n      this.clearProperties(this.modal);\r\n    }else{\r\n      document.body.insertBefore(modal, document.body.firstChild);\r\n      this.clearProperties(this.modal);\r\n    }\r\n    \r\n    modal.setAttribute('aria-hidden', 'false');\r\n    this.closeButton = modal.querySelector('.flash-close-button') as HTMLElement;\r\n    if(!this.closeButton){\r\n      this.closeButton = modal.querySelector('[_close_]') as HTMLElement;\r\n    }\r\n    this.closeButton?.addEventListener('click', this.close);\r\n  }\r\n  /**\r\n   * Méthode pour gérer la fermeture automatique de la modal.\r\n   */\r\n  private autoClose = (): void =>{\r\n    if(this.duration > 0) {\r\n      setTimeout(() => {\r\n        this.close();\r\n      }, this.duration);\r\n    }\r\n  }\r\n  /**\r\n   * Méthode interne pour nettoyer les attributs de la modal.\r\n   * @param modal L'élément modal à nettoyer.\r\n   */\r\n  private clearProperties(modal:Element){\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      modal.removeAttribute('message');\r\n      modal.removeAttribute('duration');\r\n      modal.removeAttribute('icon');\r\n      modal.removeAttribute('tone');\r\n      modal.removeAttribute('volume');\r\n      modal.removeAttribute('container');\r\n      modal.removeAttribute('closeButton');\r\n    });\r\n  }\r\n}\r\n",null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(537);\n"],"names":["root","factory","exports","module","define","amd","self","FormatParamsToObject","options","properties","this","ACCEPTED_PARAMS","length","forEach","key","hasOwnProperty","Object","assign","getProperties","Flash","add","container","datas","undefined","flashBox","document","querySelector","Error","message","escape","getAttribute","icon","Boolean","duration","parseInt","type","title","closeButton","tone","template","TEMPLATE","isNaN","String","error","console","flash","create","OPTIONS","run","_template","append","Array","from","modal","open","svg","replace","button","header","Number","isInteger","parseTemplate","textToHTMLElement","regexp","matches","matchAll","promises","keys","match","push","results","Promise","all","index","e","lastFlashBox","remove","createElement","role","setAttribute","name","includes","flashIcon","sessionStorage","getItem","svgUrl","response","fetch","data","text","ok","setItem","warn","stopPropagation","switchAnimation","element","fromInToOut","animation","animeType","animePosition","position","clearAfterApplying","classList","setTimeout","animeIn","_element","animateElement","HTMLElement","display","style","animeOut","delay","addEventListener","modalIsOpen","openButton","dispatchCloseEvent","value","dispElement","event","eventTarget","target","contains","constructor","close","Animation","autoClose","volume","toneUrl","setAudio","play","existingFlash","body","removeChild","insertBefore","firstChild","clearProperties","removeAttribute","Utils","_classCallCheck","audioPath","classname","arguments","audio","source","src","appendChild","textHtml","targetName","children","concat","innerHTML","firstElementChild","collection","querySelectorAll","el","nodeList","callback","node","NodeList","isArray","i","RegExp","tag","backgroundColor","forbiddenTag","width","height","opacity","zIndex","maxLength","trim","substring","attr","limit","priceType","decimal","processNodes","$$","input","regExp","getValue","parseFloat","toFixed","_this","trigger","buttons","item","hasAttribute","closest","forbiddener","HTMLButtonElement","styleId","getElementById","id","head","sheet","insertRule","label","alignItems","object","getKey","keyOrShorKey","string","returnBool","indexOf","toString","property","styles","window","getComputedStyle","propertiesObject","props","getPropertyValue","str","div","createTextNode","referent","currentElement","previousElementSibling","charCounterSpan","attributes","attrs","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","select","field","HTMLSelectElement","tempSelect","tempOption","textContent","selectedIndex","cssText","after","tempSelectWidth","getBoundingClientRect","log","dispatchEvent","Event","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","r","Symbol","toStringTag","defineProperty"],"sourceRoot":""}
{"version":3,"file":"flash.min.js","mappings":"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","sources":["webpack://@easylibs/flash/webpack/universalModuleDefinition","webpack://@easylibs/flash/./src/flash.ts","webpack://@easylibs/flash/./src/scripts/runner.ts","webpack://@easylibs/flash/@easylibs/animation/webpack/universalModuleDefinition","webpack://@easylibs/flash/@easylibs/node_modules/path-browserify/index.js","webpack://@easylibs/flash/@easylibs/animation/src/scripts/helpers.ts","webpack://@easylibs/flash/@easylibs/animation/src/scripts/loader.ts","webpack://@easylibs/flash/@easylibs/animation/webpack/bootstrap","webpack://@easylibs/flash/@easylibs/animation/src/animation.ts","webpack://@easylibs/flash/@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/flash/@easylibs/utils/webpack/bootstrap","webpack://@easylibs/flash/@easylibs/utils/webpack/runtime/define property getters","webpack://@easylibs/flash/@easylibs/utils/webpack/runtime/hasOwnProperty shorthand","webpack://@easylibs/flash/@easylibs/utils/webpack/runtime/make namespace object","webpack://@easylibs/flash/@easylibs/utils/src/utils.ts","webpack://@easylibs/flash/webpack/bootstrap","webpack://@easylibs/flash/webpack/runtime/make namespace object","webpack://@easylibs/flash/webpack/runtime/node module decorator","webpack://@easylibs/flash/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"flash\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flash\"] = factory();\n\telse\n\t\troot[\"flash\"] = factory();\n})(self, () => {\nreturn ","import Runner from \"./scripts/runner\";\r\nimport { FlashOptions } from \"./scripts/types\";\r\nimport \"./assets/scss/flash.scss\";\r\nimport Utils from \"@easylibs/utils\";\r\nclass FormatParamsToObject\r\n{\r\n    static ACCEPTED_PARAMS: Array<string> = [];\r\n    protected properties: Object = {};\r\n\r\n    public constructor(options:Record<string,any>){\r\n        this.properties = {};\r\n        if(FormatParamsToObject.ACCEPTED_PARAMS.length>0){\r\n            FormatParamsToObject.ACCEPTED_PARAMS.forEach(key => {\r\n                if(options && options.hasOwnProperty(key)){\r\n                    Object.assign(this.properties,{[key]:options[key]})\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public getProperties(): any{\r\n        return this.properties;\r\n    }\r\n}\r\n\r\nFormatParamsToObject.ACCEPTED_PARAMS = [\r\n  \"message\",\"type\",\"duration\",\"title\",\"closeButton\",\r\n  \"container\",\"icon\",\"tone\"\r\n];\r\n\r\nexport default class Flash{\r\n  private static OPTIONS:FlashOptions;\r\n  public static TEMPLATE:string|number;\r\n  /**\r\n  * Adds a Flash message with the specified options.\r\n  * @param options\r\n  * @returns - The instance of the Flash class.\r\n  */\r\n  public static add(options?:FlashOptions, container?:HTMLElement): Flash\r\n  {\r\n    let datas:FlashOptions;\r\n    switch (options) {\r\n      case null:\r\n      case undefined:\r\n        const flashBox = document.querySelector(\"flash\") as HTMLElement;\r\n        try {\r\n          if(!flashBox){\r\n            throw new Error('No <flash></flash> element found in your HTML file');\r\n          }\r\n          const message = Utils.escape(flashBox.getAttribute(\"message\"));\r\n          const icon = Boolean(flashBox.getAttribute(\"icon\"));\r\n          const duration = parseInt(flashBox.getAttribute(\"duration\"));\r\n          const type = flashBox.getAttribute(\"type\") as any;\r\n          const title = flashBox.getAttribute(\"title\");\r\n          const closeButton = Boolean(flashBox.getAttribute(\"closeButton\"));\r\n          const tone = Boolean(flashBox.getAttribute(\"tone\"));\r\n          const template = flashBox.getAttribute(\"template\");\r\n          Flash.TEMPLATE = isNaN(parseInt(String(template))) ? undefined : parseInt(template);\r\n          datas = {message,icon,duration,type,title,closeButton,tone}\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n        break;\r\n      default:\r\n        datas = options;\r\n        break;\r\n    }\r\n    let properties = new FormatParamsToObject(datas).getProperties();\r\n    let flash = Flash.create(properties['duration'],properties['type']);\r\n    Flash.OPTIONS = datas;\r\n    Flash.OPTIONS.flashBox = flash;\r\n    Flash.OPTIONS.container = container;\r\n    Flash.run();\r\n    return new this;\r\n  }\r\n  /**\r\n   * Displays a Flash message with the specified options.\r\n   * @param options - The Flash message options.\r\n   * @param container - The container in which to display the Flash message (optional).\r\n   * @returns - The instance of the Flash class.\r\n   */\r\n  private static async run(): Promise<Flash>\r\n  {\r\n    if(Flash.OPTIONS){\r\n      const {container,flashBox,tone} = Flash.OPTIONS;\r\n      const _template = await Flash.template();\r\n      flashBox.append(...Array.from(_template));\r\n      let runner = new Runner({modal:flashBox,container,tone});\r\n      runner.open();\r\n    }\r\n    return new this;\r\n  }\r\n  /**\r\n   * Returns the HTML template for the Flash message.\r\n   * @param properties - Flash message properties.\r\n   * @returns - The HTML template for the Flash message.\r\n   */\r\n  private static async template(): Promise<HTMLCollection>\r\n  {\r\n    const template =  Flash.TEMPLATE;\r\n    const properties = Flash.OPTIONS;\r\n    let svg:string;\r\n    if(properties.icon && properties.type){\r\n      svg = await Flash.svg(properties.type)\r\n    }\r\n    const icon = svg ? `<h6 class=\"flash-icon\">${svg.replace('\"',\"\")}</h6>` : \"\";\r\n    const title = (properties.title && \"\" !== properties.title) ? `<p class=\"flash-title\">${properties.title}</p>` : \"\";\r\n    const button =  (true === Boolean(properties.closeButton))?`<div aria-label=\"Close message\" _close_></div>`:\"\";\r\n    const header = ''!== title || ''!== button ? `<span class=\"flash-header\">${title}${button}</span>`:\"\";\r\n    let _template: string;\r\n    if(!template || Number.isInteger(template)){\r\n      switch (template) {\r\n        case 2:\r\n            _template = `${button}<span class=\"flash-content\">\r\n                ${icon}\r\n                <p class=\"flash-message\">${properties.message}</p>\r\n            </span>`;\r\n            break;\r\n        default:\r\n              _template = `${header}\r\n                      <span class=\"flash-content\">\r\n                          ${icon}\r\n                          <p class=\"text\">${properties.message}</p>\r\n                      </span>`;\r\n              break;\r\n      }\r\n    }else if(typeof template == \"string\"){\r\n      return Flash.parseTemplate(template,properties);\r\n    }\r\n    return Utils.textToHTMLElement(_template,\"div\",true) as HTMLCollection;\r\n  }\r\n  private static async parseTemplate(template: string, options: FlashOptions): Promise<HTMLCollection> {\r\n    const regexp = /{{(.*?)}}/g;\r\n    let matches = template.matchAll(regexp);\r\n    let promises = []; // Collecter les promesses\r\n    let keys = [];\r\n    for (let match of matches) {\r\n      let key = match[1];\r\n      if (key === \"icon\" && options[key] === true && 'type' in options) {\r\n        promises.push(Flash.svg(options['type']));\r\n        keys.push(match[0]); // Stocker la chaîne à remplacer\r\n      }\r\n    }\r\n    let results = await Promise.all(promises); // Attendre les résultats des promesses\r\n    keys.forEach((key, index) => { // Appliquer les résultats dans le template\r\n      template = template.replace(key, results[index]);\r\n    });\r\n    template = template.replace(regexp, (match, key) => { // Remplacement synchrone pour les autres clés\r\n      if(key in options && options[key] !== undefined) {\r\n        return options[key];\r\n      };\r\n      return match;\r\n    });\r\n    try {\r\n      return Utils.textToHTMLElement(template, \"div\", true) as HTMLCollection;\r\n    } catch (e) {\r\n      throw new Error(\"Impossible de parser le modèle de notification.\");\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Crée un élément Flash avec les options spécifiées.\r\n   * @param duration - La durée d'affichage du message Flash (facultatif).\r\n   * @param type - Le type de message Flash (facultatif).\r\n   * @returns - L'élément Flash créé.\r\n   * @private\r\n   */\r\n  private static create(duration?:number, type?:string):HTMLElement\r\n  {\r\n    let lastFlashBox = document.querySelector('flash') as HTMLElement;\r\n    let template = null;\r\n    if(lastFlashBox)\r\n    {lastFlashBox.remove();}\r\n\r\n    (undefined != type)?\r\n    type = \"flashtype-\"+type:\r\n    type = \"\";\r\n\r\n    (Number.isInteger(this.TEMPLATE))?\r\n    template = this.TEMPLATE:\r\n    template = null;\r\n\r\n    if(!this.TEMPLATE)template = 1;\r\n    \r\n    let flashBox = document.createElement('flash');\r\n    flashBox.role = \"alert\"\r\n    flashBox.setAttribute('class',`flash-box ${type}`)\r\n    if(undefined !== duration && duration > 0)\r\n    {flashBox.setAttribute('duration', `${duration}`);}\r\n    if(template)flashBox.setAttribute('template',`${template}`);\r\n\r\n    return flashBox;\r\n  }\r\n  /**\r\n   * Returns an SVG representation as a string.\r\n   *\r\n   * @param name - The name of the icon to use.\r\n   * @returns The SVG representation as a string.\r\n   */\r\n  private static async svg(name: string): Promise<string> {\r\n    let names = [\"success\", \"danger\", \"warning\", \"info\"];\r\n    if (undefined !== name && names.includes(name)) {\r\n      try {\r\n        const flashIcon = sessionStorage.getItem(name);\r\n        if(flashIcon)return flashIcon;\r\n        const svgUrl =  `https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/flash/dist/assets/icons/${name}.svg`;\r\n        const response = await fetch(svgUrl);\r\n        const data = await response.text();\r\n        if(!response.ok){console.error(\"Erreur lors du chargement du fichier SVG:\", data);}\r\n        sessionStorage.setItem(name, data);\r\n        return data;\r\n      } catch (e) {\r\n        console.error(\"Erreur lors de l'importation de l'icon\", e);\r\n        return \"\";\r\n      }\r\n    } else {\r\n      return name;\r\n    }\r\n  }\r\n}\r\n\r\n","import Utils from \"@easylibs/utils\";\r\nimport Animation from \"@easylibs/animation\";\r\n\r\ndeclare type RunnerOptions = {\r\n  modal?: HTMLElement\r\n  container?: HTMLElement,\r\n  animation?:{type:string,position:string},\r\n  tone?:boolean\r\n};\r\n\r\nexport default class Runner{\r\n  private modal: Element;\r\n  private tone: boolean | null;\r\n  private volume: number;\r\n  private duration: number;\r\n  private titre?: string;\r\n  private container?: HTMLElement;\r\n  private animation:{type:string,position:string};\r\n  private closeButton?:HTMLElement;\r\n  private openButton?:HTMLElement;\r\n  /**\r\n   * Cette classe  encapsule la logique liée à la manipulation des modals, \r\n   * y compris leur ouverture, leur fermeture, la gestion de l'audio, de la durée et de l'animation. \r\n   * Elle fournit une interface simple pour interagir avec les modals\r\n   * @param modal L'élément modal à manipuler.\r\n   * @param container Le conteneur dans lequel insérer la modal (optionnel).\r\n   * @param animation Les options d'animation de la modal (optionnel).\r\n   */\r\n  constructor(options:RunnerOptions) {\r\n    this.modal = options.modal;\r\n    this.tone = options.tone ? null : null;\r\n    this.volume = parseInt(this.modal.getAttribute('volume') || '1', 10);\r\n    this.duration = parseInt(this.modal.getAttribute('duration')||\"0\", 10);\r\n    this.modal.setAttribute('aria-hidden', 'true');\r\n    this.container = options.container;\r\n    this.animation =  options.animation ? options.animation : {type:'fade',position:'top'};\r\n    this.closeButton;\r\n    this.openButton;\r\n    this.autoClose();\r\n  }\r\n  /**\r\n   * Méthode pour fermer la modal.\r\n   */\r\n  public close = (): void => {\r\n    const animation = new Animation();\r\n    const modal = this.modal;\r\n    modal.setAttribute('aria-hidden', 'true');\r\n    animation.animeOut({\r\n      element:modal as HTMLElement,\r\n      display:undefined,\r\n      delay:350,\r\n      closeButton:this.closeButton\r\n    },this.animProps);\r\n  };\r\n  /**\r\n   * Méthode pour ouvrir la modal.\r\n   */\r\n  public open(){\r\n    if(this.tone) {\r\n      const toneUrl = \"https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/flash/dist/assets/tone.ogg\";\r\n      const tone = Utils.setAudio(toneUrl);\r\n     tone.volume = this.volume;\r\n     tone.play();\r\n    }\r\n    const animation = new Animation();\r\n    const modal = this.modal;\r\n    animation.animeIn({element:modal as HTMLElement,display:'flex'},this.animProps);\r\n    const container = this.container;\r\n    const existingFlash = document.querySelector('flash');\r\n    if(existingFlash)document.body.removeChild(existingFlash);\r\n    if(undefined !== container){\r\n      container.insertBefore(modal, container.firstChild);\r\n      this.clearProperties(this.modal);\r\n    }else{\r\n      document.body.insertBefore(modal, document.body.firstChild);\r\n      this.clearProperties(this.modal);\r\n    }\r\n    \r\n    modal.setAttribute('aria-hidden', 'false');\r\n    this.closeButton = modal.querySelector('.flash-close-button') as HTMLElement;\r\n    if(!this.closeButton){\r\n      this.closeButton = modal.querySelector('[_close_]') as HTMLElement;\r\n    }\r\n    this.closeButton?.addEventListener('click', this.close);\r\n  }\r\n  /**\r\n   * Méthode pour gérer la fermeture automatique de la modal.\r\n   */\r\n  private autoClose = (): void =>{\r\n    if(this.duration > 0) {\r\n      setTimeout(() => {\r\n        this.close();\r\n      }, this.duration);\r\n    }\r\n  }\r\n  private get animProps(){\r\n    return {\r\n      animationType:this.animation.type,\r\n      animationPosition:this.animation.position\r\n    };\r\n  }\r\n  /**\r\n   * Méthode interne pour nettoyer les attributs de la modal.\r\n   * @param modal L'élément modal à nettoyer.\r\n   */\r\n  private clearProperties(modal:Element){\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      modal.removeAttribute('message');\r\n      modal.removeAttribute('duration');\r\n      modal.removeAttribute('icon');\r\n      modal.removeAttribute('tone');\r\n      modal.removeAttribute('volume');\r\n      modal.removeAttribute('container');\r\n      modal.removeAttribute('closeButton');\r\n    });\r\n  }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"animation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"animation\"] = factory();\n\telse\n\t\troot[\"animation\"] = factory();\n})(self, () => {\nreturn ","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","import { loadCSSAnimation } from \"./loader\";\r\nimport { AnimeOptions, LoaderOptions } from \"./types\";\r\n\r\n/**\r\n   * Effectue une animation de commutation sur un élément HTML spécifié.\r\n   * @param element - L'élément HTML sur lequel l'animation doit être appliquée.\r\n   * @param fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa.\r\n   * @param animation - Les informations sur le type et la position de l'animation (facultatif).\r\n   */\r\nfunction switchAnimation(\r\n    element: HTMLElement,\r\n    fromInToOut: boolean,\r\n    animCSSProps?:LoaderOptions|null,\r\n    clearAfterApplying?: boolean\r\n  ): void {\r\n    if (animCSSProps) {\r\n      const animeType = animCSSProps.animationType ?? \"fade\";\r\n      const animePosition = animCSSProps.animationPosition ?? \"top\";\r\n      loadCSSAnimation(animCSSProps); // Charge les animations CSS si ce n'est pas déjà fait.\r\n      if (fromInToOut) {\r\n        element.classList.remove(`${animeType}-out-${animePosition}`);\r\n        element.classList.add(`${animeType}-in-${animePosition}`);\r\n\r\n        if (clearAfterApplying && clearAfterApplying === true) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-in-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        element.classList.remove(`${animeType}-in-${animePosition}`);\r\n        element.classList.add(`${animeType}-out-${animePosition}`);\r\n\r\n        if (clearAfterApplying && clearAfterApplying === true) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-out-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\nexport function getElement(options: AnimeOptions): { element: HTMLElement; animateElement?: HTMLElement } {\r\n    const _element = options.element;\r\n    return {\r\n      element: _element instanceof HTMLElement ? _element : _element?.element,\r\n      animateElement: _element instanceof HTMLElement ? undefined : _element?.animateElement,\r\n    };\r\n  }\r\n  \r\nexport function applyAnimation(\r\n  element: HTMLElement, \r\n  animateElement: HTMLElement | undefined, \r\n  fromInToOut: boolean, \r\n  options: AnimeOptions,\r\n  animCSSProps?:LoaderOptions): void {\r\n    switchAnimation(animateElement ?? element, fromInToOut, animCSSProps);\r\n    if (options.display !== null) {\r\n      setTimeout(() => {\r\n        element.style.display = options.display ?? \"none\";\r\n      }, options.delay || 0);\r\n    } else {\r\n      setTimeout(() => {\r\n        element.remove();\r\n      }, options.delay || 0);\r\n    }\r\n  }\r\n  ","import path from \"path\";\r\nimport { LoaderOptions } from \"./types\";\r\n\r\n/**\r\n * Fonction principale pour charger, transformer et appliquer le mixin avec des paramètres optionnels.\r\n */\r\nexport function loadCSSAnimation(options:LoaderOptions) {\r\n    fetchSCSS(options.animationType)\r\n      .then((SCSSContent:string) => {\r\n        const mixinName = `${options.animationType}-${options.animationEnter}-${options.animationPosition}`;\r\n        const css = convertMixinToCSS(SCSSContent, mixinName, options.animCSSProps);\r\n        console.log(css)\r\n        if (css) {\r\n          addCSSToDocument(css); // Ajoute le CSS transformé à la balise <style>\r\n        } else {\r\n          console.error('Mixin non trouvé.');\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n}\r\n\r\n/**\r\n * Fonction pour charger le contenu d'un fichier SCSS\r\n */\r\nfunction fetchSCSS(animationType:string) {\r\n    return new Promise((resolve, reject) => {\r\n      // Utiliser AJAX, fetch ou une autre méthode pour charger le fichier SCSS\r\n      const url = path.resolve(__dirname, `node_modules/@easylibs/animation/dist/assets/styles/${animationType}.scss`);\r\n      console.log({url})\r\n      fetch(url)\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Erreur lors du chargement du fichier SCSS');\r\n          }\r\n          return response.text();\r\n        })\r\n        .then(data => resolve(data))\r\n        .catch(error => reject(error));\r\n    });\r\n}\r\n\r\n/**\r\n * Fonction pour trouver et convertir un mixin en CSS, avec gestion des paramètres optionnels.\r\n */\r\nfunction convertMixinToCSS(SCSSContent:string, mixinName:string, animCSSProps?:Record<string,any>) {\r\n    // Recherche le mixin et les keyframes associées\r\n    const regex = new RegExp(`@mixin ${mixinName}\\\\((.*?)\\\\) {([\\\\s\\\\S]*?)}\\\\s*@keyframes`, 'm');\r\n    const match = regex.exec(SCSSContent);\r\n    console.log({match,match2:match[2]})\r\n    if (match && match[2]) {\r\n        let mixinContent = match[2];\r\n        // Vérifie si des animCSSProps ont été fournis avant de tenter de les remplacer\r\n        if (animCSSProps) {\r\n            Object.keys(animCSSProps).forEach(key => {\r\n                const paramRegex = new RegExp(`\\\\$${key}`, 'g');\r\n                mixinContent = mixinContent.replace(paramRegex, animCSSProps[key]);\r\n            });\r\n        }\r\n        // Ajoute les keyframes associées\r\n        console.log({mixinName})\r\n        const keyframesName = mixinName.replace(/-/g, '_');\r\n        const keyframesRegex = new RegExp(`@keyframes ${keyframesName} {([\\\\s\\\\S]*?)}\\\\s*`, 'm');\r\n        const keyframesMatch = keyframesRegex.exec(SCSSContent);\r\n        if (keyframesMatch) {\r\n            mixinContent += `@keyframes ${keyframesName} {${keyframesMatch[1]}}`;\r\n        }\r\n        console.log({mixinContent})\r\n        return mixinContent;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Ajoute ou met à jour une balise <style> avec le CSS généré\r\n */\r\nfunction addCSSToDocument(css:string) {\r\n    let styleTag = document.getElementById('@animation-style');\r\n    if (!styleTag) {\r\n      styleTag = document.createElement('style');\r\n      styleTag.id = '@animation-style';\r\n      document.head.appendChild(styleTag);\r\n    }\r\n    styleTag.innerHTML += css; // Ajoute le nouveau CSS à la balise <style>\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { applyAnimation, getElement } from \"./scripts/helpers\";\r\nimport { AnimeOptions, LoaderOptions } from \"./scripts/types\";\r\n\r\n/**\r\n * Provides animation functionalities for HTML elements.\r\n */\r\nexport default class Animation {\r\n  /**\r\n   * Stops the propagation of the given event.\r\n   * @param e The event to stop propagation for.\r\n   */\r\n  private static stopPropagation(e: Event): void {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Performs an entrance animation on the specified HTML element.\r\n   * @param options Configuration options for the animation.\r\n   */\r\n  public animeIn(options: AnimeOptions, animCSSProps?:LoaderOptions|null): void {\r\n    const { element, animateElement } = getElement(options);\r\n    const fromInToOut = true;\r\n    applyAnimation(element, animateElement, fromInToOut, options,animCSSProps);\r\n  }\r\n\r\n  /**\r\n   * Performs an exit animation on the specified HTML element, then hides or removes it.\r\n   * @param options Configuration options for the animation.\r\n   */\r\n  public animeOut(options: AnimeOptions,animCSSProps?:LoaderOptions|null): void {\r\n    const { element, animateElement } = getElement(options);\r\n    const fromInToOut = false;\r\n    applyAnimation(element, animateElement, fromInToOut, options, animCSSProps);\r\n  }\r\n\r\n  /**\r\n   * Performs either an entrance or exit animation on the specified HTML element in response to open and close button events.\r\n   * @param options Configuration options for the animation, including elements and buttons involved.\r\n   */\r\n  public animeInOut(options: AnimeOptions): void {\r\n    let modalIsOpen = false;\r\n    const toggleModal = () => {\r\n      if (!modalIsOpen) {\r\n        this.animeIn(options);\r\n      } else {\r\n        this.animeOut(options);\r\n      }\r\n      modalIsOpen = !modalIsOpen;\r\n    };\r\n\r\n    options.openButton?.addEventListener(\"click\", toggleModal);\r\n    options.closeButton?.addEventListener(\"click\", toggleModal);\r\n  }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","declare type RegexType =\r\n  | \"email\"\r\n  | \"phone-number\"\r\n  | \"number\"\r\n  | \"strong-password\"\r\n  | \"default-text\"\r\n  | \"fr-text\"\r\n  | \"en-text\"\r\n  | \"tr-text\"\r\n  | \"url-protocol\"\r\n  | \"url-domain\"\r\n  | \"url-ip\"\r\n  | \"url-port\"\r\n  | \"url-path\"\r\n  | \"url-query\"\r\n  | \"url-fragment\";\r\nexport default class Utils {\r\n  /**\r\n   * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n   * @param audioPath Le chemin de la source audio.\r\n   * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n   * @returns L'élément audio créé.\r\n   */\r\n  public static setAudio(audioPath: string, classname = null) {\r\n    const audio = document.createElement(\"audio\");\r\n    if (classname != null) {\r\n      audio.classList.add(classname);\r\n    }\r\n    const source = document.createElement(\"source\");\r\n    source.src = audioPath;\r\n    source.type = \"audio/mpeg\";\r\n    audio.appendChild(source);\r\n    return audio;\r\n  }\r\n  /**\r\n   * Converts an HTML string into an HTML element or a collection of HTML elements.\r\n   *\r\n   * @param textHtml - The HTML string to convert.\r\n   * @param targetName - The tag name of the target HTML element to create.\r\n   * @param children - A boolean indicating whether to return all children of the target element.\r\n   * @returns - Returns the first child of the target element if `children` is `false`, otherwise returns a collection of the element's children. Returns `null` if there are no children.\r\n   *\r\n   * This method creates a new HTML element of the type specified by `targetName`, sets its inner HTML to `textHtml`, and returns either the first child of this element or all its children as an HTMLCollection, depending on the value of `children`.\r\n   * If the HTML content generates no children, the method returns `null`.\r\n   */\r\n  public static textToHTMLElement(\r\n    textHtml: string,\r\n    targetName = \"div\",\r\n    children: boolean = false\r\n  ): Element | HTMLCollection | null {\r\n    const target = document.createElement(`${targetName}`);\r\n    target.innerHTML = textHtml;\r\n    if (true === children) {\r\n      return target.children;\r\n    }\r\n    return target.firstElementChild;\r\n  }\r\n  /**\r\n   * retourne un élément du dom\r\n   */\r\n  public static $$(element: any) {\r\n    if (typeof element !== \"string\") {\r\n      return element;\r\n    } else if (typeof element === \"string\") {\r\n      const collection = document.querySelectorAll(`${element}`);\r\n      const el = document.querySelector(`${element}`);\r\n      if (collection !== null && collection.length > 1) {\r\n        return collection;\r\n      }\r\n      if (el !== null) {\r\n        return el;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n   * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n   * @param nodeList Un objet NodeList ou un élément HTML.\r\n   * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n   * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n   * @returns\r\n   */\r\n  public static processNodes(\r\n    nodeList: any,\r\n    callback = (node: any, index?: number) => {}\r\n  ) {\r\n    if (nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n      return Array.from(nodeList).forEach((node, i) => {\r\n        callback(node, i);\r\n      });\r\n    }\r\n    if (null !== nodeList && undefined !== nodeList) {\r\n      return callback(nodeList);\r\n    }\r\n  }\r\n  /**\r\n   * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n   * @param type Le type d'expression régulière demandé.\r\n   * @returns L'expression régulière correspondante.\r\n   */\r\n  public static getRegexp(type: RegexType): RegExp {\r\n    switch (type) {\r\n      case \"email\":\r\n        return new RegExp(\r\n          /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i\r\n        );\r\n      case \"phone-number\":\r\n        return new RegExp(/^(0|\\+[1-9][0-9]{0,2}) ?[0-9]+$/);\r\n      case \"number\":\r\n        return new RegExp(/^[-+]?[0-9]*\\.?[0-9]+$/);\r\n      case \"strong-password\":\r\n        return new RegExp(\r\n          /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\r\n        );\r\n      case \"url-protocol\":\r\n        return new RegExp(/^(https?:\\/\\/)$/, \"i\");\r\n      case \"url-domain\":\r\n        return new RegExp(/^((([a-zA-Z0-9]{1,})[.-]?)+[a-zA-Z]{2,})$/, \"i\");\r\n      case \"url-ip\":\r\n        return new RegExp(\r\n          /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\r\n          \"i\"\r\n        );\r\n      case \"url-port\":\r\n        return new RegExp(\r\n          /^:(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3})$/,\r\n          \"i\"\r\n        );\r\n      case \"url-path\":\r\n        return new RegExp(/^(\\.\\/)?[-a-zA-Z\\d%_.~+\\/]*$/, \"i\");\r\n      case \"url-query\":\r\n        return new RegExp(/^(\\?[;&a-zA-Z\\d%_.~+=-]*)$/, \"i\");\r\n      case \"url-fragment\":\r\n        return new RegExp(/^#[-a-zA-Z\\d%_.~+/=?&;:!*'()]*$/, \"i\");\r\n      case \"default-text\":\r\n        return new RegExp(\r\n          /^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/\r\n        );\r\n      case \"fr-text\":\r\n        return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n      case \"en-text\":\r\n        return new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n      case \"tr-text\":\r\n        return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n      default:\r\n        throw new Error(\"Type d'expression régulière non pris en charge.\");\r\n    }\r\n  }\r\n  /**\r\n   * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement.\r\n   * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n   * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n   * @returns Un élément HTML représentant une zone interdite.\r\n   */\r\n  private static forbiddener(tag: string = \"td\", backgroundColor?: string) {\r\n    let forbiddenTag = document.createElement(tag);\r\n    forbiddenTag.setAttribute(\"class\", \"forbidden\");\r\n    const style = {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: \".7\",\r\n      zIndex: \"10\",\r\n      backgroundColor: backgroundColor ? backgroundColor : \"#FFFFFF\",\r\n    };\r\n    Object.assign(forbiddenTag.style, style);\r\n    return forbiddenTag as HTMLElement;\r\n  }\r\n  /**\r\n   * Réduit une chaîne de texte.\r\n   * @param text La chaîne de texte à réduire.\r\n   * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n   * @returns La chaîne de texte réduite.\r\n   */\r\n  public static truncateChars(text: string, maxLength: number = 14): string {\r\n    text = typeof text === \"string\" ? text.trim() : \"\";\r\n    if (text.length > maxLength) {\r\n      return `${text.substring(0, maxLength)}...`;\r\n    }\r\n    return text;\r\n  }\r\n  /**\r\n   * Changes the input text type to a number type and performs additional processing\r\n   * based on the specified parameters.\r\n   *\r\n   * @param attr - The CSS selector for the input elements to be processed.\r\n   * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n   * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n   * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n   */\r\n  public static changeInputTextTypeToNumberType(\r\n    attr: string,\r\n    limit?: number | null,\r\n    priceType: boolean = false,\r\n    decimal?: number\r\n  ) {\r\n    this.processNodes(this.$$(attr), function (element) {\r\n      let input = element as HTMLInputElement;\r\n      if (input) {\r\n        input.addEventListener(\"input\", function () {\r\n          const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n          if (decimal) {\r\n            const getValue = input.value.replace(regExp, \"\");\r\n            input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n          } else {\r\n            input.value = input.value.replace(regExp, \"\");\r\n          }\r\n          if (limit && parseInt(input.value) > limit) {\r\n            input.value = `${limit}`;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n   * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n   * and the background color for the forbidden tag.\r\n   *\r\n   * @param tag - The tag of the element to be disabled (default: \"td\").\r\n   * @param target - The target element to be disabled (default: undefined).\r\n   * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n   * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n   */\r\n  public static disablor(\r\n    tag = \"td\",\r\n    target?: HTMLElement,\r\n    trigger?: HTMLElement,\r\n    backgroundColor?: string\r\n  ) {\r\n    const buttons = document.querySelectorAll(\"[disablor],[self-disablor]\");\r\n    try {\r\n      if (!trigger && !buttons) {\r\n        throw new Error(\r\n          \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n        );\r\n      }\r\n      this.processNodes(buttons, (button: HTMLElement) => {\r\n        button.addEventListener(\"click\", () => {\r\n          const self = button.hasAttribute(\"self-disablor\");\r\n          let item = self\r\n            ? button\r\n            : (button.closest(\"[disablor]\") as HTMLElement);\r\n\r\n          if (!target && !item) {\r\n            throw new Error(\r\n              \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n          }\r\n          if (item) {\r\n            item.style.position = \"relative\";\r\n            item.insertBefore(\r\n              this.forbiddener(tag, backgroundColor),\r\n              item.firstChild\r\n            );\r\n            if (item instanceof HTMLButtonElement) {\r\n              item.setAttribute(\"disabled\", \"true\");\r\n            }\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Une erreur s'est produit: \", error);\r\n    }\r\n  }\r\n  /**\r\n   * Adds an asterisk indicator to labels associated with required form fields.\r\n   * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n   * of the 'required-field' attribute. The function utilizes the processNodes method\r\n   * to iterate through the matched labels and append the asterisk.\r\n   */\r\n  public static setAsteriskToRequiredField() \r\n  {\r\n    const setIcon = (svgString:string)=>{\r\n      const asterisk = this.textToHTMLElement(svgString) as HTMLElement;\r\n      const labels = document.querySelectorAll(\"label[required-field]\");\r\n      asterisk.style.color = \"#f89a9b\";\r\n      asterisk.style.width = \"10px\";\r\n      asterisk.style.height = \"10px\";\r\n      if (labels) {\r\n        this.processNodes(labels, (label: HTMLLabelElement) => {\r\n          const clonedAsterisk = asterisk.cloneNode(true);\r\n          label.appendChild(clonedAsterisk);\r\n        });\r\n      }\r\n    }\r\n    const cacheIcon = sessionStorage.getItem(\"asterisk\");\r\n    if(cacheIcon)return setIcon(cacheIcon);\r\n    const svgUrl = \"https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/utils/dist/assets/asterisk.svg\";\r\n    fetch(svgUrl)\r\n      .then((response) => response.text())\r\n      .then((svgString) => {\r\n        setIcon(svgString)\r\n        sessionStorage.setItem(\"asterisk\", svgString);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur lors du chargement du fichier SVG:\", error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method checks if the object contains a key with the given substring.\r\n   * @param object The object to be searched.\r\n   * @param substring The substring to search for.\r\n   * @param getKey An optional parameter to determine the type of return value.\r\n   *               If true, the method will return the key as a string.\r\n   *               If false or not provided, the method will return the value corresponding to the key.\r\n   * @returns The value or key of the first matching property if found, otherwise false.\r\n   */\r\n  public static hasKeyWithNameSubstring(\r\n    object: any,\r\n    substring: string,\r\n    getKey?: boolean\r\n  ) {\r\n    for (let key in object) {\r\n      if (key.includes(substring)) {\r\n        if (undefined === getKey || false === getKey) {\r\n          return object[key];\r\n        }\r\n        if (true === getKey) {\r\n          return key;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * This method searches for an object's property by its key or short key.\r\n   * @param object The object to be searched.\r\n   * @param keyOrShortKey The key or short key to search for.\r\n   * @param key An optional parameter to determine the type of return value.\r\n   *            If true, the function will return the key as a string.\r\n   *            If false or not provided, the function will return the value corresponding to the key.\r\n   * @returns The value or key of the first matching property if found, otherwise false.\r\n   */\r\n  public static findObjectDataByKeyName(\r\n    object: any,\r\n    keyOrShorKey: string,\r\n    key?: boolean\r\n  ) {\r\n    Object.keys(object).forEach((key) => {\r\n      if (key.includes(keyOrShorKey)) {\r\n        return object[key];\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n  /**\r\n * Finds the first occurrence of a character in the given string up to the specified limit.\r\n * \r\n * @param string - The string to search.\r\n * @param limit - The limit up to which to search for the character.\r\n * @param returnBool - Optional. If true, returns a boolean indicating whether the character was found. If false or not provided, returns the character found or null if not found.\r\n * @returns  Returns the character found, a boolean indicating whether the character was found (if `returnBool` is true), or null if the character was not found.\r\n */\r\n  public static findChar(\r\n    string: string,\r\n    limit: number,\r\n    returnBool: boolean = false\r\n  ) {\r\n    for (let i = 0; i <= limit; i++) {\r\n      const index = string.indexOf(i.toString());\r\n      if (index !== -1) {\r\n        return returnBool ? true : i.toString();\r\n      }\r\n    }\r\n    return returnBool ? false : null;\r\n  }\r\n\r\n  public static findComputedStyle(\r\n    element: HTMLElement,\r\n    property: string | Array<string>\r\n  ): string {\r\n    const styles = window.getComputedStyle(element);\r\n    const propertiesObject: any = {};\r\n    try {\r\n      if (!element) {\r\n        throw new Error(\"Element not found\");\r\n      }\r\n      if (!property) {\r\n        throw new Error(\"Property is required\");\r\n      }\r\n      if (Array.isArray(property) && property.length > 0) {\r\n        property.forEach((props) => {\r\n          propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n        });\r\n        return propertiesObject;\r\n      }\r\n      if (typeof property === \"string\") {\r\n        return styles.getPropertyValue(`${property}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  /**\r\n   * A function to escape special characters in a string using the DOM API.\r\n   *\r\n   * @param str - The input string to be escaped.\r\n   * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n   */\r\n  public static escape(str?: string): string {\r\n    if (!str) {\r\n      return \"\";\r\n    }\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(document.createTextNode(str));\r\n    return div.innerHTML;\r\n  }\r\n  /**\r\n   * This function takes an HTMLElement and a target string.\r\n   * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n   * If no such element is found, it returns null.\r\n   * @param referent - The starting point of the search.\r\n   * @param target - The CSS selector used to find the desired element.\r\n   * @returns The first Element with a matching target, or null if no such element is found.\r\n   */\r\n  public static findHTMLElementBy(\r\n    referent: HTMLElement,\r\n    target: string\r\n  ): Element | null {\r\n    let currentElement = referent as Element | null;\r\n    if (currentElement) {\r\n      while ((currentElement = currentElement.previousElementSibling)) {\r\n        const charCounterSpan = currentElement.querySelector(target);\r\n        if (charCounterSpan) {\r\n          return charCounterSpan;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n   * If no attributes are provided, it returns an empty string.\r\n   * @param attributes - An object containing HTML attributes.\r\n   * @returns A string representing the attributes.\r\n   */\r\n  public static formatHTMLAttributes(attributes: any) {\r\n    let attrs = \"\";\r\n    if (attributes) {\r\n      for (const [key, value] of Object.entries(attributes)) {\r\n        if (key) {\r\n          attrs += `${key}='${value}'`;\r\n        }\r\n      }\r\n    }\r\n    return attrs.trim();\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(653);\n"],"names":["root","factory","exports","module","define","amd","self","FormatParamsToObject","options","properties","this","ACCEPTED_PARAMS","length","forEach","key","hasOwnProperty","Object","assign","getProperties","Flash","add","container","datas","undefined","flashBox","document","querySelector","Error","message","escape","getAttribute","icon","Boolean","duration","parseInt","type","title","closeButton","tone","template","TEMPLATE","isNaN","String","error","console","flash","create","OPTIONS","run","_template","append","Array","from","modal","open","svg","replace","button","header","Number","isInteger","parseTemplate","textToHTMLElement","regexp","matches","matchAll","promises","keys","match","push","results","Promise","all","index","e","lastFlashBox","remove","createElement","role","setAttribute","name","includes","flashIcon","sessionStorage","getItem","svgUrl","response","fetch","data","text","ok","setItem","constructor","close","animation","animeOut","element","display","delay","animProps","autoClose","setTimeout","volume","position","openButton","toneUrl","setAudio","play","animeIn","existingFlash","body","removeChild","insertBefore","firstChild","clearProperties","addEventListener","animationType","animationPosition","removeAttribute","assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","_typeof","sep","dir","base","_format","parse","ret","delimiter","win32","loader_1","__webpack_require__","getElement","_element","HTMLElement","animateElement","applyAnimation","fromInToOut","animCSSProps","clearAfterApplying","animeType","_a","animePosition","_b","loadCSSAnimation","classList","concat","switchAnimation","style","path_1","__importDefault","reject","url","__dirname","log","then","SCSSContent","css","mixinName","regex","RegExp","exec","match2","mixinContent","paramRegex","keyframesName","keyframesMatch","convertMixinToCSS","animationEnter","styleTag","getElementById","id","head","appendChild","innerHTML","addCSSToDocument","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","helpers_1","Animation","_classCallCheck","value","stopPropagation","_ref","_ref2","_this","modalIsOpen","toggleModal","definition","o","defineProperty","enumerable","get","obj","prop","prototype","Symbol","toStringTag","Utils","audioPath","classname","audio","source","src","textHtml","targetName","children","target","firstElementChild","collection","querySelectorAll","el","nodeList","callback","node","NodeList","isArray","tag","backgroundColor","forbiddenTag","width","height","opacity","zIndex","maxLength","trim","substring","attr","limit","priceType","decimal","processNodes","$$","input","regExp","getValue","parseFloat","toFixed","trigger","buttons","item","hasAttribute","closest","forbiddener","HTMLButtonElement","_this2","setIcon","svgString","asterisk","labels","color","label","clonedAsterisk","cloneNode","cacheIcon","object","getKey","keyOrShorKey","string","returnBool","indexOf","toString","property","styles","window","getComputedStyle","propertiesObject","props","getPropertyValue","str","div","createTextNode","referent","currentElement","previousElementSibling","charCounterSpan","attributes","attrs","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","_typeof2","loaded","r","nmd","paths"],"sourceRoot":""}
{"version":3,"file":"flash.min.js","mappings":"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","sources":["webpack://@easylibs/flash/webpack/universalModuleDefinition","webpack://@easylibs/flash/./src/flash.ts","webpack://@easylibs/flash/./src/scripts/runner.ts","webpack://@easylibs/flash/@easylibs/animation/webpack/universalModuleDefinition","webpack://@easylibs/flash/@easylibs/animation/src/animation.ts","webpack://@easylibs/flash/@easylibs/utils/webpack/universalModuleDefinition","webpack://@easylibs/flash/@easylibs/utils/webpack/bootstrap","webpack://@easylibs/flash/@easylibs/utils/webpack/runtime/define property getters","webpack://@easylibs/flash/@easylibs/utils/webpack/runtime/hasOwnProperty shorthand","webpack://@easylibs/flash/@easylibs/utils/webpack/runtime/make namespace object","webpack://@easylibs/flash/@easylibs/utils/src/utils.ts","webpack://@easylibs/flash/webpack/bootstrap","webpack://@easylibs/flash/webpack/runtime/make namespace object","webpack://@easylibs/flash/webpack/runtime/node module decorator","webpack://@easylibs/flash/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"flash\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flash\"] = factory();\n\telse\n\t\troot[\"flash\"] = factory();\n})(self, () => {\nreturn ","import Runner from \"./scripts/runner\";\r\nimport { FlashOptions } from \"./scripts/types\";\r\nimport \"./assets/scss/flash.scss\";\r\nimport Utils from \"@easylibs/utils\";\r\nclass FormatParamsToObject\r\n{\r\n    static ACCEPTED_PARAMS: Array<string> = [];\r\n    protected properties: Object = {};\r\n\r\n    public constructor(options:Record<string,any>){\r\n        this.properties = {};\r\n        if(FormatParamsToObject.ACCEPTED_PARAMS.length>0){\r\n            FormatParamsToObject.ACCEPTED_PARAMS.forEach(key => {\r\n                if(options && options.hasOwnProperty(key)){\r\n                    Object.assign(this.properties,{[key]:options[key]})\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public getProperties(): any{\r\n        return this.properties;\r\n    }\r\n}\r\n\r\nFormatParamsToObject.ACCEPTED_PARAMS = [\r\n  \"message\",\"type\",\"duration\",\"title\",\"closeButton\",\r\n  \"container\",\"icon\",\"tone\"\r\n];\r\n\r\nexport default class Flash{\r\n  private static OPTIONS:FlashOptions;\r\n  public static TEMPLATE:string|number;\r\n  /**\r\n  * Adds a Flash message with the specified options.\r\n  * @param options\r\n  * @returns - The instance of the Flash class.\r\n  */\r\n  public static add(options?:FlashOptions, container?:HTMLElement): Flash\r\n  {\r\n    let datas:FlashOptions;\r\n    switch (options) {\r\n      case null:\r\n      case undefined:\r\n        const flashBox = document.querySelector(\"flash\") as HTMLElement;\r\n        try {\r\n          if(!flashBox){\r\n            throw new Error('No <flash></flash> element found in your HTML file');\r\n          }\r\n          const message = Utils.escape(flashBox.getAttribute(\"message\"));\r\n          const icon = Boolean(flashBox.getAttribute(\"icon\"));\r\n          const duration = parseInt(flashBox.getAttribute(\"duration\"));\r\n          const type = flashBox.getAttribute(\"type\") as any;\r\n          const title = flashBox.getAttribute(\"title\");\r\n          const closeButton = Boolean(flashBox.getAttribute(\"closeButton\"));\r\n          const tone = Boolean(flashBox.getAttribute(\"tone\"));\r\n          const template = flashBox.getAttribute(\"template\");\r\n          Flash.TEMPLATE = isNaN(parseInt(String(template))) ? undefined : parseInt(template);\r\n          datas = {message,icon,duration,type,title,closeButton,tone}\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n        break;\r\n      default:\r\n        datas = options;\r\n        break;\r\n    }\r\n    let properties = new FormatParamsToObject(datas).getProperties();\r\n    let flash = Flash.create(properties['duration'],properties['type']);\r\n    Flash.OPTIONS = datas;\r\n    Flash.OPTIONS.flashBox = flash;\r\n    Flash.OPTIONS.container = container;\r\n    Flash.run();\r\n    return new this;\r\n  }\r\n  /**\r\n   * Displays a Flash message with the specified options.\r\n   * @param options - The Flash message options.\r\n   * @param container - The container in which to display the Flash message (optional).\r\n   * @returns - The instance of the Flash class.\r\n   */\r\n  private static async run(): Promise<Flash>\r\n  {\r\n    if(Flash.OPTIONS){\r\n      const {container,flashBox,tone} = Flash.OPTIONS;\r\n      const _template = await Flash.template();\r\n      flashBox.append(...Array.from(_template));\r\n      let runner = new Runner({modal:flashBox,container,tone});\r\n      runner.open();\r\n    }\r\n    return new this;\r\n  }\r\n  /**\r\n   * Returns the HTML template for the Flash message.\r\n   * @param properties - Flash message properties.\r\n   * @returns - The HTML template for the Flash message.\r\n   */\r\n  private static async template(): Promise<HTMLCollection>\r\n  {\r\n    const template =  Flash.TEMPLATE;\r\n    const properties = Flash.OPTIONS;\r\n    let svg:string;\r\n    if(properties.icon && properties.type){\r\n      svg = await Flash.svg(properties.type)\r\n    }\r\n    const icon = svg ? `<h6 class=\"flash-icon\">${svg.replace('\"',\"\")}</h6>` : \"\";\r\n    const title = (properties.title && \"\" !== properties.title) ? `<p class=\"flash-title\">${properties.title}</p>` : \"\";\r\n    const button =  (true === Boolean(properties.closeButton))?`<div aria-label=\"Close message\" _close_></div>`:\"\";\r\n    const header = ''!== title || ''!== button ? `<span class=\"flash-header\">${title}${button}</span>`:\"\";\r\n    let _template: string;\r\n    if(!template || Number.isInteger(template)){\r\n      switch (template) {\r\n        case 2:\r\n            _template = `${button}<span class=\"flash-content\">\r\n                ${icon}\r\n                <p class=\"flash-message\">${properties.message}</p>\r\n            </span>`;\r\n            break;\r\n        default:\r\n              _template = `${header}\r\n                      <span class=\"flash-content\">\r\n                          ${icon}\r\n                          <p class=\"text\">${properties.message}</p>\r\n                      </span>`;\r\n              break;\r\n      }\r\n    }else if(typeof template == \"string\"){\r\n      return Flash.parseTemplate(template,properties);\r\n    }\r\n    console.log(Utils.textToHTMLElement(_template,\"div\",true));\r\n    return Utils.textToHTMLElement(_template,\"div\",true) as HTMLCollection;\r\n  }\r\n  private static async parseTemplate(template: string, options: FlashOptions): Promise<HTMLCollection> {\r\n    const regexp = /{{(.*?)}}/g;\r\n    let matches = template.matchAll(regexp);\r\n    let promises = []; // Collecter les promesses\r\n    let keys = [];\r\n    for (let match of matches) {\r\n      let key = match[1];\r\n      if (key === \"icon\" && options[key] === true && 'type' in options) {\r\n        promises.push(Flash.svg(options['type']));\r\n        keys.push(match[0]); // Stocker la chaîne à remplacer\r\n      }\r\n    }\r\n    let results = await Promise.all(promises); // Attendre les résultats des promesses\r\n    keys.forEach((key, index) => { // Appliquer les résultats dans le template\r\n      template = template.replace(key, results[index]);\r\n    });\r\n    template = template.replace(regexp, (match, key) => { // Remplacement synchrone pour les autres clés\r\n      if(key in options && options[key] !== undefined) {\r\n        return options[key];\r\n      };\r\n      return match;\r\n    });\r\n    try {\r\n      return Utils.textToHTMLElement(template, \"div\", true) as HTMLCollection;\r\n    } catch (e) {\r\n      throw new Error(\"Impossible de parser le modèle de notification.\");\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Crée un élément Flash avec les options spécifiées.\r\n   * @param duration - La durée d'affichage du message Flash (facultatif).\r\n   * @param type - Le type de message Flash (facultatif).\r\n   * @returns - L'élément Flash créé.\r\n   * @private\r\n   */\r\n  private static create(duration?:number, type?:string):HTMLElement\r\n  {\r\n    let lastFlashBox = document.querySelector('flash') as HTMLElement;\r\n    let template = null;\r\n    if(lastFlashBox)\r\n    {lastFlashBox.remove();}\r\n\r\n    (undefined != type)?\r\n    type = \"flashtype-\"+type:\r\n    type = \"\";\r\n\r\n    (Number.isInteger(this.TEMPLATE))?\r\n    template = this.TEMPLATE:\r\n    template = null;\r\n\r\n    if(!this.TEMPLATE)template = 1;\r\n    \r\n    let flashBox = document.createElement('flash');\r\n    flashBox.role = \"alert\"\r\n    flashBox.setAttribute('class',`flash-box ${type}`)\r\n    if(undefined !== duration && duration > 0)\r\n    {flashBox.setAttribute('duration', `${duration}`);}\r\n    if(template)flashBox.setAttribute('template',`${template}`);\r\n\r\n    return flashBox;\r\n  }\r\n  /**\r\n   * Returns an SVG representation as a string.\r\n   *\r\n   * @param name - The name of the icon to use.\r\n   * @returns The SVG representation as a string.\r\n   */\r\n  private static async svg(name: string): Promise<string> {\r\n    let names = [\"success\", \"danger\", \"warning\", \"info\"];\r\n    if (undefined !== name && names.includes(name)) {\r\n      try {\r\n        const flashIcon = sessionStorage.getItem(name);\r\n        if(flashIcon)return flashIcon;\r\n        const svgUrl =  `https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/flash/dist/assets/icons/${name}.svg`;\r\n        const response = await fetch(svgUrl);\r\n        const data = await response.text();\r\n        if(!response.ok){console.error(\"Erreur lors du chargement du fichier SVG:\", data);}\r\n        sessionStorage.setItem(name, data);\r\n        return data;\r\n      } catch (e) {\r\n        console.error(\"Erreur lors de l'importation de l'icon\", e);\r\n        return \"\";\r\n      }\r\n    } else {\r\n      return name;\r\n    }\r\n  }\r\n}\r\n\r\n","import Utils from \"@easylibs/utils\";\r\nimport Animation from \"@easylibs/animation\";\r\n\r\ndeclare type RunnerOptions = {\r\n  modal?: HTMLElement\r\n  container?: HTMLElement,\r\n  animation?:{type:string,position:string},\r\n  tone?:boolean\r\n};\r\n\r\nexport default class Runner{\r\n  private modal: Element;\r\n  private tone: boolean | null;\r\n  private volume: number;\r\n  private duration: number;\r\n  private titre?: string;\r\n  private container?: HTMLElement;\r\n  private animation:{type:string,position:string};\r\n  private closeButton?:HTMLElement;\r\n  private openButton?:HTMLElement;\r\n  /**\r\n   * Cette classe  encapsule la logique liée à la manipulation des modals, \r\n   * y compris leur ouverture, leur fermeture, la gestion de l'audio, de la durée et de l'animation. \r\n   * Elle fournit une interface simple pour interagir avec les modals\r\n   * @param modal L'élément modal à manipuler.\r\n   * @param container Le conteneur dans lequel insérer la modal (optionnel).\r\n   * @param animation Les options d'animation de la modal (optionnel).\r\n   */\r\n  constructor(options:RunnerOptions) {\r\n    this.modal = options.modal;\r\n    this.tone = options.tone ? null : null;\r\n    this.volume = parseInt(this.modal.getAttribute('volume') || '1', 10);\r\n    this.duration = parseInt(this.modal.getAttribute('duration')||\"0\", 10);\r\n    this.modal.setAttribute('aria-hidden', 'true');\r\n    this.container = options.container;\r\n    this.animation =  options.animation ? options.animation : {type:'fade',position:'top'};\r\n    this.closeButton;\r\n    this.openButton;\r\n    this.autoClose();\r\n  }\r\n  /**\r\n   * Méthode pour fermer la modal.\r\n   */\r\n  public close = (): void => {\r\n    const animation = new Animation();\r\n    const modal = this.modal;\r\n    modal.setAttribute('aria-hidden', 'true');\r\n    animation.animeOut({\r\n      element:modal as HTMLElement,\r\n      animation:this.animation,\r\n      display:undefined,\r\n      delay:350,\r\n      closeButton:this.closeButton\r\n    });\r\n  };\r\n  /**\r\n   * Méthode pour ouvrir la modal.\r\n   */\r\n  public open(){\r\n    if(this.tone) {\r\n      const toneUrl = \"https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/flash/dist/assets/tone.ogg\";\r\n      const tone = Utils.setAudio(toneUrl);\r\n     tone.volume = this.volume;\r\n     tone.play();\r\n    }\r\n    const animation = new Animation();\r\n    const modal = this.modal;\r\n    animation.animeIn({element:modal as HTMLElement,animation:this.animation,display:'flex'});\r\n    const container = this.container;\r\n    const existingFlash = document.querySelector('flash');\r\n    if(existingFlash)document.body.removeChild(existingFlash);\r\n    if(undefined !== container){\r\n      container.insertBefore(modal, container.firstChild);\r\n      this.clearProperties(this.modal);\r\n    }else{\r\n      document.body.insertBefore(modal, document.body.firstChild);\r\n      this.clearProperties(this.modal);\r\n    }\r\n    \r\n    modal.setAttribute('aria-hidden', 'false');\r\n    this.closeButton = modal.querySelector('.flash-close-button') as HTMLElement;\r\n    if(!this.closeButton){\r\n      this.closeButton = modal.querySelector('[_close_]') as HTMLElement;\r\n    }\r\n    this.closeButton?.addEventListener('click', this.close);\r\n  }\r\n  /**\r\n   * Méthode pour gérer la fermeture automatique de la modal.\r\n   */\r\n  private autoClose = (): void =>{\r\n    if(this.duration > 0) {\r\n      setTimeout(() => {\r\n        this.close();\r\n      }, this.duration);\r\n    }\r\n  }\r\n  /**\r\n   * Méthode interne pour nettoyer les attributs de la modal.\r\n   * @param modal L'élément modal à nettoyer.\r\n   */\r\n  private clearProperties(modal:Element){\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      modal.removeAttribute('message');\r\n      modal.removeAttribute('duration');\r\n      modal.removeAttribute('icon');\r\n      modal.removeAttribute('tone');\r\n      modal.removeAttribute('volume');\r\n      modal.removeAttribute('container');\r\n      modal.removeAttribute('closeButton');\r\n    });\r\n  }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"animation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"animation\"] = factory();\n\telse\n\t\troot[\"animation\"] = factory();\n})(self, () => {\nreturn ","declare type AnimeOptions = {\r\n  duration?: number; // Durée en millisecondes par défaut à 10\r\n  openButton?: HTMLElement;\r\n  element?: HTMLElement| {element:HTMLElement,animateElement:HTMLElement};\r\n  display?: string | null;\r\n  animation?: { type: string; position: string; clearAfterApplying?: boolean };\r\n  closeButton?: HTMLElement;\r\n  dispatchCloseEvent?: { key?: any; value: boolean };\r\n  delay?: number;\r\n  fromInToOut?: boolean;\r\n};\r\nexport default class Animation {\r\n  static stopPropagation(e: Event): void {\r\n    e.stopPropagation();\r\n  }\r\n  /**\r\n * Effectue une animation de commutation sur un élément HTML spécifié.\r\n * @param element - L'élément HTML sur lequel l'animation doit être appliquée.\r\n * @param fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa.\r\n * @param animation - Les informations sur le type et la position de l'animation (facultatif).\r\n */\r\n  private switchAnimation(\r\n    element: HTMLElement,\r\n    fromInToOut: boolean,\r\n    animation?: { type: string; position: string; clearAfterApplying?: boolean }\r\n  ): void {\r\n    if (animation !== undefined) {\r\n      const animeType = animation.type ?? \"fade\";\r\n      const animePosition = animation.position ?? \"top\";\r\n      const { clearAfterApplying } = animation;\r\n\r\n      if (fromInToOut) {\r\n        element.classList.remove(`${animeType}-out-${animePosition}`);\r\n        element.classList.add(`${animeType}-in-${animePosition}`);\r\n\r\n        if (clearAfterApplying && clearAfterApplying === true) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-in-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      } else {\r\n        element.classList.remove(`${animeType}-in-${animePosition}`);\r\n        element.classList.add(`${animeType}-out-${animePosition}`);\r\n\r\n        if (clearAfterApplying && clearAfterApplying === true) {\r\n          setTimeout(() => {\r\n            element.classList.remove(`${animeType}-out-${animePosition}`);\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n * Effectue une animation d'entrée sur un élément HTML spécifié.\r\n * @param options.element - L'élément HTML sur lequel l'animation d'entrée doit être appliquée.\r\n * @param options.animation - Les informations sur le type et la position de l'animation (facultatif).\r\n * @param options.display - La valeur de la propriété CSS \"display\" à appliquer à l'élément après l'animation (facultatif).\r\n * @param options.fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa lors de l'utilisation de la fonction `switchAnimation`.\r\n */\r\n  public animeIn<T extends AnimeOptions>(options: T): void {\r\n    const fromInToOut = options.fromInToOut ?? true;\r\n    const { animation } = options;\r\n    const _element = options.element;\r\n    const animateElement = _element instanceof HTMLElement ? undefined : _element?.animateElement;\r\n    const element = _element instanceof HTMLElement ? _element : _element?.element;\r\n\r\n    if (element) {\r\n      this.switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n\r\n      if (options.display !== null) {\r\n        element.style.display = options.display ?? \"block\";\r\n      }\r\n    }\r\n  }\r\n  /**\r\n * Effectue une animation de sortie sur un élément HTML spécifié, puis le masque ou le supprime.\r\n * @param options.element - L'élément HTML sur lequel l'animation d'entrée ou de sortie doit être appliquée.\r\n * @param options.display - La valeur de la propriété CSS \"display\" à appliquer à l'élément lors de l'animation (facultatif).\r\n * @param options.animation - Les informations sur le type et la position de l'animation (facultatif).\r\n * @param options.delay - Le délai en millisecondes avant de masquer ou de supprimer l'élément (facultatif).\r\n * @param options.closeButton - Le bouton de fermeture lié à l'élément (facultatif).\r\n * @param options.fromInToOut - Détermine si l'animation va de l'état \"in\" (entrée) à l'état \"out\" (sortie) ou vice versa.\r\n */\r\n  public animeOut<T extends AnimeOptions>(options: T): void {\r\n    const { animation } = options;\r\n    const _element = options.element;\r\n    const animateElement = _element instanceof HTMLElement ? undefined : _element?.animateElement;\r\n    const element = _element instanceof HTMLElement ? _element : _element?.element;\r\n    const fromInToOut = options.fromInToOut ?? false;\r\n    const { display, delay, closeButton } = options;\r\n\r\n    if (element && fromInToOut !== undefined) {\r\n      if (display) {\r\n        if (closeButton) {\r\n          closeButton.addEventListener(\"click\", () => {\r\n            this.switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n            setTimeout(() => {\r\n              element.style.display = \"none\";\r\n            }, delay || 0);\r\n          });\r\n        }\r\n\r\n        this.switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n\r\n        setTimeout(() => {\r\n          element.style.display = \"none\";\r\n        }, delay || 0);\r\n      } else {\r\n        if (closeButton) {\r\n          closeButton.addEventListener(\"click\", () => {\r\n            this.switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n            setTimeout(() => {\r\n              element.remove();\r\n            }, delay || 0);\r\n          });\r\n        }\r\n\r\n        this.switchAnimation(animateElement ?? element, fromInToOut, animation);\r\n\r\n        setTimeout(() => {\r\n          element.remove();\r\n        }, options.delay || 0);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n * Effectue une animation d'entrée ou de sortie sur un élément HTML spécifié en réponse aux événements du bouton d'ouverture et de fermeture.\r\n * @param options.openButton - Le bouton d'ouverture lié à l'élément.\r\n * @param options.element - L'élément HTML sur lequel l'animation d'entrée ou de sortie doit être appliquée.\r\n * @param options.display - La valeur de la propriété CSS \"display\" à appliquer à l'élément lors de l'animation (facultatif).\r\n * @param options.animation - Les informations sur le type et la position de l'animation (facultatif).\r\n * @param options.closeButton - Le bouton de fermeture lié à l'élément (facultatif).\r\n * @param options.dispatchCloseEvent - L'événement de fermeture à dispatcher (facultatif).\r\n * @param options.dispatchCloseEvent.key - La clé de l'événement de fermeture.\r\n * @param options.dispatchCloseEvent.value - La valeur associée à l'événement de fermeture.\r\n * @param options.delay - Le délai en millisecondes avant de masquer ou de supprimer l'élément (facultatif).\r\n */\r\n  public animeInOut<T extends AnimeOptions>(options: T): void {\r\n    let modalIsOpen = false;\r\n    const { element, openButton, closeButton, animation } = options;\r\n    const display = options.display ?? \"block\";\r\n    const { dispatchCloseEvent } = options;\r\n    const delay = options.delay ?? 350;\r\n\r\n    try {\r\n      if (openButton) {\r\n        openButton.addEventListener(\"click\", () => {\r\n          if (!modalIsOpen) {\r\n            modalIsOpen = true;\r\n            this.animeIn({ element, animation, display });\r\n          } else {\r\n            modalIsOpen = false;\r\n            this.animeOut({\r\n              element,\r\n              animation,\r\n              display,\r\n              delay,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if (closeButton !== undefined && !modalIsOpen) {\r\n        closeButton.addEventListener(\"click\", () => {\r\n          modalIsOpen = false;\r\n          this.animeOut({\r\n            element,\r\n            animation,\r\n            display,\r\n            delay,\r\n          });\r\n        });\r\n\r\n        if (dispatchCloseEvent && dispatchCloseEvent.value === true) {\r\n          const dispElement = dispatchCloseEvent.key as HTMLElement;\r\n          document.addEventListener(\"click\", (event: MouseEvent) => {\r\n            const eventTarget = event.target as Node;\r\n            if (\r\n              openButton &&\r\n              closeButton &&\r\n              !openButton.contains(eventTarget) &&\r\n              !closeButton.contains(eventTarget) &&\r\n              !dispElement.contains(eventTarget)\r\n            ) {\r\n              modalIsOpen = false;\r\n              this.animeOut({\r\n                element,\r\n                animation,\r\n                display,\r\n                delay,\r\n              });\r\n            }\r\n          });\r\n\r\n          dispElement.addEventListener(\"click\", Animation.stopPropagation);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (closeButton === undefined && !modalIsOpen && dispatchCloseEvent) {\r\n        if (dispatchCloseEvent.value === true) {\r\n          const animateElement = element instanceof HTMLElement ? undefined : element?.animateElement;\r\n          const _element = element instanceof HTMLElement ? element : element?.element;\r\n\r\n          document.addEventListener(\"click\", (event: MouseEvent) => {\r\n            const eventTarget = event.target as Node;\r\n            if (openButton && _element && !openButton.contains(eventTarget) && !_element.contains(eventTarget)) {\r\n              modalIsOpen = false;\r\n              this.animeOut({\r\n                element,\r\n                animation,\r\n                display,\r\n                delay,\r\n              });\r\n            }\r\n          });\r\n\r\n          if (_element) {\r\n            _element.addEventListener(\"click\", Animation.stopPropagation);\r\n          }\r\n        } else {\r\n          const dispElement = dispatchCloseEvent.key as HTMLElement;\r\n          document.addEventListener(\"click\", (event: MouseEvent) => {\r\n            const eventTarget = event.target as Node;\r\n            if (openButton && !openButton.contains(eventTarget) && !dispElement.contains(eventTarget)) {\r\n              modalIsOpen = false;\r\n              this.animeOut({\r\n                element,\r\n                animation,\r\n                display,\r\n                delay,\r\n              });\r\n            }\r\n          });\r\n\r\n          dispElement.addEventListener(\"click\", Animation.stopPropagation);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      throw new Error(\"HTMLElement null or undefined.\");\r\n    }\r\n  }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"utils\"] = factory();\n\telse\n\t\troot[\"utils\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","declare type RegexType =\r\n  | \"email\"\r\n  | \"phone-number\"\r\n  | \"number\"\r\n  | \"strong-password\"\r\n  | \"default-text\"\r\n  | \"fr-text\"\r\n  | \"en-text\"\r\n  | \"tr-text\"\r\n  | \"url-protocol\"\r\n  | \"url-domain\"\r\n  | \"url-ip\"\r\n  | \"url-port\"\r\n  | \"url-path\"\r\n  | \"url-query\"\r\n  | \"url-fragment\";\r\nexport default class Utils {\r\n  /**\r\n   * Crée un élément audio avec la source audio spécifiée par le chemin audioPath.\r\n   * @param audioPath Le chemin de la source audio.\r\n   * @param classname La classe CSS à ajouter à l'élément audio (optionnel).\r\n   * @returns L'élément audio créé.\r\n   */\r\n  public static setAudio(audioPath: string, classname = null) {\r\n    const audio = document.createElement(\"audio\");\r\n    if (classname != null) {\r\n      audio.classList.add(classname);\r\n    }\r\n    const source = document.createElement(\"source\");\r\n    source.src = audioPath;\r\n    source.type = \"audio/mpeg\";\r\n    audio.appendChild(source);\r\n    return audio;\r\n  }\r\n  /**\r\n   * Converts an HTML string into an HTML element or a collection of HTML elements.\r\n   *\r\n   * @param textHtml - The HTML string to convert.\r\n   * @param targetName - The tag name of the target HTML element to create.\r\n   * @param children - A boolean indicating whether to return all children of the target element.\r\n   * @returns - Returns the first child of the target element if `children` is `false`, otherwise returns a collection of the element's children. Returns `null` if there are no children.\r\n   *\r\n   * This method creates a new HTML element of the type specified by `targetName`, sets its inner HTML to `textHtml`, and returns either the first child of this element or all its children as an HTMLCollection, depending on the value of `children`.\r\n   * If the HTML content generates no children, the method returns `null`.\r\n   */\r\n  public static textToHTMLElement(\r\n    textHtml: string,\r\n    targetName = \"div\",\r\n    children: boolean = false\r\n  ): Element | HTMLCollection | null {\r\n    const target = document.createElement(`${targetName}`);\r\n    target.innerHTML = textHtml;\r\n    if (true === children) {\r\n      return target.children;\r\n    }\r\n    return target.firstElementChild;\r\n  }\r\n  /**\r\n   * retourne un élément du dom\r\n   */\r\n  public static $$(element: any) {\r\n    if (typeof element !== \"string\") {\r\n      return element;\r\n    } else if (typeof element === \"string\") {\r\n      const collection = document.querySelectorAll(`${element}`);\r\n      const el = document.querySelector(`${element}`);\r\n      if (collection !== null && collection.length > 1) {\r\n        return collection;\r\n      }\r\n      if (el !== null) {\r\n        return el;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Cette fonction permet de convertir un objet NodeList en un tableau d'éléments HTML (HTMLElement)\r\n   * et d'exécuter une fonction de rappel sur chaque élément du tableau.\r\n   * @param nodeList Un objet NodeList ou un élément HTML.\r\n   * Si c'est un NodeList, il sera converti en tableau d'éléments HTML.\r\n   * @param callback Une fonction de rappel à exécuter sur chaque élément du tableau.\r\n   * @returns\r\n   */\r\n  public static processNodes(\r\n    nodeList: any,\r\n    callback = (node: any, index?: number) => {}\r\n  ) {\r\n    if (nodeList instanceof NodeList || Array.isArray(nodeList)) {\r\n      return Array.from(nodeList).forEach((node, i) => {\r\n        callback(node, i);\r\n      });\r\n    }\r\n    if (null !== nodeList && undefined !== nodeList) {\r\n      return callback(nodeList);\r\n    }\r\n  }\r\n  /**\r\n   * Méthode qui renvoie une expression régulière en fonction du type demandé.\r\n   * @param type Le type d'expression régulière demandé.\r\n   * @returns L'expression régulière correspondante.\r\n   */\r\n  public static getRegexp(type: RegexType): RegExp {\r\n    switch (type) {\r\n      case \"email\":\r\n        return new RegExp(\r\n          /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i\r\n        );\r\n      case \"phone-number\":\r\n        return new RegExp(/^(0|\\+[1-9][0-9]{0,2}) ?[0-9]+$/);\r\n      case \"number\":\r\n        return new RegExp(/^[-+]?[0-9]*\\.?[0-9]+$/);\r\n      case \"strong-password\":\r\n        return new RegExp(\r\n          /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\r\n        );\r\n      case \"url-protocol\":\r\n        return new RegExp(/^(https?:\\/\\/)$/, \"i\");\r\n      case \"url-domain\":\r\n        return new RegExp(/^((([a-zA-Z0-9]{1,})[.-]?)+[a-zA-Z]{2,})$/, \"i\");\r\n      case \"url-ip\":\r\n        return new RegExp(\r\n          /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\r\n          \"i\"\r\n        );\r\n      case \"url-port\":\r\n        return new RegExp(\r\n          /^:(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3})$/,\r\n          \"i\"\r\n        );\r\n      case \"url-path\":\r\n        return new RegExp(/^(\\.\\/)?[-a-zA-Z\\d%_.~+\\/]*$/, \"i\");\r\n      case \"url-query\":\r\n        return new RegExp(/^(\\?[;&a-zA-Z\\d%_.~+=-]*)$/, \"i\");\r\n      case \"url-fragment\":\r\n        return new RegExp(/^#[-a-zA-Z\\d%_.~+/=?&;:!*'()]*$/, \"i\");\r\n      case \"default-text\":\r\n        return new RegExp(\r\n          /^[a-zA-Z -'áàâäãåçéèêëğíìîïıñóòôöõúùûüşýÿæœÁÀÂÄÃÅÇÉÈÊËĞÍÌÎÏIÑÓÒÔÖÕÚÙÛÜŞÝŸÆŒ]+$/\r\n        );\r\n      case \"fr-text\":\r\n        return new RegExp(/^[A-Za-z' - àâçéèêëûæœÀÂÉÈÊËÆŒ]+$/);\r\n      case \"en-text\":\r\n        return new RegExp(/^[a-zA-Z '-]{1,40}$/);\r\n      case \"tr-text\":\r\n        return new RegExp(/^[A-Za-z çğıöüşæœÇĞIÖÜŞ]+$/);\r\n      default:\r\n        throw new Error(\"Type d'expression régulière non pris en charge.\");\r\n    }\r\n  }\r\n  /**\r\n   * Crée une couche superfielle au dessus d'un élément html afin d'empecher tout évènement.\r\n   * @param tag Le nom de la balise HTML à utiliser comme couche (par défaut : 'td', idéal pour les tableau html).\r\n   * @param backgroundColor La couleur d'arrière-plan de la zone interdite (par défaut : '#FFFFFF').\r\n   * @returns Un élément HTML représentant une zone interdite.\r\n   */\r\n  private static forbiddener(tag: string = \"td\", backgroundColor?: string) {\r\n    let forbiddenTag = document.createElement(tag);\r\n    forbiddenTag.setAttribute(\"class\", \"forbidden\");\r\n    const style = {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: \".7\",\r\n      zIndex: \"10\",\r\n      backgroundColor: backgroundColor ? backgroundColor : \"#FFFFFF\",\r\n    };\r\n    Object.assign(forbiddenTag.style, style);\r\n    return forbiddenTag as HTMLElement;\r\n  }\r\n  /**\r\n   * Réduit une chaîne de texte.\r\n   * @param text La chaîne de texte à réduire.\r\n   * @param maxLength La longueur maximale de la chaîne résultante (par défaut : 14).\r\n   * @returns La chaîne de texte réduite.\r\n   */\r\n  public static truncateChars(text: string, maxLength: number = 14): string {\r\n    text = typeof text === \"string\" ? text.trim() : \"\";\r\n    if (text.length > maxLength) {\r\n      return `${text.substring(0, maxLength)}...`;\r\n    }\r\n    return text;\r\n  }\r\n  /**\r\n   * Changes the input text type to a number type and performs additional processing\r\n   * based on the specified parameters.\r\n   *\r\n   * @param attr - The CSS selector for the input elements to be processed.\r\n   * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\r\n   * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\r\n   * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\r\n   */\r\n  public static changeInputTextTypeToNumberType(\r\n    attr: string,\r\n    limit?: number | null,\r\n    priceType: boolean = false,\r\n    decimal?: number\r\n  ) {\r\n    this.processNodes(this.$$(attr), function (element) {\r\n      let input = element as HTMLInputElement;\r\n      if (input) {\r\n        input.addEventListener(\"input\", function () {\r\n          const regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\r\n          if (decimal) {\r\n            const getValue = input.value.replace(regExp, \"\");\r\n            input.value = `${parseFloat(getValue).toFixed(decimal)}`;\r\n          } else {\r\n            input.value = input.value.replace(regExp, \"\");\r\n          }\r\n          if (limit && parseInt(input.value) > limit) {\r\n            input.value = `${limit}`;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\r\n   * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\r\n   * and the background color for the forbidden tag.\r\n   *\r\n   * @param tag - The tag of the element to be disabled (default: \"td\").\r\n   * @param target - The target element to be disabled (default: undefined).\r\n   * @param trigger - The trigger element (button) to activate the function (default: undefined).\r\n   * @param backgroundColor - The background color for the forbidden tag (default: undefined).\r\n   */\r\n  public static disablor(\r\n    tag = \"td\",\r\n    target?: HTMLElement,\r\n    trigger?: HTMLElement,\r\n    backgroundColor?: string\r\n  ) {\r\n    const buttons = document.querySelectorAll(\"[disablor],[self-disablor]\");\r\n    try {\r\n      if (!trigger && !buttons) {\r\n        throw new Error(\r\n          \"Aucun bouton avec l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n        );\r\n      }\r\n      this.processNodes(buttons, (button: HTMLElement) => {\r\n        button.addEventListener(\"click\", () => {\r\n          const self = button.hasAttribute(\"self-disablor\");\r\n          let item = self\r\n            ? button\r\n            : (button.closest(\"[disablor]\") as HTMLElement);\r\n\r\n          if (!target && !item) {\r\n            throw new Error(\r\n              \"Aucun élément à désactiver contenant l'attribut <disablor> n'est détecté, vous pouvez le passer manuellement\"\r\n            );\r\n          }\r\n          if (item) {\r\n            item.style.position = \"relative\";\r\n            item.insertBefore(\r\n              this.forbiddener(tag, backgroundColor),\r\n              item.firstChild\r\n            );\r\n            if (item instanceof HTMLButtonElement) {\r\n              item.setAttribute(\"disabled\", \"true\");\r\n            }\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Une erreur s'est produit: \", error);\r\n    }\r\n  }\r\n  /**\r\n   * Adds an asterisk indicator to labels associated with required form fields.\r\n   * The asterisk is inserted as an SVG element, and labels are selected based on the presence\r\n   * of the 'required-field' attribute. The function utilizes the processNodes method\r\n   * to iterate through the matched labels and append the asterisk.\r\n   */\r\n  public static setAsteriskToRequiredField() \r\n  {\r\n    const setIcon = (svgString:string)=>{\r\n      const asterisk = this.textToHTMLElement(svgString) as HTMLElement;\r\n      const labels = document.querySelectorAll(\"label[required-field]\");\r\n      asterisk.style.color = \"#f89a9b\";\r\n      asterisk.style.width = \"10px\";\r\n      asterisk.style.height = \"10px\";\r\n      if (labels) {\r\n        this.processNodes(labels, (label: HTMLLabelElement) => {\r\n          const clonedAsterisk = asterisk.cloneNode(true);\r\n          label.appendChild(clonedAsterisk);\r\n        });\r\n      }\r\n    }\r\n    const cacheIcon = sessionStorage.getItem(\"asterisk\");\r\n    if(cacheIcon)return setIcon(cacheIcon);\r\n    const svgUrl = \"https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/utils/dist/assets/asterisk.svg\";\r\n    fetch(svgUrl)\r\n      .then((response) => response.text())\r\n      .then((svgString) => {\r\n        setIcon(svgString)\r\n        sessionStorage.setItem(\"asterisk\", svgString);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur lors du chargement du fichier SVG:\", error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method checks if the object contains a key with the given substring.\r\n   * @param object The object to be searched.\r\n   * @param substring The substring to search for.\r\n   * @param getKey An optional parameter to determine the type of return value.\r\n   *               If true, the method will return the key as a string.\r\n   *               If false or not provided, the method will return the value corresponding to the key.\r\n   * @returns The value or key of the first matching property if found, otherwise false.\r\n   */\r\n  public static hasKeyWithNameSubstring(\r\n    object: any,\r\n    substring: string,\r\n    getKey?: boolean\r\n  ) {\r\n    for (let key in object) {\r\n      if (key.includes(substring)) {\r\n        if (undefined === getKey || false === getKey) {\r\n          return object[key];\r\n        }\r\n        if (true === getKey) {\r\n          return key;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * This method searches for an object's property by its key or short key.\r\n   * @param object The object to be searched.\r\n   * @param keyOrShortKey The key or short key to search for.\r\n   * @param key An optional parameter to determine the type of return value.\r\n   *            If true, the function will return the key as a string.\r\n   *            If false or not provided, the function will return the value corresponding to the key.\r\n   * @returns The value or key of the first matching property if found, otherwise false.\r\n   */\r\n  public static findObjectDataByKeyName(\r\n    object: any,\r\n    keyOrShorKey: string,\r\n    key?: boolean\r\n  ) {\r\n    Object.keys(object).forEach((key) => {\r\n      if (key.includes(keyOrShorKey)) {\r\n        return object[key];\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n  /**\r\n * Finds the first occurrence of a character in the given string up to the specified limit.\r\n * \r\n * @param string - The string to search.\r\n * @param limit - The limit up to which to search for the character.\r\n * @param returnBool - Optional. If true, returns a boolean indicating whether the character was found. If false or not provided, returns the character found or null if not found.\r\n * @returns  Returns the character found, a boolean indicating whether the character was found (if `returnBool` is true), or null if the character was not found.\r\n */\r\n  public static findChar(\r\n    string: string,\r\n    limit: number,\r\n    returnBool: boolean = false\r\n  ) {\r\n    for (let i = 0; i <= limit; i++) {\r\n      const index = string.indexOf(i.toString());\r\n      if (index !== -1) {\r\n        return returnBool ? true : i.toString();\r\n      }\r\n    }\r\n    return returnBool ? false : null;\r\n  }\r\n\r\n  public static findComputedStyle(\r\n    element: HTMLElement,\r\n    property: string | Array<string>\r\n  ): string {\r\n    const styles = window.getComputedStyle(element);\r\n    const propertiesObject: any = {};\r\n    try {\r\n      if (!element) {\r\n        throw new Error(\"Element not found\");\r\n      }\r\n      if (!property) {\r\n        throw new Error(\"Property is required\");\r\n      }\r\n      if (Array.isArray(property) && property.length > 0) {\r\n        property.forEach((props) => {\r\n          propertiesObject[`${props}`] = styles.getPropertyValue(`${props}`);\r\n        });\r\n        return propertiesObject;\r\n      }\r\n      if (typeof property === \"string\") {\r\n        return styles.getPropertyValue(`${property}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  /**\r\n   * A function to escape special characters in a string using the DOM API.\r\n   *\r\n   * @param str - The input string to be escaped.\r\n   * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\r\n   */\r\n  public static escape(str?: string): string {\r\n    if (!str) {\r\n      return \"\";\r\n    }\r\n    const div = document.createElement(\"div\");\r\n    div.appendChild(document.createTextNode(str));\r\n    return div.innerHTML;\r\n  }\r\n  /**\r\n   * This function takes an HTMLElement and a target string.\r\n   * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\r\n   * If no such element is found, it returns null.\r\n   * @param referent - The starting point of the search.\r\n   * @param target - The CSS selector used to find the desired element.\r\n   * @returns The first Element with a matching target, or null if no such element is found.\r\n   */\r\n  public static findHTMLElementBy(\r\n    referent: HTMLElement,\r\n    target: string\r\n  ): Element | null {\r\n    let currentElement = referent as Element | null;\r\n    if (currentElement) {\r\n      while ((currentElement = currentElement.previousElementSibling)) {\r\n        const charCounterSpan = currentElement.querySelector(target);\r\n        if (charCounterSpan) {\r\n          return charCounterSpan;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * This function takes an object containing HTML attributes and returns a string representing the attributes.\r\n   * If no attributes are provided, it returns an empty string.\r\n   * @param attributes - An object containing HTML attributes.\r\n   * @returns A string representing the attributes.\r\n   */\r\n  public static formatHTMLAttributes(attributes: any) {\r\n    let attrs = \"\";\r\n    if (attributes) {\r\n      for (const [key, value] of Object.entries(attributes)) {\r\n        if (key) {\r\n          attrs += `${key}='${value}'`;\r\n        }\r\n      }\r\n    }\r\n    return attrs.trim();\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(653);\n"],"names":["root","factory","exports","module","define","amd","self","FormatParamsToObject","options","properties","this","ACCEPTED_PARAMS","length","forEach","key","hasOwnProperty","Object","assign","getProperties","Flash","add","container","datas","undefined","flashBox","document","querySelector","Error","message","escape","getAttribute","icon","Boolean","duration","parseInt","type","title","closeButton","tone","template","TEMPLATE","isNaN","String","error","console","flash","create","OPTIONS","run","_template","append","Array","from","modal","open","svg","replace","button","header","Number","isInteger","parseTemplate","log","textToHTMLElement","regexp","matches","matchAll","promises","keys","match","push","results","Promise","all","index","e","lastFlashBox","remove","createElement","role","setAttribute","name","includes","flashIcon","sessionStorage","getItem","svgUrl","response","fetch","data","text","ok","setItem","constructor","close","animation","animeOut","element","display","delay","autoClose","setTimeout","volume","position","openButton","toneUrl","setAudio","play","animeIn","existingFlash","body","removeChild","insertBefore","firstChild","clearProperties","addEventListener","removeAttribute","Animation","_classCallCheck","value","stopPropagation","fromInToOut","animeType","_a","animePosition","_b","clearAfterApplying","classList","concat","_element","animateElement","HTMLElement","switchAnimation","style","_this","_this2","modalIsOpen","dispatchCloseEvent","dispElement","event","eventTarget","target","contains","_typeof","__webpack_require__","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","Symbol","toStringTag","Utils","audioPath","classname","arguments","audio","source","src","appendChild","textHtml","targetName","children","innerHTML","firstElementChild","collection","querySelectorAll","el","nodeList","callback","node","NodeList","isArray","i","RegExp","tag","backgroundColor","forbiddenTag","width","height","opacity","zIndex","maxLength","trim","substring","attr","limit","priceType","decimal","processNodes","$$","input","regExp","getValue","parseFloat","toFixed","trigger","buttons","item","hasAttribute","closest","forbiddener","HTMLButtonElement","setIcon","svgString","asterisk","labels","color","label","clonedAsterisk","cloneNode","cacheIcon","then","object","getKey","keyOrShorKey","string","returnBool","indexOf","toString","property","styles","window","getComputedStyle","propertiesObject","props","getPropertyValue","str","div","createTextNode","referent","currentElement","previousElementSibling","charCounterSpan","attributes","attrs","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","_typeof2","__webpack_module_cache__","moduleId","cachedModule","id","loaded","__webpack_modules__","r","nmd","paths"],"sourceRoot":""}
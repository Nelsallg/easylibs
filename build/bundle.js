/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/animejs/lib/anime.es.js":
/*!**********************************************!*\
  !*** ./node_modules/animejs/lib/anime.es.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * anime.js v3.2.2\n * (c) 2023 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  nil: function (a) { return is.und(a) || a === null; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright Â© 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Expo: function () { return function (t) { return t ? Math.pow(2, 10 * t - 10) : 0; }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : \n      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width,\n    h: height,\n    vW: viewBox[2],\n    vH: viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress, isPathTargetInsideSVG) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;\n  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * scaleX;\n    case 'y': return (p.y - svg.y) * scaleY;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\n\nvar engine = (function () {\n  var raf;\n\n  function play() {\n    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {\n      raf = requestAnimationFrame(step);\n    }\n  }\n  function step(t) {\n    // memo on algorithm issue:\n    // dangerous iteration over mutable `activeInstances`\n    // (that collection may be updated from within callbacks of `tick`-ed animation instances)\n    var activeInstancesLength = activeInstances.length;\n    var i = 0;\n    while (i < activeInstancesLength) {\n      var activeInstance = activeInstances[i];\n      if (!activeInstance.paused) {\n        activeInstance.tick(t);\n        i++;\n      } else {\n        activeInstances.splice(i, 1);\n        activeInstancesLength--;\n      }\n    }\n    raf = i > 0 ? requestAnimationFrame(step) : undefined;\n  }\n\n  function handleVisibilityChange() {\n    if (!anime.suspendWhenDocumentHidden) { return; }\n\n    if (isDocumentHidden()) {\n      // suspend ticks\n      raf = cancelAnimationFrame(raf);\n    } else { // is back to active tab\n      // first adjust animations to consider the time that ticks were suspended\n      activeInstances.forEach(\n        function (instance) { return instance ._onDocumentVisibility(); }\n      );\n      engine();\n    }\n  }\n  if (typeof document !== 'undefined') {\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  return play;\n})();\n\nfunction isDocumentHidden() {\n  return !!document && document.hidden;\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)\n  instance._onDocumentVisibility = resetTime;\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    engine();\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.remove = function(targets) {\n    var targetsArray = parseTargets(targets);\n    removeTargetsFromInstance(targetsArray, instance);\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargetsFromInstance(targetsArray, instance) {\n  var animations = instance.animations;\n  var children = instance.children;\n  removeTargetsFromAnimations(targetsArray, animations);\n  for (var c = children.length; c--;) {\n    var child = children[c];\n    var childAnimations = child.animations;\n    removeTargetsFromAnimations(targetsArray, childAnimations);\n    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n  }\n  if (!animations.length && !children.length) { instance.pause(); }\n}\n\nfunction removeTargetsFromActiveInstances(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    removeTargetsFromInstance(targetsArray, instance);\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.1';\nanime.speed = 1;\n// TODO:#review: naming, documentation\nanime.suspendWhenDocumentHidden = true;\nanime.running = activeInstances;\nanime.remove = removeTargetsFromActiveInstances;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (anime);\n\n\n//# sourceURL=webpack://@easylibs/easylibs/./node_modules/animejs/lib/anime.es.js?");

/***/ }),

/***/ "./packages/file-uploader/src/file-uploader.ts":
/*!*****************************************************!*\
  !*** ./packages/file-uploader/src/file-uploader.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _utils = _interopRequireDefault(__webpack_require__(/*! @easylibs/utils */ \"./packages/utils/dist/utils.js\"));\nvar _transformer = __webpack_require__(/*! @easylibs/transformer */ \"./packages/transformer/dist/transformer.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar FileUploader = exports[\"default\"] = /*#__PURE__*/function () {\n  /**\r\n   * @param input La balise input qui recevra l'image\r\n   * @param filePreviewer La balise dans laquelle l'image sera affichÃ©\r\n   */\n  function FileUploader(input, filePreviewer) {\n    var autoRun = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var progressContainer = arguments.length > 3 ? arguments[3] : undefined;\n    _classCallCheck(this, FileUploader);\n    this.input = input;\n    this.autoRun = autoRun;\n    this.progressContainer = progressContainer;\n    this.input = _utils[\"default\"].$$(input);\n    this.filePreviewer = filePreviewer instanceof Element ? filePreviewer : document.querySelector(\"\".concat(filePreviewer));\n    this.progressContainer = progressContainer instanceof HTMLElement ? progressContainer : document.querySelector(\"\".concat(progressContainer));\n  }\n  _createClass(FileUploader, [{\n    key: \"load\",\n    value: function load() {\n      var _this = this;\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (files) {};\n      var setUploading = function setUploading(input) {\n        if (input.files) {\n          var files = input.files;\n          if (files.length === 1) {\n            _this.singleUploading(files[0], function (file) {\n              return callback(file);\n            });\n          }\n          if (files.length > 1) {\n            _this.multipleUploading(files, function (_files) {\n              return callback(_files);\n            });\n          }\n        }\n      };\n      if (this.input && this.input instanceof HTMLInputElement) {\n        if (true === this.autoRun) {\n          this.input.addEventListener(\"change\", function () {\n            var input = _this.input;\n            return setUploading(input);\n          });\n        }\n        if (false === this.autoRun) {\n          try {\n            var _input = this.input;\n            if (!_input) {\n              throw new Error(\"No Input Target\");\n            }\n            return setUploading(_input);\n          } catch (error) {\n            console.log(\"Error \".concat(error));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"singleUploading\",\n    value: function singleUploading(file, callback) {\n      var _this2 = this;\n      var _file = null;\n      var fileReader = new FileReader();\n      this.progress(file);\n      fileReader.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var base64String;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              base64String = fileReader.result;\n              _context.t0 = file.name;\n              _context.t1 = base64String ? base64String.toString() : \"\";\n              _context.t2 = file.type;\n              _context.t3 = file.size;\n              _context.next = 7;\n              return file.arrayBuffer();\n            case 7:\n              _context.t4 = _context.sent;\n              _file = {\n                fullName: _context.t0,\n                base64String: _context.t1,\n                contentType: _context.t2,\n                size: _context.t3,\n                arrayBuffer: _context.t4\n              };\n              _utils[\"default\"].processNodes(_this2.filePreviewer, function (element) {\n                element.src = \"\".concat(base64String);\n              });\n              return _context.abrupt(\"return\", callback(_file));\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      fileReader.readAsDataURL(file);\n    }\n  }, {\n    key: \"multipleUploading\",\n    value: function multipleUploading(files, callback) {\n      var _this3 = this;\n      var _files = [];\n      var _loop = function _loop() {\n        var file = files[i];\n        _this3.progress(file);\n        if (file instanceof Blob) {\n          var reader = new FileReader();\n          reader.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            var base64String;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  base64String = reader.result;\n                  _context2.t0 = _files;\n                  _context2.t1 = file.name;\n                  _context2.t2 = base64String ? base64String.toString() : \"\";\n                  _context2.t3 = file.type;\n                  _context2.t4 = file.size;\n                  _context2.next = 8;\n                  return file.arrayBuffer();\n                case 8:\n                  _context2.t5 = _context2.sent;\n                  _context2.t6 = {\n                    fullName: _context2.t1,\n                    base64String: _context2.t2,\n                    contentType: _context2.t3,\n                    size: _context2.t4,\n                    arrayBuffer: _context2.t5\n                  };\n                  _context2.t0.push.call(_context2.t0, _context2.t6);\n                  if (_files.length === files.length) {\n                    callback(_files);\n                  }\n                case 12:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n          reader.readAsDataURL(file);\n        }\n      };\n      for (var i = 0; i < files.length; i++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"setFilePreview\",\n    value: function setFilePreview(base64String) {\n      var filePreviewer = this.filePreviewer;\n      if (filePreviewer instanceof HTMLImageElement) {\n        _utils[\"default\"].processNodes(filePreviewer, function (element) {\n          element.src = \"\".concat(base64String);\n        });\n      }\n    }\n  }, {\n    key: \"autoUploadFile\",\n    value: function autoUploadFile() {\n      var transformer = new _transformer.Transformer.FileTransformer();\n      var filesInput = document.querySelectorAll(\"input[type='file']\");\n      _utils[\"default\"].processNodes(filesInput, function (fileInput) {\n        var value = fileInput.dataset.value;\n        if (value && value !== \"\") {\n          var file = transformer.fromBase64String(value, null, null, false);\n          if (file) {\n            var newFileList = new DataTransfer();\n            newFileList.items.add(file);\n            Object.defineProperty(fileInput, 'files', {\n              value: newFileList.files,\n              writable: false\n            });\n            fileInput.removeAttribute('data-value');\n            var changeEvent = new Event('change');\n            fileInput.dispatchEvent(changeEvent);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"progress\",\n    value: function progress(file) {\n      try {\n        if (!file) {\n          return;\n        }\n        if (!this.progressContainer) {\n          return;\n        }\n        var progressBar = this.progressHTML();\n        if (this.progressContainer instanceof HTMLElement) this.progressContainer.appendChild(progressBar);\n        var xhr = new XMLHttpRequest();\n        xhr.upload.addEventListener('progress', function (e) {\n          console.log(e.lengthComputable);\n          if (e.lengthComputable) {\n            var percentComplete = e.loaded / e.total * 100;\n            progressBar.style.width = percentComplete + '%';\n            progressBar.innerHTML = percentComplete.toFixed(0) + '%';\n            console.log(percentComplete.toFixed(0) + '%');\n          }\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, {\n    key: \"progressHTML\",\n    value: function progressHTML() {\n      var target = \"<div id=\\\"progress-container\\\">\\n        <div id=\\\"progress-bar\\\"></div>\\n    </div>\";\n      var element = _utils[\"default\"].textToHTMLElement(target);\n      element.style.position = 'absolute';\n      return element;\n    }\n  }, {\n    key: \"createInput\",\n    value: function createInput() {\n      var input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"file\");\n      input.setAttribute(\"multiple\", \"true\");\n      input.style.display = \"none\";\n    }\n  }]);\n  return FileUploader;\n}();\n\n//# sourceURL=webpack://@easylibs/easylibs/./packages/file-uploader/src/file-uploader.ts?");

/***/ }),

/***/ "./packages/progress-form/src/progress-form.ts":
/*!*****************************************************!*\
  !*** ./packages/progress-form/src/progress-form.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _animeEs = _interopRequireDefault(__webpack_require__(/*! animejs/lib/anime.es.js */ \"./node_modules/animejs/lib/anime.es.js\"));\nvar _cssStyle = __webpack_require__(/*! ./scripts/css-style */ \"./packages/progress-form/src/scripts/css-style.ts\");\nvar _focusInBlock = __webpack_require__(/*! ./scripts/focus-in-block */ \"./packages/progress-form/src/scripts/focus-in-block.ts\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar fieldSetElement = null;\n/**\r\n * ProgressForm represents a class for managing a progressive form.\r\n */\nvar ProgressForm = exports[\"default\"] = /*#__PURE__*/function () {\n  /**\r\n   * @param enableDefaultCssStyle Determines whether the default CSS style should be enabled. Default is true.\r\n   */\n  function ProgressForm() {\n    var enableDefaultCssStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    _classCallCheck(this, ProgressForm);\n    _defineProperty(this, \"fieldsetLength\", 0);\n    this.enableDefaultCssStyle = enableDefaultCssStyle;\n  }\n  /**\r\n   * Defines the movement of each fieldset.\r\n   * @param params The parameters for setting translateX.\r\n   * @param fieldSet The fieldset element.\r\n  */\n  _createClass(ProgressForm, [{\n    key: \"setTranslateX\",\n    value: function setTranslateX(params, fieldSet) {\n      if (!fieldSet) return;\n      this.translateX = params.translateX ? params.translateX : -fieldSet.offsetWidth;\n    }\n    /**\r\n     * Executes the progressive form.\r\n     * @param params The parameters of the form.\r\n     * @param styleOptions Style options for the form.\r\n    */\n  }, {\n    key: \"run\",\n    value: function run(params, styleOptions) {\n      var _params$fieldsetMargi,\n        _this = this;\n      this.params = params;\n      this.hasValidHTMLStructure(params.form);\n      var fieldSets = params.form.querySelectorAll('fieldset');\n      this.setTranslateX(params, fieldSets[0]);\n      var progressElement = document.querySelector('[__progress__]');\n      this.fieldsetMarginWidth = (_params$fieldsetMargi = params.fieldsetMargingWidth) !== null && _params$fieldsetMargi !== void 0 ? _params$fieldsetMargi : 60;\n      var nextIndex = 1;\n      var prevIndex = fieldSets.length;\n      var prevTranslateX = 0;\n      this.fieldsetLength = fieldSets.length;\n      var progress = this.progress;\n      if (fieldSets && fieldSets.length > 1) {\n        fieldSets.forEach(function (fieldSet, i) {\n          var _params$targetMarginW;\n          var nextButton = fieldSet.querySelector(\"[__next__]\");\n          var prevButton = fieldSet.querySelector(\"[__prev__]\");\n          var translateX = _this.translateX - _this.fieldsetMarginWidth / _this.fieldsetLength;\n          var targetMarginWidth = (_params$targetMarginW = params.targetMarginWidth) !== null && _params$targetMarginW !== void 0 ? _params$targetMarginW : 0;\n          var nextTranslateX = translateX * nextIndex - targetMarginWidth;\n          prevTranslateX = translateX * nextIndex + Math.abs(translateX * 2);\n          var nextProgress = progress * (i + 2);\n          var prevProgress = i > 1 ? progress * i : progress;\n          fieldSetElement = fieldSet;\n          fieldSet.classList.add(\"fieldset\".concat(i));\n          if (i === 0) {\n            var fields = fieldSet.querySelectorAll(\"input:not([type='hidden'],[readonly]), textarea\");\n            fields[i].focus();\n            _this.compartmentalizeFocusInFieldset(fieldSetElement);\n          }\n          _this.next(nextButton, nextIndex, nextTranslateX, progressElement, nextProgress);\n          nextIndex++;\n          if (i === 0) {\n            (0, _focusInBlock.getFocusableElements)(fieldSetElement);\n          }\n          _this.prev(prevButton, prevIndex, prevTranslateX, progressElement, prevProgress);\n          prevIndex--;\n        });\n      }\n      if (progressElement) {\n        progressElement.style.width = \"\".concat(progress, \"%\");\n      }\n      if (this.enableDefaultCssStyle) {\n        (0, _cssStyle.cssStyle)(params, fieldSets, this.translateX, this.fieldsetLength, this.fieldsetMarginWidth, styleOptions);\n      }\n    }\n    /**\r\n     * Handles the \"next\" button click event.\r\n     * @param nextButton The \"next\" button element.\r\n     * @param nextIndex The index of the next fieldset.\r\n     * @param nextTranslateX The translateX value for the next fieldset.\r\n     * @param progressElement The progress element.\r\n     * @param nextProgress The progress for the next fieldset.\r\n     */\n  }, {\n    key: \"next\",\n    value: function next(nextButton, nextIndex, nextTranslateX, progressElement, nextProgress) {\n      var _this2 = this;\n      var targets = this.fieldsetTargetArray;\n      if (nextButton) {\n        nextButton.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          var fieldSet = document.querySelector(\".fieldset\".concat(nextIndex - 1));\n          var isValidFieldset = _this2.isValidFieldset(fieldSet);\n          if (_this2.params.onPreNext) _this2.params.onPreNext(isValidFieldset);\n          if (isValidFieldset) {\n            fieldSetElement = document.querySelector(\".fieldset\".concat(nextIndex));\n            if (fieldSetElement) {\n              _this2.compartmentalizeFocusInFieldset(fieldSetElement);\n              (0, _focusInBlock.getFocusableElements)(fieldSetElement);\n            }\n            (0, _animeEs[\"default\"])({\n              targets: targets,\n              translateX: nextTranslateX,\n              easing: 'easeInOutExpo'\n            });\n            if (progressElement) {\n              progressElement.style.width = \"\".concat(nextProgress !== null && nextProgress !== void 0 ? nextProgress : 0, \"%\");\n            }\n            if (_this2.params.onPostNext) _this2.params.onPostNext();\n          }\n        });\n      }\n    }\n    /**\r\n     * Handles the \"previous\" button click event.\r\n     * @param prevButton The \"previous\" button element.\r\n     * @param prevIndex The index of the previous fieldset.\r\n     * @param prevTranslateX The translateX value for the previous fieldset.\r\n     * @param progressElement The progress element.\r\n     * @param prevProgress The progress for the previous fieldset.\r\n    */\n  }, {\n    key: \"prev\",\n    value: function prev(prevButton, prevIndex, prevTranslateX, progressElement, prevProgress) {\n      var _this3 = this;\n      var targets = this.fieldsetTargetArray;\n      if (prevButton) {\n        prevButton.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          fieldSetElement = document.querySelector(\".fieldset\".concat(prevIndex));\n          if (fieldSetElement) {\n            _this3.compartmentalizeFocusInFieldset(fieldSetElement);\n            (0, _focusInBlock.getFocusableElements)(fieldSetElement);\n          }\n          (0, _animeEs[\"default\"])({\n            targets: targets,\n            translateX: prevTranslateX,\n            easing: 'easeInOutExpo'\n          });\n          if (progressElement) {\n            progressElement.style.width = \"\".concat(prevProgress !== null && prevProgress !== void 0 ? prevProgress : 0, \"%\");\n          }\n        });\n      }\n    }\n    /**\r\n     * Calculates the progress percentage of the form.\r\n     * @returns The progress percentage.\r\n    */\n  }, {\n    key: \"progress\",\n    get: function get() {\n      return 100 / this.fieldsetLength;\n    }\n    /**\r\n     * Compartmentalizes focus within a fieldset.\r\n     * @param fieldSet The fieldset to compartmentalize focus within.\r\n    */\n  }, {\n    key: \"compartmentalizeFocusInFieldset\",\n    value: function compartmentalizeFocusInFieldset(fieldSet) {\n      window.addEventListener('keydown', function (e) {\n        if (e.key === 'Tab' && fieldSet !== null) {\n          (0, _focusInBlock.focusInBlock)(e, fieldSet);\n        }\n      });\n    }\n    /**\r\n     * Checks if a fieldset is valid.\r\n     * @param fieldSet The fieldset to validate.\r\n     * @returns true if the fieldset is valid, otherwise false.\r\n    */\n  }, {\n    key: \"isValidFieldset\",\n    value: function isValidFieldset(fieldSet) {\n      if (fieldSet) {\n        var fields = Array.from(fieldSet.querySelectorAll('input, select, textarea'));\n        if (fields) {\n          for (var _i = 0, _arr = fields; _i < _arr.length; _i++) {\n            var field = _arr[_i];\n            if (!field.checkValidity()) {\n              field.reportValidity();\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    }\n    /**\r\n     * Generates an array of target selectors for fieldsets.\r\n     * @returns An array of target selectors.\r\n     */\n  }, {\n    key: \"fieldsetTargetArray\",\n    get: function get() {\n      var fieldsetTargetArray = [];\n      if (this.fieldsetLength > 0) {\n        for (var i = 0; i < this.fieldsetLength; i++) {\n          fieldsetTargetArray.push(\".fieldset\".concat(i));\n        }\n      }\n      return fieldsetTargetArray;\n    }\n    /**\r\n     * Checks if the HTML structure of the form is valid.\r\n     * @param form The form to validate.\r\n     * @throws Error if the HTML structure is not valid.\r\n     */\n  }, {\n    key: \"hasValidHTMLStructure\",\n    value: function hasValidHTMLStructure(form) {\n      try {\n        if (!form) {\n          throw new Error(\"The form could not be retrieved\");\n        }\n        var fieldSetParent = form.querySelector(\"[fieldset__parent]\");\n        if (!fieldSetParent) {\n          throw new Error(\"The element with the attribute [fieldset__parent] not found in your form\");\n        }\n        var fieldsetContainer = fieldSetParent.querySelector(\"[fieldset__container]\");\n        if (!fieldsetContainer) {\n          throw new Error(\"The element with the attribute [fieldset__container] not found in your fieldset__parent\");\n        }\n        var fieldSets = fieldsetContainer.querySelectorAll('fieldset');\n        if (!fieldSets) {\n          throw new Error(\"Aucune section de formulaire trouvÃ©e.\");\n        }\n        var next_buttons = form.querySelectorAll(\"[__next__]\");\n        var prev_buttons = form.querySelectorAll(\"[__prev__]\");\n        if (!next_buttons) {\n          throw new Error('No \"next\" button found!');\n        }\n        if (!prev_buttons) {\n          throw new Error(\"No 'previous' button found!\");\n        }\n      } catch (error) {\n        throw error;\n      }\n    }\n  }]);\n  return ProgressForm;\n}();\n\n//# sourceURL=webpack://@easylibs/easylibs/./packages/progress-form/src/progress-form.ts?");

/***/ }),

/***/ "./packages/progress-form/src/scripts/css-style.ts":
/*!*********************************************************!*\
  !*** ./packages/progress-form/src/scripts/css-style.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.cssStyle = cssStyle;\nfunction cssStyle(params, fieldSets, translateX, fieldsetLength, fieldsetMarginWidth, styleOptions) {\n  try {\n    var fieldSetParent = params.form.querySelector(\"[fieldset__parent]\");\n    var fieldsetContainer = fieldSetParent.querySelector(\"[fieldset__container]\");\n    var fieldsetWidth = Math.abs(translateX);\n    var fieldsetContainerWidth = fieldsetLength * fieldsetWidth + fieldsetMarginWidth;\n    var defaultFieldSetParentStyle = {\n      height: '100%',\n      overflow: 'hidden',\n      width: \"\".concat(fieldsetWidth, \"px\")\n    };\n    var defaultFormStyle = {\n      width: \"\".concat(fieldsetWidth, \"px\"),\n      height: '100%',\n      boxSizing: 'border-box'\n    };\n    var defaultFieldsetContainerStyle = {\n      width: \"\".concat(fieldsetContainerWidth, \"px\"),\n      height: '100%',\n      overflow: 'hidden',\n      display: 'flex',\n      justifyContent: 'space-between'\n    };\n    var defaultFieldsetStyle = {\n      width: \"\".concat(fieldsetWidth, \"px\"),\n      transition: 'margin-left 0.4s ease-in-out',\n      backgroundColor: '#FFFFFF',\n      justifyContent: 'space-between',\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '30px',\n      border: 'none',\n      boxShadow: '0 0 5px rgba(255, 255, 255, 0.7137254902)',\n      borderRadius: '3px'\n    };\n\n    // Fusionnez les styles par dÃ©faut avec les styles personnalisÃ©s\n    var formStyle = Object.assign({}, defaultFormStyle, styleOptions === null || styleOptions === void 0 ? void 0 : styleOptions.form);\n    var fieldSetParentStyle = Object.assign({}, defaultFieldSetParentStyle, styleOptions === null || styleOptions === void 0 ? void 0 : styleOptions.fieldsetParent);\n    var fieldsetContainerStyle = Object.assign({}, defaultFieldsetContainerStyle, styleOptions === null || styleOptions === void 0 ? void 0 : styleOptions.fieldsetContainer);\n    var fieldsetStyle = Object.assign({}, defaultFieldsetStyle, styleOptions === null || styleOptions === void 0 ? void 0 : styleOptions.fieldset);\n    Object.assign(params.form.style, formStyle);\n    Object.assign(fieldSetParent.style, fieldSetParentStyle);\n    Object.assign(fieldsetContainer.style, fieldsetContainerStyle);\n    fieldSets.forEach(function (fieldSet, index) {\n      Object.assign(fieldSet.style, fieldsetStyle);\n      fieldSet.classList.add(\"fieldset\".concat(index));\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//# sourceURL=webpack://@easylibs/easylibs/./packages/progress-form/src/scripts/css-style.ts?");

/***/ }),

/***/ "./packages/progress-form/src/scripts/focus-in-block.ts":
/*!**************************************************************!*\
  !*** ./packages/progress-form/src/scripts/focus-in-block.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.focusInBlock = focusInBlock;\nexports.getFocusableElements = getFocusableElements;\n/**\r\n * GÃ¨re le focus clavier sur les Ã©lÃ©ments d'un bloc HTML spÃ©cifiÃ©.\r\n * @param key - L'Ã©vÃ©nement clavier qui a dÃ©clenchÃ© la fonction.\r\n * @param block - L'Ã©lÃ©ment HTML qui reprÃ©sente le bloc sur lequel on souhaite gÃ©rer le focus.\r\n */\nfunction focusInBlock(key, block) {\n  key.preventDefault();\n  var focusables = getFocusableElements(block);\n  var index = focusables.findIndex(function (f) {\n    return f === block.querySelector(':focus');\n  });\n  key.shiftKey === true ? index-- : index++;\n  if (index >= focusables.length) {\n    index = 0;\n  }\n  if (index < 0) {\n    index = focusables.length - 1;\n  }\n  var FIELD = focusables[index];\n  FIELD.focus();\n}\n/**\r\n * RÃ©cupÃ¨re tous les Ã©lÃ©ments focusables dans un bloc HTML spÃ©cifiÃ©.\r\n * @param block - L'Ã©lÃ©ment HTML qui reprÃ©sente le bloc contenant les Ã©lÃ©ments focusables.\r\n * @returns Un tableau d'Ã©lÃ©ments focusables prÃ©sents dans le bloc.\r\n */\nfunction getFocusableElements(block) {\n  var focusableSelector = \"button, select, input, a, textarea\";\n  return Array.from(block.querySelectorAll(focusableSelector));\n}\n\n//# sourceURL=webpack://@easylibs/easylibs/./packages/progress-form/src/scripts/focus-in-block.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar _fileUploader = _interopRequireDefault(__webpack_require__(/*! ../packages/file-uploader/src/file-uploader */ \"./packages/file-uploader/src/file-uploader.ts\"));\nvar _progressForm = _interopRequireDefault(__webpack_require__(/*! ../packages/progress-form/src/progress-form */ \"./packages/progress-form/src/progress-form.ts\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n//Progress Form\nvar form = document.querySelector(\"form\");\nvar progress = new _progressForm[\"default\"]();\nif (form) progress.run({\n  form: form\n});\nvar input = document.querySelector(\"input[type='file']\");\nvar uploader = new _fileUploader[\"default\"](input);\nuploader.load(function (files) {\n  console.log(files);\n});\n\n//# sourceURL=webpack://@easylibs/easylibs/./src/index.ts?");

/***/ }),

/***/ "./packages/transformer/dist/transformer.js":
/*!**************************************************!*\
  !*** ./packages/transformer/dist/transformer.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (( false ? 0 : _typeof(exports)) === 'object' && ( false ? 0 : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}\n})(self, function () {\n  return /******/function () {\n    // webpackBootstrap\n    /******/\n    \"use strict\";\n\n    /******/\n    var __webpack_modules__ = {\n      /***/\"./src/transformer.ts\": (\n      /*!****************************!*\\\r\n        !*** ./src/transformer.ts ***!\r\n        \\****************************/\n      /***/\n      function srcTransformerTs(__unused_webpack_module, exports) {\n        var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n          function adopt(value) {\n            return value instanceof P ? value : new P(function (resolve) {\n              resolve(value);\n            });\n          }\n          return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n              try {\n                step(generator.next(value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function rejected(value) {\n              try {\n                step(generator[\"throw\"](value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function step(result) {\n              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n          });\n        };\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.Transformer = void 0;\n        function getMimeType(base64String) {\n          var get = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"both\";\n          var extension = base64String.split(\",\")[0].split(\":\")[1].split(\";\")[0].split(\"/\")[1];\n          var fileType = base64String.split(\",\")[0].split(\":\")[1].split(\";\")[0].split(\"/\")[0];\n          if (\"type\" === get) {\n            return fileType;\n          }\n          if (\"extension\" === get) {\n            return extension;\n          }\n          return fileType + \"/\" + extension;\n        }\n        var Transformer;\n        (function (Transformer) {\n          var Base64Transformer = /*#__PURE__*/function () {\n            function Base64Transformer() {\n              _classCallCheck(this, Base64Transformer);\n              this.base64String = \"\";\n            }\n            /**\r\n             * Convertit une chaÃ®ne base64 en objet File.\r\n             * @param base64String - La chaÃ®ne encodÃ©e en base64.\r\n             * @param fileName - (Optionnel) Le nom du fichier.\r\n             * @returns Le fichier rÃ©sultant.\r\n             */\n            _createClass(Base64Transformer, [{\n              key: \"toFile\",\n              value: function toFile(base64String, fileName) {\n                this.base64String = base64String;\n                var byteCharacters = window.atob(base64String.split(\",\")[1]);\n                var byteArrays = [];\n                var _fileName = \"\";\n                for (var offset = 0; offset < byteCharacters.length; offset += 512) {\n                  var slice = byteCharacters.slice(offset, offset + 512);\n                  var byteNumbers = new Array(slice.length);\n                  for (var i = 0; i < slice.length; i++) {\n                    byteNumbers[i] = slice.charCodeAt(i);\n                  }\n                  var byteArray = new Uint8Array(byteNumbers);\n                  byteArrays.push(byteArray);\n                }\n                var extension = getMimeType(base64String, \"extension\");\n                var fileType = getMimeType(base64String, \"type\");\n                if (fileName) {\n                  _fileName = fileName;\n                } else {\n                  _fileName = \"tranformed_file.\".concat(extension);\n                }\n                return new File(byteArrays, _fileName, {\n                  type: \"\".concat(fileType, \"/\").concat(extension)\n                });\n              }\n              /**\r\n               * Convertit un objet File en chaÃ®ne base64.\r\n               * @param file - Le fichier Ã  convertir en base64.\r\n               * @returns La chaÃ®ne base64 rÃ©sultante (sous forme de promesse).\r\n               */\n            }, {\n              key: \"fromFile\",\n              value: function fromFile(file) {\n                return new Promise(function (resolve, reject) {\n                  var reader = new FileReader();\n                  reader.onloadend = function () {\n                    resolve(reader.result);\n                  };\n                  reader.onerror = function (error) {\n                    reject(error);\n                  };\n                  reader.readAsDataURL(file);\n                });\n              }\n              /**\r\n               * Convertit une chaÃ®ne base64 en tableau Uint8Array.\r\n               * @param base64String - La chaÃ®ne encodÃ©e en base64.\r\n               * @returns Le tableau Uint8Array rÃ©sultant.\r\n               */\n            }, {\n              key: \"toUint8Array\",\n              value: function toUint8Array(base64String) {\n                var binaryString = window.atob(base64String.split(\",\")[1]);\n                var length = binaryString.length;\n                var bytes = new Uint8Array(length);\n                for (var i = 0; i < length; i++) {\n                  bytes[i] = binaryString.charCodeAt(i);\n                }\n                return bytes;\n              }\n              /**\r\n               * Convertit un tableau Uint8Array en chaÃ®ne base64.\r\n               * @param uint8Array - Le tableau Uint8Array Ã  convertir en base64.\r\n               * @returns La chaÃ®ne base64 rÃ©sultante.\r\n               */\n            }, {\n              key: \"fromUint8Array\",\n              value: function fromUint8Array(uint8Array) {\n                var binaryString = \"\";\n                for (var i = 0; i < uint8Array.length; i++) {\n                  binaryString += String.fromCharCode(uint8Array[i]);\n                }\n                return window.btoa(binaryString);\n              }\n              /**\r\n               * Convertit un objet Blob en chaÃ®ne base64 ou ArrayBuffer.\r\n               * @param blob - Le Blob Ã  convertir.\r\n               * @returns La chaÃ®ne base64 ou ArrayBuffer rÃ©sultante (sous forme de promesse).\r\n               */\n            }, {\n              key: \"fromBlob\",\n              value: function fromBlob(blob) {\n                return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", new Promise(function (resolve) {\n                          var reader = new FileReader();\n                          reader.onloadend = function () {\n                            var result = reader.result;\n                            var base64String = result || \"\";\n                            resolve(base64String);\n                          };\n                          reader.readAsDataURL(blob);\n                        }));\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n              }\n            }]);\n            return Base64Transformer;\n          }();\n          Transformer.Base64Transformer = Base64Transformer;\n          var BlobTransformer = /*#__PURE__*/function () {\n            function BlobTransformer() {\n              _classCallCheck(this, BlobTransformer);\n            }\n            _createClass(BlobTransformer, [{\n              key: \"fromUint8Array\",\n              value:\n              /**\r\n               * Convertit un tableau Uint8Array en objet Blob.\r\n               * @param uint8Array - Le tableau Uint8Array Ã  convertir en Blob.\r\n               * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n               * @returns Le Blob rÃ©sultant.\r\n               */\n              function fromUint8Array(uint8Array, contentType) {\n                contentType = contentType !== null && contentType !== void 0 ? contentType : \"\";\n                return new Blob([uint8Array], {\n                  type: contentType\n                });\n              }\n              /**\r\n               * CrÃ©e un Blob Ã  partir d'un objet File.\r\n               * @param file - Le fichier Ã  convertir en Blob.\r\n               * @returns Le Blob rÃ©sultant.\r\n               */\n            }, {\n              key: \"fromFile\",\n              value: function fromFile(file) {\n                return file.slice(0, file.size, file.type);\n              }\n              /**\r\n               * CrÃ©e un Blob Ã  partir d'une chaÃ®ne encodÃ©e en base64.\r\n               * @param base64String - La chaÃ®ne encodÃ©e en base64.\r\n               * @param contentType - (Optionnel) Le type de contenu du Blob.\r\n               * @returns Le Blob rÃ©sultant.\r\n               */\n            }, {\n              key: \"fromBase64String\",\n              value: function fromBase64String(base64String, contentType) {\n                contentType = contentType || \"\";\n                var byteCharacters = window.atob(base64String.split(\",\")[1]);\n                var byteNumbers = new Array(byteCharacters.length);\n                for (var i = 0; i < byteCharacters.length; i++) {\n                  byteNumbers[i] = byteCharacters.charCodeAt(i);\n                }\n                var byteArray = new Uint8Array(byteNumbers);\n                return new Blob([byteArray], {\n                  type: contentType\n                });\n              }\n            }]);\n            return BlobTransformer;\n          }();\n          Transformer.BlobTransformer = BlobTransformer;\n          var FileTransformer = /*#__PURE__*/function () {\n            function FileTransformer() {\n              _classCallCheck(this, FileTransformer);\n            }\n            _createClass(FileTransformer, [{\n              key: \"toBase64\",\n              value:\n              /**\r\n               * Convertit un fichier en chaÃ®ne base64.\r\n               * @param file - Le fichier Ã  convertir en base64.\r\n               * @returns La chaÃ®ne base64 rÃ©sultante (sous forme de promesse).\r\n               */\n              function toBase64(file) {\n                return new Promise(function (resolve, reject) {\n                  var reader = new FileReader();\n                  reader.onloadend = function () {\n                    resolve(reader.result);\n                  };\n                  reader.onerror = function (error) {\n                    reject(error);\n                  };\n                  reader.readAsDataURL(file);\n                });\n              }\n              /**\r\n               * Convertit une chaÃ®ne base64 en objet File.\r\n               * @param base64String - La chaÃ®ne encodÃ©e en base64.\r\n               * @param contentType - (Optionnel) Le type de contenu du fichier.\r\n               * @param fileName - (Optionnel) Le nom du fichier.\r\n               * @param formatString - (Optionnel) Indique si la chaÃ®ne base64 est formatÃ©e.\r\n               * @returns Le fichier rÃ©sultant.\r\n               */\n            }, {\n              key: \"fromBase64String\",\n              value: function fromBase64String(base64String, contentType, fileName) {\n                var formatString = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n                contentType = contentType || \"\";\n                var fileInfo = formatString ? base64String.split(\",\")[1] : base64String;\n                var byteCharacters = window.atob(fileInfo);\n                var byteNumbers = new Array(byteCharacters.length);\n                for (var i = 0; i < byteCharacters.length; i++) {\n                  byteNumbers[i] = byteCharacters.charCodeAt(i);\n                }\n                var byteArray = new Uint8Array(byteNumbers);\n                var blob = new Blob([byteArray], {\n                  type: contentType\n                });\n                fileName = fileName || \"image\";\n                return new File([blob], fileName, {\n                  type: contentType\n                });\n              }\n              /**\r\n               * Convertit un tableau Uint8Array en objet File.\r\n               * @param uint8Array - Le tableau Uint8Array.\r\n               * @param mimeType - Le type MIME du fichier.\r\n               * @param fileName - Le nom du fichier.\r\n               * @returns Le fichier rÃ©sultant.\r\n               */\n            }, {\n              key: \"fromUint8Array\",\n              value: function fromUint8Array(uint8Array, mimeType, fileName) {\n                return new File(uint8Array, fileName, {\n                  type: mimeType\n                });\n              }\n            }]);\n            return FileTransformer;\n          }();\n          Transformer.FileTransformer = FileTransformer;\n          var FormDataTransformer = /*#__PURE__*/function () {\n            function FormDataTransformer(data) {\n              _classCallCheck(this, FormDataTransformer);\n              this._data = data;\n            }\n            /**\r\n             * Transforme les donnÃ©es en un objet FormData.\r\n             * @returns L'objet FormData rÃ©sultant.\r\n             */\n            _createClass(FormDataTransformer, [{\n              key: \"transform\",\n              value: function transform() {\n                var formData = new FormData();\n                if (_typeof(this._data) === \"object\") {\n                  var data = this._data;\n                  try {\n                    for (var key in this._data) {\n                      if (this._data.hasOwnProperty(key)) {\n                        formData.append(key, data[key]);\n                      }\n                    }\n                  } catch (error) {\n                    console.error(\"Erreur dÃ©tectÃ©e: \" + error);\n                  }\n                }\n                return formData;\n              }\n              /**\r\n               * Revertit un objet FormData en objet JavaScript.\r\n               * @returns L'objet JavaScript rÃ©sultant.\r\n               */\n            }, {\n              key: \"reverse\",\n              value: function reverse() {\n                var elementObject = {};\n                if (this._data instanceof FormData) {\n                  try {\n                    var tempObject = {};\n                    this._data.forEach(function (value, key) {\n                      tempObject[key] = value;\n                    });\n                    elementObject = Object.assign({}, tempObject);\n                  } catch (error) {\n                    console.error(\"Erreur dÃ©tectÃ©e: \" + error);\n                  }\n                }\n                return elementObject;\n              }\n              /**\r\n               * Option de transformation spÃ©cifique.\r\n               * @param option - L'option de transformation ('onlyobject', 'onlyformdata', 'auto').\r\n               * @returns L'objet ou le FormData rÃ©sultant en fonction de l'option spÃ©cifiÃ©e.\r\n               */\n            }, {\n              key: \"option\",\n              value: function option(_option) {\n                if (_option === \"onlyobject\") {\n                  if (this._data instanceof FormData) {\n                    return this.reverse();\n                  }\n                  return this._data;\n                }\n                if (_option === \"onlyformdata\") {\n                  if (this._data instanceof FormData) {\n                    return this._data;\n                  }\n                  return this.transform();\n                }\n                if (_option === \"auto\") {\n                  return this.auto();\n                }\n              }\n            }, {\n              key: \"auto\",\n              value: function auto() {\n                if (this._data instanceof FormData) {\n                  return this.reverse();\n                } else {\n                  return this.transform();\n                }\n              }\n            }]);\n            return FormDataTransformer;\n          }();\n          Transformer.FormDataTransformer = FormDataTransformer;\n        })(Transformer || (exports.Transformer = Transformer = {}));\n\n        /***/\n      })\n\n      /******/\n    };\n    /************************************************************************/\n    /******/\n    /******/ // startup\n    /******/ // Load entry module and return exports\n    /******/ // This entry module is referenced by other modules so it can't be inlined\n    /******/\n    var __nested_webpack_exports__ = {};\n    /******/\n    __webpack_modules__[\"./src/transformer.ts\"](0, __nested_webpack_exports__);\n    /******/\n    /******/\n    return __nested_webpack_exports__;\n    /******/\n  }();\n});\n\n//# sourceURL=webpack://@easylibs/easylibs/./packages/transformer/dist/transformer.js?");

/***/ }),

/***/ "./packages/utils/dist/utils.js":
/*!**************************************!*\
  !*** ./packages/utils/dist/utils.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n  _createClass(Utils, null, [{\n    key: \"setAudio\",\n    value:\n    /**\n     * CrÃ©e un Ã©lÃ©ment audio avec la source audio spÃ©cifiÃ©e par le chemin audioPath.\n     * @param audioPath Le chemin de la source audio.\n     * @param classname La classe CSS Ã  ajouter Ã  l'Ã©lÃ©ment audio (optionnel).\n     * @returns L'Ã©lÃ©ment audio crÃ©Ã©.\n     */\n    function setAudio(audioPath) {\n      var classname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var audio = document.createElement(\"audio\");\n      if (classname != null) {\n        audio.classList.add(classname);\n      }\n      var source = document.createElement(\"source\");\n      source.src = audioPath;\n      source.type = \"audio/mpeg\";\n      audio.appendChild(source);\n      return audio;\n    }\n    /**\n     * Converts an HTML string into an HTML element or a collection of HTML elements.\n     *\n     * @param textHtml - The HTML string to convert.\n     * @param targetName - The tag name of the target HTML element to create.\n     * @param children - A boolean indicating whether to return all children of the target element.\n     * @returns - Returns the first child of the target element if `children` is `false`, otherwise returns a collection of the element's children. Returns `null` if there are no children.\n     *\n     * This method creates a new HTML element of the type specified by `targetName`, sets its inner HTML to `textHtml`, and returns either the first child of this element or all its children as an HTMLCollection, depending on the value of `children`.\n     * If the HTML content generates no children, the method returns `null`.\n     */\n  }, {\n    key: \"textToHTMLElement\",\n    value: function textToHTMLElement(textHtml) {\n      var targetName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"div\";\n      var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var target = document.createElement(\"\".concat(targetName));\n      target.innerHTML = textHtml;\n      if (true === children) {\n        return target.children;\n      }\n      return target.firstElementChild;\n    }\n    /**\n     * retourne un Ã©lÃ©ment du dom\n     */\n  }, {\n    key: \"$$\",\n    value: function $$(element) {\n      if (typeof element !== \"string\") {\n        return element;\n      } else if (typeof element === \"string\") {\n        var collection = document.querySelectorAll(\"\".concat(element));\n        var el = document.querySelector(\"\".concat(element));\n        if (collection !== null && collection.length > 1) {\n          return collection;\n        }\n        if (el !== null) {\n          return el;\n        }\n      }\n    }\n    /**\n     * Cette fonction permet de convertir un objet NodeList en un tableau d'Ã©lÃ©ments HTML (HTMLElement)\n     * et d'exÃ©cuter une fonction de rappel sur chaque Ã©lÃ©ment du tableau.\n     * @param nodeList Un objet NodeList ou un Ã©lÃ©ment HTML.\n     * Si c'est un NodeList, il sera converti en tableau d'Ã©lÃ©ments HTML.\n     * @param callback Une fonction de rappel Ã  exÃ©cuter sur chaque Ã©lÃ©ment du tableau.\n     * @returns\n     */\n  }, {\n    key: \"processNodes\",\n    value: function processNodes(nodeList) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (node, index) {};\n      if (nodeList instanceof NodeList || Array.isArray(nodeList)) {\n        return Array.from(nodeList).forEach(function (node, i) {\n          callback(node, i);\n        });\n      }\n      if (null !== nodeList && undefined !== nodeList) {\n        return callback(nodeList);\n      }\n    }\n    /**\n     * MÃ©thode qui renvoie une expression rÃ©guliÃ¨re en fonction du type demandÃ©.\n     * @param type Le type d'expression rÃ©guliÃ¨re demandÃ©.\n     * @returns L'expression rÃ©guliÃ¨re correspondante.\n     */\n  }, {\n    key: \"getRegexp\",\n    value: function getRegexp(type) {\n      switch (type) {\n        case \"email\":\n          return new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/i);\n        case \"phone-number\":\n          return new RegExp(/^(0|\\+[1-9][0-9]{0,2}) ?[0-9]+$/);\n        case \"number\":\n          return new RegExp(/^[-+]?[0-9]*\\.?[0-9]+$/);\n        case \"strong-password\":\n          return new RegExp(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/);\n        case \"url-protocol\":\n          return new RegExp(/^(https?:\\/\\/)$/, \"i\");\n        case \"url-domain\":\n          return new RegExp(/^((([a-zA-Z0-9]{1,})[.-]?)+[a-zA-Z]{2,})$/, \"i\");\n        case \"url-ip\":\n          return new RegExp(/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/, \"i\");\n        case \"url-port\":\n          return new RegExp(/^:(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3})$/, \"i\");\n        case \"url-path\":\n          return new RegExp(/^(\\.\\/)?[-a-zA-Z\\d%_.~+\\/]*$/, \"i\");\n        case \"url-query\":\n          return new RegExp(/^(\\?[;&a-zA-Z\\d%_.~+=-]*)$/, \"i\");\n        case \"url-fragment\":\n          return new RegExp(/^#[-a-zA-Z\\d%_.~+/=?&;:!*'()]*$/, \"i\");\n        case \"default-text\":\n          return new RegExp(/^[a-zA-Z -'Ã¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«ÄÃ­Ã¬Ã®Ã¯Ä±Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÅÃ½Ã¿Ã¦ÅÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃIÃÃÃÃÃÃÃÃÃÃÅÃÅ¸ÃÅ]+$/);\n        case \"fr-text\":\n          return new RegExp(/^[A-Za-z' - Ã Ã¢Ã§Ã©Ã¨ÃªÃ«Ã»Ã¦ÅÃÃÃÃÃÃÃÅ]+$/);\n        case \"en-text\":\n          return new RegExp(/^[a-zA-Z '-]{1,40}$/);\n        case \"tr-text\":\n          return new RegExp(/^[A-Za-z Ã§ÄÄ±Ã¶Ã¼ÅÃ¦ÅÃÄIÃÃÅ]+$/);\n        default:\n          throw new Error(\"Type d'expression rÃ©guliÃ¨re non pris en charge.\");\n      }\n    }\n    /**\n     * CrÃ©e une couche superfielle au dessus d'un Ã©lÃ©ment html afin d'empecher tout Ã©vÃ¨nement.\n     * @param tag Le nom de la balise HTML Ã  utiliser comme couche (par dÃ©faut : 'td', idÃ©al pour les tableau html).\n     * @param backgroundColor La couleur d'arriÃ¨re-plan de la zone interdite (par dÃ©faut : '#FFFFFF').\n     * @returns Un Ã©lÃ©ment HTML reprÃ©sentant une zone interdite.\n     */\n  }, {\n    key: \"forbiddener\",\n    value: function forbiddener() {\n      var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"td\";\n      var backgroundColor = arguments.length > 1 ? arguments[1] : undefined;\n      var forbiddenTag = document.createElement(tag);\n      forbiddenTag.setAttribute(\"class\", \"forbidden\");\n      var style = {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        opacity: \".7\",\n        zIndex: \"10\",\n        backgroundColor: backgroundColor ? backgroundColor : \"#FFFFFF\"\n      };\n      Object.assign(forbiddenTag.style, style);\n      return forbiddenTag;\n    }\n    /**\n     * RÃ©duit une chaÃ®ne de texte.\n     * @param text La chaÃ®ne de texte Ã  rÃ©duire.\n     * @param maxLength La longueur maximale de la chaÃ®ne rÃ©sultante (par dÃ©faut : 14).\n     * @returns La chaÃ®ne de texte rÃ©duite.\n     */\n  }, {\n    key: \"truncateChars\",\n    value: function truncateChars(text) {\n      var maxLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 14;\n      text = typeof text === \"string\" ? text.trim() : \"\";\n      if (text.length > maxLength) {\n        return \"\".concat(text.substring(0, maxLength), \"...\");\n      }\n      return text;\n    }\n    /**\n     * Changes the input text type to a number type and performs additional processing\n     * based on the specified parameters.\n     *\n     * @param attr - The CSS selector for the input elements to be processed.\n     * @param limit - (Optional) The maximum allowed value. If provided, input values exceeding this limit will be set to the limit.\n     * @param priceType - (Optional) A boolean flag indicating whether the input represents a price. If true, the input is expected to be a number with an optional decimal part.\n     * @param decimal - (Optional) The number of decimal places to round to. If provided, the input values will be rounded to the specified decimal places.\n     */\n  }, {\n    key: \"changeInputTextTypeToNumberType\",\n    value: function changeInputTextTypeToNumberType(attr, limit) {\n      var priceType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var decimal = arguments.length > 3 ? arguments[3] : undefined;\n      this.processNodes(this.$$(attr), function (element) {\n        var input = element;\n        if (input) {\n          input.addEventListener(\"input\", function () {\n            var regExp = priceType ? /^[0-9]+([.,][0-9]+)?$/ : /[^\\d]/g;\n            if (decimal) {\n              var getValue = input.value.replace(regExp, \"\");\n              input.value = \"\".concat(parseFloat(getValue).toFixed(decimal));\n            } else {\n              input.value = input.value.replace(regExp, \"\");\n            }\n            if (limit && parseInt(input.value) > limit) {\n              input.value = \"\".concat(limit);\n            }\n          });\n        }\n      });\n    }\n    /**\n     * The function is used to disable specific elements (by default td tags) inside a table when a certain button is clicked.\n     * It accepts several parameters: the tag to be disabled, the target element to be disabled, the trigger element (button),\n     * and the background color for the forbidden tag.\n     *\n     * @param tag - The tag of the element to be disabled (default: \"td\").\n     * @param target - The target element to be disabled (default: undefined).\n     * @param trigger - The trigger element (button) to activate the function (default: undefined).\n     * @param backgroundColor - The background color for the forbidden tag (default: undefined).\n     */\n  }, {\n    key: \"disablor\",\n    value: function disablor() {\n      var _this = this;\n      var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"td\";\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n      var trigger = arguments.length > 2 ? arguments[2] : undefined;\n      var backgroundColor = arguments.length > 3 ? arguments[3] : undefined;\n      var buttons = document.querySelectorAll(\"[disablor],[self-disablor]\");\n      try {\n        if (!trigger && !buttons) {\n          throw new Error(\"Aucun bouton avec l'attribut <disablor> n'est dÃ©tectÃ©, vous pouvez le passer manuellement\");\n        }\n        this.processNodes(buttons, function (button) {\n          button.addEventListener(\"click\", function () {\n            var self = button.hasAttribute(\"self-disablor\");\n            var item = self ? button : button.closest(\"[disablor]\");\n            if (!target && !item) {\n              throw new Error(\"Aucun Ã©lÃ©ment Ã  dÃ©sactiver contenant l'attribut <disablor> n'est dÃ©tectÃ©, vous pouvez le passer manuellement\");\n            }\n            if (item) {\n              item.style.position = \"relative\";\n              item.insertBefore(_this.forbiddener(tag, backgroundColor), item.firstChild);\n              if (item instanceof HTMLButtonElement) {\n                item.setAttribute(\"disabled\", \"true\");\n              }\n            }\n          });\n        });\n      } catch (error) {\n        console.error(\"Une erreur s'est produit: \", error);\n      }\n    }\n    /**\n     * Adds an asterisk indicator to labels associated with required form fields.\n     * The asterisk is inserted as an SVG element, and labels are selected based on the presence\n     * of the 'required-field' attribute. The function utilizes the processNodes method\n     * to iterate through the matched labels and append the asterisk.\n     */\n  }, {\n    key: \"setAsteriskToRequiredField\",\n    value: function setAsteriskToRequiredField() {\n      var _this2 = this;\n      var setIcon = function setIcon(svgString) {\n        var asterisk = _this2.textToHTMLElement(svgString);\n        var labels = document.querySelectorAll(\"label[required-field]\");\n        asterisk.style.color = \"#f89a9b\";\n        asterisk.style.width = \"10px\";\n        asterisk.style.height = \"10px\";\n        if (labels) {\n          _this2.processNodes(labels, function (label) {\n            var clonedAsterisk = asterisk.cloneNode(true);\n            label.appendChild(clonedAsterisk);\n          });\n        }\n      };\n      var cacheIcon = sessionStorage.getItem(\"asterisk\");\n      if (cacheIcon) return setIcon(cacheIcon);\n      var svgUrl = \"https://raw.githubusercontent.com/Nelsallg/easylibs/1.0.0/packages/utils/dist/assets/asterisk.svg\";\n      fetch(svgUrl).then(function (response) {\n        return response.text();\n      }).then(function (svgString) {\n        setIcon(svgString);\n        sessionStorage.setItem(\"asterisk\", svgString);\n      })[\"catch\"](function (error) {\n        console.error(\"Erreur lors du chargement du fichier SVG:\", error);\n      });\n    }\n    /**\n     * This method checks if the object contains a key with the given substring.\n     * @param object The object to be searched.\n     * @param substring The substring to search for.\n     * @param getKey An optional parameter to determine the type of return value.\n     *               If true, the method will return the key as a string.\n     *               If false or not provided, the method will return the value corresponding to the key.\n     * @returns The value or key of the first matching property if found, otherwise false.\n     */\n  }, {\n    key: \"hasKeyWithNameSubstring\",\n    value: function hasKeyWithNameSubstring(object, substring, getKey) {\n      for (var key in object) {\n        if (key.includes(substring)) {\n          if (undefined === getKey || false === getKey) {\n            return object[key];\n          }\n          if (true === getKey) {\n            return key;\n          }\n        }\n      }\n      return false;\n    }\n    /**\n     * This method searches for an object's property by its key or short key.\n     * @param object The object to be searched.\n     * @param keyOrShortKey The key or short key to search for.\n     * @param key An optional parameter to determine the type of return value.\n     *            If true, the function will return the key as a string.\n     *            If false or not provided, the function will return the value corresponding to the key.\n     * @returns The value or key of the first matching property if found, otherwise false.\n     */\n  }, {\n    key: \"findObjectDataByKeyName\",\n    value: function findObjectDataByKeyName(object, keyOrShorKey, key) {\n      Object.keys(object).forEach(function (key) {\n        if (key.includes(keyOrShorKey)) {\n          return object[key];\n        }\n      });\n      return false;\n    }\n    /**\n    * Finds the first occurrence of a character in the given string up to the specified limit.\n    *\n    * @param string - The string to search.\n    * @param limit - The limit up to which to search for the character.\n    * @param returnBool - Optional. If true, returns a boolean indicating whether the character was found. If false or not provided, returns the character found or null if not found.\n    * @returns  Returns the character found, a boolean indicating whether the character was found (if `returnBool` is true), or null if the character was not found.\n    */\n  }, {\n    key: \"findChar\",\n    value: function findChar(string, limit) {\n      var returnBool = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      for (var i = 0; i <= limit; i++) {\n        var index = string.indexOf(i.toString());\n        if (index !== -1) {\n          return returnBool ? true : i.toString();\n        }\n      }\n      return returnBool ? false : null;\n    }\n  }, {\n    key: \"findComputedStyle\",\n    value: function findComputedStyle(element, property) {\n      var styles = window.getComputedStyle(element);\n      var propertiesObject = {};\n      try {\n        if (!element) {\n          throw new Error(\"Element not found\");\n        }\n        if (!property) {\n          throw new Error(\"Property is required\");\n        }\n        if (Array.isArray(property) && property.length > 0) {\n          property.forEach(function (props) {\n            propertiesObject[\"\".concat(props)] = styles.getPropertyValue(\"\".concat(props));\n          });\n          return propertiesObject;\n        }\n        if (typeof property === \"string\") {\n          return styles.getPropertyValue(\"\".concat(property));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    /**\n     * A function to escape special characters in a string using the DOM API.\n     *\n     * @param str - The input string to be escaped.\n     * @returns - The escaped string with special characters replaced with their HTML entity equivalents.\n     */\n  }, {\n    key: \"escape\",\n    value: function escape(str) {\n      if (!str) {\n        return \"\";\n      }\n      var div = document.createElement(\"div\");\n      div.appendChild(document.createTextNode(str));\n      return div.innerHTML;\n    }\n    /**\n     * This function takes an HTMLElement and a target string.\n     * It returns the first Element with a matching target that is a sibling of the referent element or any of its previous siblings.\n     * If no such element is found, it returns null.\n     * @param referent - The starting point of the search.\n     * @param target - The CSS selector used to find the desired element.\n     * @returns The first Element with a matching target, or null if no such element is found.\n     */\n  }, {\n    key: \"findHTMLElementBy\",\n    value: function findHTMLElementBy(referent, target) {\n      var currentElement = referent;\n      if (currentElement) {\n        while (currentElement = currentElement.previousElementSibling) {\n          var charCounterSpan = currentElement.querySelector(target);\n          if (charCounterSpan) {\n            return charCounterSpan;\n          }\n        }\n      }\n      return null;\n    }\n    /**\n     * This function takes an object containing HTML attributes and returns a string representing the attributes.\n     * If no attributes are provided, it returns an empty string.\n     * @param attributes - An object containing HTML attributes.\n     * @returns A string representing the attributes.\n     */\n  }, {\n    key: \"formatHTMLAttributes\",\n    value: function formatHTMLAttributes(attributes) {\n      var attrs = \"\";\n      if (attributes) {\n        for (var _i = 0, _Object$entries = Object.entries(attributes); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n          if (key) {\n            attrs += \"\".concat(key, \"='\").concat(value, \"'\");\n          }\n        }\n      }\n      return attrs.trim();\n    }\n    /**\n     * Cette fonction redimensionne automatiquement un Ã©lÃ©ment \"select\"\n     * en fonction de la longueur du texte sÃ©lectionnÃ©\n     * @param select\n    */\n  }, {\n    key: \"autoResizeSelect\",\n    value: function autoResizeSelect(select) {\n      var field = this.$$(select);\n      if (field instanceof HTMLSelectElement) {\n        field.addEventListener('change', function (event) {\n          var tempSelect = document.createElement('select'),\n            tempOption = document.createElement('option');\n          if (null !== event.target && event.target instanceof HTMLSelectElement) {\n            tempOption.textContent = event.target.options[event.target.selectedIndex].text;\n            tempSelect.style.cssText += \"\\n                      visibility: hidden;\\n                      position: fixed;\\n                      \";\n            tempSelect.appendChild(tempOption);\n            event.target.after(tempSelect);\n            var tempSelectWidth = tempSelect.getBoundingClientRect().width;\n            console.log({\n              tempSelect: tempSelect\n            });\n            event.target.style.width = \"\".concat(tempSelectWidth, \"px\");\n            tempSelect.remove();\n          }\n        });\n        field.dispatchEvent(new Event('change'));\n      } else {\n        console.error(\"Le paramÃ¨tre n'est pas un Ã©lÃ©ment Select\");\n      }\n      ;\n    }\n  }]);\n  return Utils;\n}();\nexports[\"default\"] = Utils;\n\n//# sourceURL=webpack://@easylibs/easylibs/./packages/utils/dist/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});